dnl> TODOs

dnl>   should use STDC_HEADERS instead of __STDC__
dnl>   Cleanup Autoconf2 (obsolete Autoconf1 macros still in use)
dnl>   Solaris 8 -- libgcc_s -- need test

dnl> -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
dnl>
dnl> Copyright (c) 1998 - 2003 Luca Deri <deri@ntop.org>
dnl>                           Rocco Carbone <rocco@ntop.org>
dnl>                       and Burton M. Strauss III <burton@ntopsupport.com>
dnl>
dnl> Written Oct2002 by Burton M. Strauss III <burton@ntopsupport.com>
dnl>     (Loosely based on the earlier ntop version)
dnl>
dnl> -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
dnl>
dnl> This program is free software; you can redistribute it and/or modify
dnl> it under the terms of the GNU General Public License as published by
dnl> the Free Software Foundation; either version 2 of the License, or
dnl> (at your option) any later version.
dnl>
dnl> This program is distributed in the hope that it will be useful,
dnl> but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl> MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl> GNU General Public License for more details.
dnl>
dnl> You should have received a copy of the GNU General Public License
dnl> along with this program; if not, write to the Free Software
dnl> Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
dnl>

dnl>
dnl> -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
dnl> this file is processed via 'autoconf' to produce the 'configure' script
dnl> -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
dnl>

dnl>
dnl> Initialization lines.
dnl>   Note that the AC_INIT must, simply MUST be the first line.  
dnl>   Anything before it is ignored in autoconf 2.5x (and beyond?)
dnl>
dnl>   Edit the version # in the AC_INIT line to roll the version.
dnl>   Edit NTOP_VERSION_EXTRA to put something extra (e.g. SourceForge rpm version"
dnl>       into the stamp.
dnl>
AC_INIT([ntop],[2.2.2])
AC_PREREQ([2.50])
SCRIPTVER="v2.2.2.105-2003-06-09"

dnl>
dnl> generate the config header
dnl>
umask 002
AM_CONFIG_HEADER(config.h)

HAS_ERROR=
HAS_WARNING=

NTOP_VERSION_EXTRA=""

echo
echo "Welcome to $PACKAGE_NAME, Version $PACKAGE_VERSION $NTOP_VERSION_EXTRA"
echo "  copyright (c) 1998-2003 Luca Deri <deri@ntop.org>"
echo
echo          "Configuration script version $SCRIPTVER"
echo

CONFIGURE_PARAMETERS=$*
echo
echo "Configuring ${PACKAGE_NAME} according to your request(s):"
echo "   ./configure ${CONFIGURE_PARAMETERS}"
echo

dnl> This has to be here due to some odd dependency...
AC_CANONICAL_TARGET

echo "*******************************************************************"
echo "*                                                                 *"
echo "* NOTICE:  I know you're used to ignoring output from ./configure *"
echo "*                                                                 *"
echo "*          ntop has a lot of complexity and interdependences.     *"
echo "*                                                                 *"
echo "*          Please, please AT LEAST read the stuff in these        *"
echo "*          boxes!                                                 *"
echo "*                                                                 *"
echo "*>>> The ACTION taken is shown prefixed '>>>'                     *"
echo "*                                                                 *"
echo "*    If the ACTION is unacceptable,                               *"
echo "*??? The REMEDIATION plan is shown prefixed with '???'            *"
echo "*                                                                 *"
echo "*******************************************************************"
echo

dnl> early since we need it for --enable-showoses and autotool version check.
AC_PROG_AWK

echo "  Checking for autoheader ..."
AC_PATH_PROG(AUTOHEADER, autoheader)

if test "x${ac_cv_prog_AUTOHEADER}" = "x"; then
 mv Makefile.in Makefile.in.tmp
 cat Makefile.in.tmp | sed -e "s|@AUTOHEADER@|${SHELL} `pwd`/missing --run echo|" > Makefile.in
 rm -f Makefile.in.tmp
 mv plugins/Makefile.in plugins/Makefile.in.tmp
 cat plugins/Makefile.in.tmp | sed -e "s|@AUTOHEADER@|${SHELL} `pwd`/missing --run echo|" > plugins/Makefile.in
 rm -f plugins/Makefile.in.tmp
 mv plugins/pep/Makefile.in plugins/pep/Makefile.in.tmp
 cat plugins/pep/Makefile.in.tmp | sed -e "s|@AUTOHEADER@|${SHELL} `pwd`/missing --run echo|" > plugins/pep/Makefile.in
 rm -f plugins/pep/Makefile.in.tmp
 mv ntcsh/Makefile.in ntcsh/Makefile.in.tmp
 cat ntcsh/Makefile.in.tmp | sed -e "s|@AUTOHEADER@|${SHELL} `pwd`/missing --run echo|" > ntcsh/Makefile.in
 rm -f ntcsh/Makefile.in.tmp
fi

echo "  Checking for aclocal ..."
AC_PATH_PROG(ACLOCAL, aclocal)

if test "x${ac_cv_prog_ACLOCAL}" = "x"; then
 mv Makefile.in Makefile.in.tmp
 cat Makefile.in.tmp | sed -e "s|@ACLOCAL@|${SHELL} `pwd`/missing --run echo|" > Makefile.in
 rm -f Makefile.in.tmp
 mv plugins/Makefile.in plugins/Makefile.in.tmp
 cat plugins/Makefile.in.tmp | sed -e "s|@ACLOCAL@|${SHELL} `pwd`/missing --run echo|" > plugins/Makefile.in
 rm -f plugins/Makefile.in.tmp
 mv plugins/pep/Makefile.in plugins/pep/Makefile.in.tmp
 cat plugins/pep/Makefile.in.tmp | sed -e "s|@AUTOHEADER@|${SHELL} `pwd`/missing --run echo|" > plugins/pep/Makefile.in
 rm -f plugins/pep/Makefile.in.tmp
 mv ntcsh/Makefile.in ntcsh/Makefile.in.tmp
 cat ntcsh/Makefile.in.tmp | sed -e "s|@ACLOCAL@|${SHELL} `pwd`/missing --run echo|" > ntcsh/Makefile.in
 rm -f ntcsh/Makefile.in.tmp
fi

echo "  Checking for automake ..."
AC_PATH_PROG(AUTOMAKE, automake)

if test "x${ac_cv_prog_AUTOMAKE}" != "x"; then

dnl>
dnl> Check versions of autotools

dnl> First check minimum versions...
echo "  Checking automake version..."
automakeversion=`automake --version | grep ^automake | ${ac_cv_prog_AWK} '{ print $4 }'`
case "${automakeversion}" in
    *1\.[[0-5]]*)
        echo "*******************************************************************"
        echo "*                                                                 *"
        echo "*ERROR: ntop requires automake version 1.6 or newer...            *"
        echo "*                                                                 *"
        echo "*  You are executing ${automakeversion}"
        echo "*                                                                 *"
        echo "*>>>   Unable to proceed with your request, aborting ./configure! *"
        echo "*                                                                 *"
        echo "*???    Suggestion - Install a private copy of automake 1.6.3.    *"
        echo "*???                 It's quite easy and does NOT require root:   *"
        echo "*                                                                 *"
        echo "*   Download automake 1.6.3 from gnu                              *"
        echo "*     $ wget http://ftp.gnu.org/gnu/automake/automake-1.6.3.tar.gz*"
        echo "*                                                                 *"
        echo "*   Untar it                                                      *"
        echo "*     $ tar xfvz automake-1.6.3.tar.gz                            *"
        echo "*                                                                 *"
        echo "*   Make it                                                       *"
        echo "*     $ cd automake-1.6.3                                         *"
        echo "*     $ ./configure --prefix=/home/<whatever>/automake163         *"
        echo "*     $ make                                                      *"
        echo "*     $ make install                                              *"
        echo "*                                                                 *"
        echo "*   Add it to your path.  Under bash do this:                     *"
        echo "*     $ PATH=/home/<whatever>automake163/bin:\$PATH                *"
        echo "*     $ export PATH                                               *"
        echo "*                                                                 *"
        echo "*******************************************************************"
        exit 1
        ;;
esac
else
 mv Makefile.in Makefile.in.tmp
 cat Makefile.in.tmp | sed -e "s|@AUTOMAKE@|${SHELL} `pwd`/missing --run echo|" > Makefile.in
 rm -f Makefile.in.tmp
 mv plugins/Makefile.in plugins/Makefile.in.tmp
 cat plugins/Makefile.in.tmp | sed -e "s|@AUTOMAKE@|${SHELL} `pwd`/missing --run echo|" > plugins/Makefile.in
 rm -f plugins/Makefile.in.tmp
 mv plugins/pep/Makefile.in plugins/pep/Makefile.in.tmp
 cat plugins/pep/Makefile.in.tmp | sed -e "s|@AUTOHEADER@|${SHELL} `pwd`/missing --run echo|" > plugins/pep/Makefile.in
 rm -f plugins/pep/Makefile.in.tmp
 mv ntcsh/Makefile.in ntcsh/Makefile.in.tmp
 cat ntcsh/Makefile.in.tmp | sed -e "s|@AUTOMAKE@|${SHELL} `pwd`/missing --run echo|" > ntcsh/Makefile.in
 rm -f ntcsh/Makefile.in.tmp
fi

echo "  Checking for autoconf ..."
AC_PATH_PROG(AUTOCONF, autoconf)

if test "x${ac_cv_prog_AUTOCONF}" != "x"; then
echo "  Checking autoconf version..."
case "${autoconfversion}" in
    *2\.[[0-4]]*)
        echo "*******************************************************************"
        echo "*                                                                 *"  
        echo "*ERROR: ntop requires autoconf version 2.50 or newer...           *"  
        echo "*                                                                 *"  
        echo "*  You are executing ${autoconfversion}"
        echo "*                                                                 *"  
        echo "*>>>   Unable to proceed with your request, aborting ./configure! *"
        echo "*                                                                 *"  
        echo "*???    Suggestion - Install a private copy of autoconf 2.5x.     *"  
        echo "*???                 It's quite easy and does NOT require root:   *"  
        echo "*                                                                 *"  
        echo "*   Download autoconf 2.57 from gnu                               *"  
        echo "*     $ wget http://ftp.gnu.org/gnu/autoconf/autoconf-2.57.tar.gz *"
        echo "*                                                                 *"  
        echo "*   Untar it                                                      *"  
        echo "*     $ tar xfvz autoconf-2.57.tar.gz                             *"  
        echo "*                                                                 *"  
        echo "*   Make it                                                       *"  
        echo "*     $ cd autoconf-2.57                                          *"  
        echo "*     $ ./configure --prefix=/home/<whatever>/autoconf257         *"  
        echo "*     $ make                                                      *"  
        echo "*     $ make install                                              *"  
        echo "*                                                                 *"  
        echo "*   Add it to your path.  Under bash do this:                     *"  
        echo "*     $ PATH=/home/<whatever>autoconf257/bin:\$PATH                *"  
        echo "*     $ export PATH                                               *"  
        echo "*                                                                 *"
        echo "*******************************************************************"
        exit 1
        ;;
esac
else
 mv Makefile.in Makefile.in.tmp
 cat Makefile.in.tmp | sed -e "s|@AUTOCONF@|${SHELL} `pwd`/missing --run echo|" > Makefile.in
 rm -f Makefile.in.tmp
 mv plugins/Makefile.in plugins/Makefile.in.tmp
 cat plugins/Makefile.in.tmp | sed -e "s|@AUTOCONF@|${SHELL} `pwd`/missing --run echo|" > plugins/Makefile.in
 rm -f plugins/Makefile.in.tmp
 mv plugins/pep/Makefile.in plugins/pep/Makefile.in.tmp
 cat plugins/pep/Makefile.in.tmp | sed -e "s|@AUTOHEADER@|${SHELL} `pwd`/missing --run echo|" > plugins/pep/Makefile.in
 rm -f plugins/pep/Makefile.in.tmp
 mv ntcsh/Makefile.in ntcsh/Makefile.in.tmp
 cat ntcsh/Makefile.in.tmp | sed -e "s|@AUTOCONF@|${SHELL} `pwd`/missing --run echo|" > ntcsh/Makefile.in
 rm -f ntcsh/Makefile.in.tmp
fi

dnl> Then check for a match with the scripts...
dnl>
dnl>      We know that all of the 1.6.x [1..3] versions of automake work ok
dnl>      and the 2.5x [1..7] of autoconf work ok too.
dnl>      So we could compress them to save a few recreations, but that's 
dnl>      then got to be maintained.  So exact match or recreate...
dnl>
if test -f /tmp/autotoolversions; then
     rm -f /tmp/autotoolversions
fi
if test "x${ac_cv_prog_AUTOMAKE}" != "x"; then
  automake --version | head -n 1 | ${ac_cv_prog_AWK} '{ gsub(/\)/, "", $3); print "     " $3 " " $4 }'  >/tmp/autotoolversions
fi
if test "x${ac_cv_prog_AUTOCONF}" != "x"; then
  autoconf --version | head -n 1 | ${ac_cv_prog_AWK} '{ gsub(/\)/, "", $3); print "     " $3 " " $4 }' >>/tmp/autotoolversions
fi

case "${target}:${CC}" in
    *-*-darwin*:* )
    glibtool --version | head -n 1  | ${ac_cv_prog_AWK} '{ gsub(/\)/, "", $3); print "     " $3 " " $4 }' >>/tmp/autotoolversions
    ;;
    * )
    libtool --version | head -n 1  | ${ac_cv_prog_AWK} '{ gsub(/\)/, "", $3); print "     " $3 " " $4 }' >>/tmp/autotoolversions
    ;;
esac

touch autotoolversions
diff autotoolversions /tmp/autotoolversions >/dev/null 2>/dev/null 
rc=$?

if test "x${ac_cv_prog_AUTOMAKE}" = "x" -o "x${ac_cv_prog_AUTOCONF}" = "x"; then
 rc=0
fi

if test ".${rc}" = ".1"; then
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* WARNING: Auto* tools installed on this host differ from the ones"
    echo "*          that the ntop distribution uses:"
    echo "*"
    echo "* This host:"
    cat /tmp/autotoolversions
    echo "*"
    echo "* ntop distribution:"
    cat autotoolversions
    echo "*"
    echo "*>>> Version conflicts may cause configure/compile/link problems."
    echo "*"
    echo "*>>> We are going to:"
    echo "*>>>     1. delete the existing generated files"
    echo "*>>>     2. use the auto* tools to recreate them"
    echo "*                (if you do not have automake and autoconf installed,"
    echo "*                 this will fail)"
    echo "*                (if you do not have libtool installed, it will"
    echo "*                 not give an error message, but will fail later)"
    echo "*>>>     3. tell you to rerun ./configure"
    echo "*"
    echo "*    Please, tell the ntop-dev mailing list if there are problems..."
    echo "*"
    echo "*******************************************************************"
    echo
    echo "1. delete the existing generated files:"
    for i in acinclude.m4 \
             aclocal.m4 \
             config.h.in \
             Makefile.in \
             configure \
             Makefile; do
        if test -f $i; then
             echo "     .... $i"
             rm -f $i
        fi
    done
    echo "    done!"
    echo
    echo "2. use the auto* tools to recreate them:"
    echo "    .... cat acinclude.m4.ntop libtool.m4.in > acinclude.m4"
    cat acinclude.m4.ntop libtool.m4.in > acinclude.m4
    rc=$?
    if test ".${rc}" != ".0"; then
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* ERROR: Unable to run cat acinclude.m4.ntop libtool.m4.in > acinclude.m4"
        echo "*"
        echo "*    We are going to give up."
        echo "*"
        echo "*>>> Please correct the problem and rerun"
        echo "*"
        echo "*******************************************************************"
        echo
        if test -f /tmp/autotoolversions; then
            rm -f /tmp/autotoolversions
        fi
        exit 1
    fi
    for i in aclocal \
             autoheader \
             "automake --gnu --copy --add-missing" \
             autoconf; do
        echo "    .... $i"
        $i
        rc=$?
        if test ".${rc}" != ".0"; then
            echo
            echo "*******************************************************************"
            echo "*"
            echo "* ERROR: Unable to run $i"
            echo "*"
            echo "*    We are going to give up."
            echo "*"
            echo "*>>> Please correct the problem with the auto* tools and rerun"
            echo "*"
            echo "*******************************************************************"
            echo
            if test -f /tmp/autotoolversions; then
                rm -f /tmp/autotoolversions
            fi
            exit 1
        fi
    done

    cp -f /tmp/autotoolversions autotoolversions

    if test -f /tmp/autotoolversions; then
        rm -f tmp/autotoolversions
    fi

    echo
    echo "*******************************************************************"
    echo "*                                                                 *"
    echo "*   Now, rerun ./configure                                        *"
    echo "*                                                                 *"
    echo "*******************************************************************"
    echo
    exit 1
else
    if test -f /tmp/autotoolversions; then
        rm -f /tmp/autotoolversions
    fi
    echo "auto* tools are OK, continuing with ./configure"
fi

dnl> autoheader stuff...just ignore
AH_TEMPLATE([HAVE_INT16_T],   [Define for int16 typedef])
AH_TEMPLATE([HAVE_INT32_T],   [Define for int32 typedef])
AH_TEMPLATE([HAVE_INT64_T],   [Define for int64 typedef])
AH_TEMPLATE([HAVE_INT8_T],    [Define for int8 typedef])
AH_TEMPLATE([HAVE_UINT64_T],  [Define for unsigned int 64 typedef])
AH_TEMPLATE([HAVE_U_INT16_T], [Define for unsigned int 16 typedef])
AH_TEMPLATE([HAVE_U_INT32_T], [Define for unsigned int 32 typedef])
AH_TEMPLATE([HAVE_U_INT64_T], [Define for unsigned int 64 typedef])
AH_TEMPLATE([HAVE_U_INT8_T],  [Define for unsigned int 8 typedef])
AH_TEMPLATE([HAVE_LIBWRAP],   [Define for tcp wrappers (-lwrap)])
dnl> end autoheader stuff

dnl> Basic sanity check ... does ntop.c exist?
AC_CONFIG_SRCDIR([ntop.c])

dnl> force configure to use current directory
AC_CONFIG_AUX_DIR(.)

AM_INIT_AUTOMAKE()
AC_MSG_CHECKING([for aclocal.m4])
AC_CHECK_FILE(aclocal.m4, ,
    echo ""
    echo "Invoking aclocal to create aclocal.m4..."
    aclocal
    echo ""
)
AC_CHECK_FILE(depcomp, , [

    echo ""
    echo "depcomp missing... will install it in this ntop directory."
    echo "  Invoking automake to copy depcomp..."
    automake --gnu --copy --add-missing
    echo ""
])

AC_ARG_ENABLE(void,
              [  +--ntop-specific:------------------------------------------------------------+])
AC_ARG_WITH(void,
              [  +--external-packages:--------------------------------------------------------+])

AC_ARG_ENABLE(mt,
              [  --disable-mt                disable multithread support [[default=enabled]]],
              ac_disable_multithread="yes",
              ac_disable_multithread="no")

AC_ARG_WITH(ssl,
              [  --without-ssl               disable HTPPS support [[default=enabled]]],
              ac_disable_openssl="yes",
              ac_disable_openssl="no")

AC_ARG_ENABLE(sslv3,
              [  --enable-sslv3              enable ssl v3 support [[default=disabled]]],
              ac_enable_sslv3="yes",
              ac_enable_sslv3="no")

AC_ARG_ENABLE(sslwatchdog,
              [  --enable-sslwatchdog        enable Watchdog for ssl hangups [[default=disabled]]],
              ac_enable_sslwatchdog="yes",
              ac_enable_sslwatchdog="no")

AC_ARG_WITH(tcpwrap,
              [  --with-tcpwrap              enable use of TCP Wrapper [[default=disabled]]],
              ac_enable_tcpwrap="yes",
              ac_enable_tcpwrap="no")

AC_ARG_ENABLE(plugins,
              [  --disable-plugins           disable compilation of plugins [[default=enabled]]],
              ac_disable_plugins="yes",
              ac_disable_plugins="no")

AC_ARG_ENABLE(  static-plugins,
              [  --enable-static-plugins     Enable static linked plugins [sntop, default=dynamic]]],
              ac_enable_static_plugins="yes",
	      ac_enable_static_plugins="no")

AC_ARG_ENABLE(ntcsh,
              [  --enable-ntcsh              enable ntcsh command line version [[default=enabled]]],
              ac_disable_ntcsh="yes",
              ac_disable_ntcsh="no")

AC_ARG_ENABLE(ignoresigpipe,
              [  --enable-ignoresigpipe      Ignore SIGPIPE errors [[default=do not ignore]]],
              ac_enable_ignoresigpipe="yes",
              ac_enable_ignoresigpipe="no")

AC_ARG_ENABLE(i18n,
              [  --enable-i18n               Enable (limited) internationalization [[default=disabled]]],
              ac_enable_i18n="yes",
              ac_enable_i18n="no")

AC_ARG_ENABLE(xmldump,
              [  --enable-xmldump            Enable xml-based data dump [[default=disabled]]],
              ac_enable_xmldump="yes",
              ac_enable_xmldump="no")

dnl>
dnl> Define the "WITH"s for package root directories ... deal with these later...
dnl>
AC_ARG_WITH(void,
              [  +-External-source-locations:-------------------------------------------------+])

AC_ARG_WITH(  pcap-root,
              [  --with-pcap-root=DIR        LBNL pcap located in DIR],
              PCAP_DIRECTORY="$withval",
              PCAP_DIRECTORY=)
AC_ARG_WITH(  pcap-lib,
              [  --with-pcap-lib=DIR          or libpcap located in DIR],
              PCAP_LIB="$withval",
              PCAP_LIB=)
AC_ARG_WITH(  pcap-include,
              [  --with-pcap-include=DIR      or pcap.h located in DIR],
              PCAP_INCLUDE="$withval",
              PCAP_INCLUDE=)

AC_ARG_WITH(  ossl-root,
              [  --with-ossl-root=DIR        openSSL located in DIR],
              OSSL_DIRECTORY="$withval",
              OSSL_DIRECTORY=)
AC_ARG_WITH(  ossl-lib,
              [  --with-ossl-lib=DIR          or libssl located in DIR],
              OSSL_LIB="$withval",
              OSSL_LIB=)
AC_ARG_WITH(  ossl-include,
              [  --with-ossl-include=DIR      or ssl.h located in DIR],
              OSSL_INCLUDE="$withval",
              OSSL_INCLUDE=)

AC_ARG_WITH(  gdbm-lib,
              [  --with-gdbm-lib=DIR          or libgdbm located in DIR],
              GDBM_LIB="$withval",
              GDBM_LIB=)
AC_ARG_WITH(  gdbm-include,
              [  --with-gdbm-include=DIR      or gdbm.h located in DIR],
              GDBM_INCLUDE="$withval",
              GDBM_INCLUDE=)

AC_ARG_WITH(  zlib-lib,
              [  --with-zlib-lib=DIR          or libz located in DIR],
              ZLIB_LIB="$withval",
              ZLIB_LIB=)
AC_ARG_WITH(  zlib-include,
              [  --with-zlib-include=DIR      or zlib.h located in DIR],
              ZLIB_INCLUDE="$withval",
              ZLIB_INCLUDE=)

AC_ARG_WITH(  libpng-lib,
              [  --with-libpng-lib=DIR         or libpng located in DIR],
              LIBPNG_LIB="$withval",
              LIBPNG_LIB=)
AC_ARG_WITH(  libpng-include,
              [  --with-libpng-include=DIR     or png.h located in DIR],
              LIBPNG_INCLUDE="$withval",
              LIBPNG_INCLUDE=)

AC_ARG_WITH(  localedir,
              [  --with-localedir=DIR        LOCALE files located in DIR (i18n)],
              LOCALEDIR="$withval",
              LOCALEDIR=)

AC_ARG_WITH(  xml2-lib,
              [  --with-xml2-lib=DIR           or libxml2 located in DIR],
              XML2_LIB="$withval",
              XML2_LIB=)
AC_ARG_WITH(  xml2-include,
              [  --with-xml2-include=DIR       or .h located in DIR],
              XML2_INCLUDE="$withval",
              XML2_INCLUDE=)

AC_ARG_WITH(  gdome-lib,
              [  --with-gdome-lib=DIR          or libgdome located in DIR],
              GDOME_LIB="$withval",
              GDOME_LIB=)
AC_ARG_WITH(  gdome-include,
              [  --with-gdome-include=DIR      or .h located in DIR],
              GDOME_INCLUDE="$withval",
              GDOME_INCLUDE=)

AC_ARG_WITH(  glib-lib,
              [  --with-glib-lib=DIR           or libglib located in DIR],
              GLIB_LIB="$withval",
              GLIB_LIB=)
AC_ARG_WITH(  glib-include,
              [  --with-glib-include=DIR       or .h located in DIR],
              GLIB_INCLUDE="$withval",
              GLIB_INCLUDE=)

AC_ARG_WITH(  glibconfig-root,
              [  --with-glibconfig-root=DIR  glibconfig.h source in DIR],
              GLIBCONFIG_DIRECTORY="$withval",
              GLIBCONFIG_DIRECTORY=)

AC_ARG_ENABLE(showoses,
              [  --enable-showoses           display OS Support information.],
              [echo
               echo  "Showing OS support information... one second"
               echo
               if test ".${ac_cv_prog_AWK}" = "."; then
                   echo "  Sorry, unable to honor your request - no awk appears to be available"
                   echo
                   exit 1
               fi
               if test ! -r configure.in; then
                   echo "  Sorry, unable to find the configure.in script in this directory."
                   exit 1
               fi
               if test ! -r utils/showoses.awk; then
                   echo "  Sorry, unable to find the showoses.awk script in the utils/ directory."
                   exit 1
               fi
               ${ac_cv_prog_AWK} -f utils/showoses.awk configure.in
               echo
               exit 0
])

AC_ARG_ENABLE(iknowbetter,
              [  --enable-iknowbetter        Override WILLFAIL],
              ac_willfailoverride="yes",
              ac_willfailoverride="no")

AC_ARG_ENABLE(void,
              [  +----------------------------------------------------------------------------+])
AC_ARG_WITH(void,
              [  +----------------------------------------------------------------------------+])


dnl> Handle the root -> lib/include settings
NTOP_SET_LIBINC(PCAP)
NTOP_SET_LIBINC(GDBM)
NTOP_SET_LIBINC(OSSL)
NTOP_SET_LIBINC(GD)
NTOP_SET_LIBINC(ZLIB)
NTOP_SET_LIBINC(LIBPNG)
if test ".${ac_enable_xmldump}" = ".yes"; then
NTOP_SET_LIBINC(XML2)
NTOP_SET_LIBINC(GDOME)
fi
NTOP_SET_LIBINC(GLIB)
dnl> From here on out, we only use the _INCLUDE and _LIB except for locale and glibconfig

if test ".${ac_debug}" = ".yes"; then
    echo "G-config: ${GLIBCONFIG_DIRECTORY}"
    echo "  locale: ${LOCALEDIR}"
fi

# Set constants and defaults
MYRRD=`pwd`/myrrd
AS=
CCLD=
DEFS="-DHAVE_CONFIG_H"
DLLTOOL=
DYN_FLAGS=
EXEEXT=
INCS=-I$MYRRD
LIBS=
NTCSH=
OBJDUMP=
OBJEXT=o
SO_VERSION_PATCH=

dnl>
dnl> Yes, we want to minimize the amount of work before we tell
dnl> the user we can't compile for this host, but this has to
dnl> to preceed the OS stuff so $CC is set.
dnl>

echo
echo "Checking C compiler program and features..."
echo 
AM_PROG_CC_STDC
if test ".${ac_cv_prog_cc_stdc}" = ".no"; then
    echo 
    echo "*******************************************************************"
    echo "*"
    echo "* WARNING: Attempting to configure for non ANSI standard C."
    echo "*"
    echo "*>>> This is unsupported."
    echo "*>>> It will probably fail."
    echo "*"
    echo "*    You are welcome to try - but please, keep the ntop-dev"
    echo "*    mailing list updated with your successes or failures..."
    echo "*"
    echo "*******************************************************************"
    echo
    HAS_WARNING="yes"
fi

if test ".${ac_debug}" = ".yes"; then
    echo "DEBUG:   CC starts as '${CC}')"
    echo "DEBUG:   CFLAGS as    '${CFLAGS}')"
fi

echo
echo "Checking for support status of ${target}, ${CC}..."
echo 
dnl>
dnl> How does this work?
dnl>
dnl> First off, we split up the target:cc stuff and tag each version we know
dnl> about with a couple of paramters.
dnl>
dnl>    DEFINEOS becomes the -DOS_xxxxx value
dnl>    STATUS   tells us which of the text blocks to print
dnl>    REMEDIATE1/2 and NOTE1/2 are extra blocks of text we can print
dnl>
dnl>    VERIFIEDn="ntop:yyyy-mm-dd:name <email>:osversion";
dnl>    VNOTES  ="";
dnl>

dnl> Really pervasive settings (CC, CFLAGS) go here.
dnl> The rest should be the second case $target, after we've done most 
dnl> of the common tests.

if test ".${ac_debug}" = ".yes"; then
    echo "DEBUG: build        is '${build}'"
    echo "       host         is '${host}'"
    echo "       target       is '${target}'"
    echo "       CC           is '${CC}'"
fi

case "${target}:${CC}" in
    *-*-mingw32*:gcc* )
        DEFINEOS="MINGW";     STATUS="SUPPORTED";
      ;;

    *-*-cygwin*:* )
        VERIFIED1="2.1.51:2002-10-21:Burton Strauss <burton@ntopsupport.com:any"
        VNOTES  ="Assumed to fail - ntop has never supported cygwin"
        REMEDIATE1="Use MinGW and the special makefiles instead."
        DEFINEOS="CYGWIN";    STATUS="WILLFAIL"
      ;;

    *-*-linux*:*gcc* )
        VERIFIED1="2.1.90:2003-03-28:Burton Strauss <burton@ntopsupport.com>:RedHat AS2.1, 7.3 and 8.0"
        VERIFIED2="2.1.51:2002-10-24:Peter Sinoros-Szabo Peter <sini@cs.bme.hu>:Suse i686, 2.4.18-4GB-SMP"
        DEFINEOS="LINUX";     STATUS="SUPPORTED"
      ;;

    *-*-solaris2.9*:* )
        NOTE1="Supported: Solaris 8 for both sparc and i86"
        DEFINEOS="SOLARIS";   STATUS="UNTESTED"
      ;;

    *-*-solaris2.8*:* )
        VERIFIED1="2.1.90:2003-03-28:Burton Strauss <burton@ntopsupport.com:Solaris 8 i86"
        VERIFIED1="2.2:2003-04-23:Mike Tremaine <mgt@stellarcore.net>:Solaris 8 sparc"
        NOTE1="Requires various gnu tools from SunFreeware.com"
        NOTE2="--enable-i18n is disabled"
        DEFINEOS="SOLARIS";   STATUS="SUPPORTED"
        # Added per Mike
        LIBS='-lnsl -lsocket ${LIBS}'
      ;;

    *-*-solaris2.5*:* )
        NOTE1="Trying Solaris 2.5 configuration stuff from ntop 2.1."
        DEFINEOS="SOLARIS";   STATUS="UNTESTED"
      ;;

    *-*-solaris*:* )
        DEFINEOS="SOLARIS";   STATUS="UNTESTED"
      ;;

    *-*-darwin*:* )
        VERIFIED1="2.1.51:2002-10-21:Burton Strauss <burton@ntopsupport.com>:MAC OS X 10.1 (Darwin)"
        VERIFIED2="2.1.90:2003-03-28:Luca Deri:MAC OS X 10.2 (Jaguar)"
        NOTE1="'Darwin 5.5' is the kernel of the os known as MAC OS X 10.1"
        NOTE2="'Darwin 6.1' is the kernel of the os known as MAC OS X 10.2 (Jaguar)"
        DEFINEOS="DARWIN";    STATUS="SUPPORTED"

        CFLAGS="-no-cpp-precomp $CFLAGS"
      ;;

    *-*-freebsd[[45]]*:*gcc* )
        VERIFIED1="2.2:2003-04-21:Burton Strauss <burton@ntopsupport.com>:FreeBSD-4.6.3-RELEASE"
        VERIFIED2="2.1.90:2003-03-18:Stanley Hopcroft <anwsmh@IPAustralia.Gov.AU>:4.7-RELEASE-p7"
        VERIFIED1="2.2:2003-04-21:Burton Strauss <burton@ntopsupport.com>:FreeBSD-4.8-RELEASE"
        VERIFIED1="2.2:2003-04-21:Burton Strauss <burton@ntopsupport.com>:FreeBSD-5.0-RELEASE"
        DEFINEOS="FREEBSD";   STATUS="SUPPORTED"
        if test ".${LOCALEDIR}" = "."; then
            LOCALEDIR="/usr/share/locale"
        fi
      ;;

    *-*-freebsd*:* )
        DEFINEOS="FREEBSD";   STATUS="UNTESTED"
      ;;

    *-*-openbsd*:* )
        DEFINEOS="OPENBSD";   STATUS="WILLFAIL"
      ;;

    *-*-netbsd*1.5*:gcc* )
        VERIFIED1="2.1.90:2003-03-29:Burton Strauss <burton@ntopsupport.com:1.6"
        VERIFIED2="2.1.51:2002-10-23:Burton Strauss <burton@ntopsupport.com:1.5.3 w/ updated auto* tools"
        NOTE1="Single Threaded only."
        DEFINEOS="NETBSD"
        if test ".${ac_disable_multithread}" = ".yes"; then
            STATUS="SUPPORTED"
            NOTE2="NetBSD 1.6 requires the UPDATED libpcap in the packages"
            NOTE3="  If you see a missing pcap_open_dead, you forgot to update!"
        else
            STATUS="WILLFAIL"
            NOTE2="With ANY of the threads packages, you are on your own!"
        fi
      ;;

    *-*-netbsd*:* )
        DEFINEOS="NETBSD";    STATUS="UNTESTED"
      ;;

    *-*-hpux11*:gcc* )
        DEFINEOS="HPUX";      STATUS="WILLFAIL"
        CFLAGS="${CFLAGS}"
      ;;

    *-*-hpux10*:gcc* )
        NOTE1="Single Threaded only."
        DEFINEOS="HPUX"
        CFLAGS="${CFLAGS}"
        if test ".${ac_disable_multithread}" = ".yes"; then
            STATUS="UNTESTED"
        else
            STATUS="WILLFAIL"
        fi
      ;;

    *-*-aix5l*:gcc* )
        NOTE1="Guessing that AIX5L is like Linux."
        DEFINEOS="AIX";       STATUS="UNTESTED"
      ;;

    *-*-aix[[45]]*:gcc* )
        NOTE1="Trying configuration stuff from ntop 1.3 for AIX 4.1/4.2."
        DEFINEOS="AIX";       STATUS="UNTESTED"

        dnl> These are so pervasive, they MUST be here...
        GCCLIB=`gcc -print-libgcc-file-name`
        cp $GCCLIB .
        LIBS="-L. -lgcc ${LIBS}"
        CCLD="cc -bI:/lib/pse.exp"
      ;;

    *-*-aix4*:* )
        REMEDIATE1="Install gcc."
        DEFINEOS="AIX";       STATUS="WILLFAIL"
      ;;

    *-*-aix*:* )
        DEFINEOS="AIX";       STATUS="UNTESTED"
      ;;

    * )
        DEFINEOS="";          STATUS="UNKNOWN"
      ;;
esac

dnl> Last chance default (if there is an os-specific value, set it above)
if test ".${LOCALEDIR}" = "."; then
    LOCALEDIR="/usr/lib/locale"
fi

NTOP_APPEND_INCS([/usr/local/include])
NTOP_APPEND_LIBS([/usr/local/lib])
CFLAGS="${CFLAGS} -I/usr/local/include"
CPPFLAGS="${CPPFLAGS} -I/usr/local/include"
LDFLAGS="${LDFLAGS} -L/usr/local/include"

dnl> Leave this: it causes showoses to print it's footer
dnl> showoses TERMS

echo
echo "*******************************************************************"
echo "*"

case "${STATUS}" in

    SUPPORTED)
        echo "* NOTE: Building ntop for a supported platform"
        echo "*       This means we expect ntop to work without major issues"
        echo "*"
        echo "*            '${target}'"
        if test ".${NOTE1}" != "."; then
            echo "*"
            echo "*    ${NOTE1}"
        fi
        if test ".${NOTE2}" != "."; then
            echo "*    ${NOTE2}"
        fi
        if test ".${NOTE3}" != "."; then
            echo "*    ${NOTE3}"
        fi
        ;;

    UNTESTED)
        echo "* NOTE: Building ntop for an untested platform"
        echo "*"
        echo "*            '${target}'"
        echo "*"
        echo "*      Untested means that:"
        echo "*"
        echo "*           1. A previous version of this OS is supported."
        echo "*        or 2. This version of this OS was supported by a"
        echo "*              previous version of ntop."
        echo "*"
        echo "*     ./configure applies the same configuration options,"
        echo "*     special parameters, etc. as for the prior release."
        echo "*"
        echo "*             For OS .0 releases that is probably a bad bet..."
        echo "*"
        echo "*  It could just be that you are compiling an older version"
        echo "*  of ntop on a new OS release - check the http://www.ntop.org"
        echo "*  site for an update."
        if test ".${NOTE1}" != "."; then
            echo "*"
            echo "*    ${NOTE1}"
        fi
        if test ".${NOTE2}" != "."; then
            echo "*    ${NOTE2}"
        fi
        ;;

    WILLFAIL)
        echo "* ERROR: Attempting to build ntop for an unsupported platform"
        echo "*"
        echo "*            '${target}'"
        echo "*"
        echo "*>>> This is unsupported."
        echo "*>>> It will almost certainly fail"
        echo "*           (that is why it is listed as 'unsupported' - doh!)"
        if test ".${REMEDIATE1}" != "."; then
            echo "*"
            echo "*??? ${REMEDIATE1}"
        fi
        if test ".${REMEDIATE2}" != "."; then
            echo "*??? ${REMEDIATE2}"
        fi
        if test ".${ac_willfailoverride}" = ".yes"; then
            echo "*"
            echo "*   But... you think you know better (or are testing things)"
            echo "*          so let us rock and roll..."
        fi
        HAS_ERROR="yes"
        ;;

    *)
        echo "* ERROR: Attempting to build ntop for an unknown platform"
        echo "*"
        echo "*            '${target}'"
        echo "*"
        echo "*>>> This is unsupported."
        echo "*>>> It will probably fail."
        echo "*"
        echo "*    Of course, you are certainly welcome to try ntop on this platform..."
        HAS_ERROR="yes"
        ;;
esac

echo "*"
echo "*    Please keep the ntop-dev mailing list updated with any"
echo "*    successes you have or problems you encounter..."
echo "*"

dnl> Leave this: it causes showoses to stop
dnl> showoses END

if test ".${VERIFIED1}" != "."; then
    echo "*   Support for this platform was most recently verified for"
    echo "*"
    echo $VERIFIED1 | ${ac_cv_prog_AWK} -f utils/verified.awk
    if test ".${VERIFIED2}" != "."; then
        echo $VERIFIED2 | ${ac_cv_prog_AWK} -f utils/verified.awk
    fi
    if test ".${VERIFIED3}" != "."; then
        echo $VERIFIED3 | ${ac_cv_prog_AWK} -f utils/verified.awk
    fi
    if test ".${VERIFIED4}" != "."; then
        echo $VERIFIED4 | ${ac_cv_prog_AWK} -f utils/verified.awk
    fi
    if test ".${VNOTES}" != "."; then
        echo "*    ${VNOTES}"
    fi
else
    echo "*   Support is unverified..."
fi
echo "*"
echo "*******************************************************************"
echo

case "${STATUS}" in
    WILLFAIL)
          if test ".${ac_willfailoverride}" != ".yes"; then
              exit 1
          fi
      ;;
esac

dnl>
dnl>  Here so we stop processing ASAP after printing above
dnl>
AC_ARG_ENABLE(test,
              [  --enable-test                Test platform and stop],
              exit 0)


if (test ".${PCAP_LIB}" != "." &&   
   test ! -d ${PCAP_LIB})         ||
   (test ".${PCAP_INCLUDE}" != "." &&   
   test ! -d ${PCAP_INCLUDE}); then
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR:    You specified or implied a non-existent directory for"
    echo "*           libpcap:"
    echo "*               --with-pcap-lib=${PCAP_LIB}"
    echo "*               --with-pcap-include=${PCAP_INCLUDE}"
    echo "*"
    echo "*>>> Continuing without libpcap is impossible."
    echo "*"
    echo "*???     1. Correct the --with-pcap-xxxxx option and rerun"
    echo "*???        ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    exit 1
else
    NTOP_APPEND_LIBS([${PCAP_LIB}], [pcap])
    NTOP_APPEND_INCS([${PCAP_INCLUDE}])
fi

if (test ".${GDBM_LIB}" != "." &&
   test ! -d ${GDBM_LIB})         ||
   (test ".${GDBM_INCLUDE}" != "." &&
   test ! -d ${GDBM_INCLUDE}); then
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR:    You specified or implied a non-existent directory for"
    echo "*           libgdbm:"
    echo "*               --with-gdbm-lib=${GDBM_LIB}"
    echo "*               --with-gdbm-include=${GDBM_INCLUDE}"
    echo "*"
    echo "*>>> Continuing without libgdbm is impossible."
    echo "*"
    echo "*???     1. Correct the --with-gdbm-xxxxx option and rerun"
    echo "*???        ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    exit 1
else
    NTOP_APPEND_LIBS([${GDBM_LIB}], [gdbm])
    NTOP_APPEND_INCS([${GDBM_INCLUDE}])
fi

NTOP_RPT_LOC([LBL pcap], [${PCAP_LIB}], [${PCAP_INCLUDE}])
NTOP_RPT_LOC([GNU gdbm], [${GDBM_LIB}], [${GDBM_INCLUDE}])

AC_CHECK_HEADERS([gdbm.h])
AC_CHECK_HEADERS([pcap.h])


dnl> Graphics
AC_CHECK_HEADERS(gd.h png.h)
AC_CHECK_LIB([gd], [gdImageDestroy])
AC_CHECK_LIB([png], [png_read_info])


AC_CHECK_LIB([gdbm], [gdbm_open])
AC_CHECK_LIB([pcap], [pcap_open_live])

AC_MSG_CHECKING([for gdbm])
if test ".${ac_cv_header_gdbm_h}" != ".yes" ||
   test ".${ac_cv_lib_gdbm_gdbm_open}" != ".yes"; then
    AC_MSG_WARN(error)
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR: gdbm header or library routines are missing"
    echo "*           (yes means it was found, no means it was not found)"
    echo "*"
    echo "*              gdbm.h...${ac_cv_header_gdbm_h}"
    echo "*              gdbm_open() in -lgdbm...${ac_cv_lib_gdbm_gdbm_open}"
    echo "*"
    echo "*>>> No way to proceed."
    echo "*"
    echo "*???     1. Install libgdbm"
    echo "*???    and Rerun ./configure"
    echo "*???  or 2. Use the --with-gdbm-root= option"
    echo "*"
    echo "*******************************************************************"
    echo
    AC_MSG_ERROR(Unable to continue... aborting ./configure)
else
    AC_MSG_RESULT(ok)
fi

AC_MSG_CHECKING([for pcap])
if test ".${ac_cv_header_pcap_h}" != ".yes" ||
   test ".${ac_cv_lib_pcap_pcap_open_live}" != ".yes"; then
    AC_MSG_WARN(error)
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR: pcap header or library routines are missing"
    echo "*           (yes means it was found, no means it was not found)"
    echo "*"
    echo "*              pcap.h...${ac_cv_header_pcap_h}"
    echo "*              pcap_open_live() in -lpcap...${ac_cv_lib_pcap_pcap_open_live}"
    echo "*"
    echo "*>>> No way to proceed."
    echo "*"
    echo "*???     1. Install libpcap"
    echo "*???    and Rerun ./configure"
    echo "*???  or 2. Use the --with-pcap-root= option"
    echo "*"
    echo "*******************************************************************"
    echo
    AC_MSG_ERROR(Unable to continue... aborting ./configure)
fi

AC_MSG_CHECKING([for png])
if test ".${ac_cv_header_png_h}" != ".yes" ||
   test ".${ac_cv_lib_png_png_read_info}" != ".yes"; then
    AC_MSG_WARN(error)
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR: png header or library routines are missing"
    echo "*           (yes means it was found, no means it was not found)"
    echo "*"
    echo "*              png.h...${ac_cv_header_png_h}"
    echo "*              png_read_info() in -lpng...${ac_cv_lib_png_png_read_info}"
    echo "*"
    echo "*>>> No way to proceed."
    echo "*"
    echo "*???        Install libpng (also called png and png-devel)"
    echo "*???    and Rerun ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    AC_MSG_ERROR(Unable to continue... aborting ./configure)
else
    AC_MSG_RESULT(ok)
fi

AC_MSG_CHECKING([for gd])
if test ".${ac_cv_header_gd_h}" != ".yes" ||
   test ".${ac_cv_lib_gd_gdImageDestroy}" != ".yes"; then
    AC_MSG_WARN(error)
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR: gd header or library routines are missing"
    echo "*           (yes means it was found, no means it was not found)"
    echo "*"
    echo "*              gd.h...${ac_cv_header_gd_h}"
    echo "*              gdImageDestroy() in -lgd...${ac_cv_lib_gd_gdImageDestroy}"
    echo "*"
    echo "*>>> No way to proceed."
    echo "*"
    echo "*???        Install gd (and/or gd-devel)"
    echo "*???    and Rerun ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    AC_MSG_ERROR(Unable to continue... aborting ./configure)
else
    AC_MSG_RESULT(ok)
fi





echo
echo "Initializing..."
echo
# Checks for programs.
AC_PROG_CXX
AC_PROG_AWK
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB

AC_PROG_LIBTOOL

dnl> make NTOPDIR the default for the installation
AC_PREFIX_DEFAULT(${NTOPDIR:-/usr/local})

echo
echo "Test the compiler and setup CFLAGS..."
echo
case "$CFLAGS" in
    *-g* )
        ;;
    * )
        CFLAGS="$CFLAGS -g"
        AC_MSG_CHECKING([if compiler accepts -g (debugging information)])
        oCFLAGS=$CFLAGS
        CFLAGS="-g $CFLAGS"
        AC_TRY_COMPILE( ,
                       return 0 ,
                       AC_MSG_RESULT(yes),
                       CFLAGS="${oCFLAGS}"
                       AC_MSG_RESULT(no)
                      )
        ;;
esac

AC_MSG_CHECKING([if compiler accepts -W (warning flags)])
oCFLAGS=$CFLAGS
CFLAGS="$CFLAGS -Wshadow -Wpointer-arith -Wmissing-prototypes -Wmissing-declarations -Wnested-externs"
AC_TRY_COMPILE( ,
               return 0 ,
               AC_MSG_RESULT(yes),
               CFLAGS="${oCFLAGS}"
               AC_MSG_RESULT(no)
              )

dnl> add pic flag in any case this makes sure all our code is relocatable
CFLAGS="$CFLAGS "`grep pic_flag= libtool | head -n1 | sed -e 's/.*pic_flag=//' -e 's/"//g'`



dnl> Specific compiler feature tests
AC_C_CONST
AC_C_VOLATILE
AC_C_INLINE
AC_C_CHAR_UNSIGNED
AC_C_LONG_DOUBLE  

if test ".${ac_debug}" = ".yes"; then
    echo "DEBUG: After compiler tests, CFLAGS is '${CFLAGS}'"
fi

AC_C_BIGENDIAN([AC_DEFINE_UNQUOTED(CFG_BIG_ENDIAN, 1, [ntop built for big endian machine])],
               [AC_DEFINE_UNQUOTED(CFG_LITTLE_ENDIAN, 1,  [ntop built for little endian machine])],
               [AC_DEFINE_UNQUOTED(CFG_UNKNOWN_ENDIAN, 1, [ntop built for unknown machine])])

dnl> Define the arguments we accept...
dnl>
dnl>   In this version of the configure file, we use AC_ARG_WITH for whole external
dnl>   programs and AC_ARG_ENABLE for features of ntop itself.  Since they're the
dnl>   same as to processing, we don't separate them here.
dnl>
dnl>   And it keeps them together in the ./configure --help output
dnl>
dnl>   Remember, there shouldn't be any processing in these... that's below when
dnl>   we test for libraries.  It's ok to set values via AC_DEFINE_UNQUOTED().

dnl> So, we...

dnl> Test the enable, disable and with's for unreasonable combinations.

dnl> Process the trivially simple ones and be done with 'em

echo
echo "-------------------------------------------------------------------"
echo
echo "   **Handling your --enable and --disable requests**"
echo

echo
echo "Multithread?"
if test ".${ac_disable_multithread}" = ".yes"; then
    echo "    ...Disabled via ./configure command line option --disable-mt"
    multithread_mode="disabled (Single Threaded) via --disable-mt"
else
    echo "    ...(Default) Requested if available. Disable via ./configure command line option --disable-mt."
fi

echo
echo "SSL?"
if test ".${ac_disable_openssl}" = ".yes"; then
    echo "    ...Disabled via ./configure command line option --without-ssl"
    if test ".${OSSL_LIB}" != "." ||
       test ".${OSSL_INCLUDE}" != "." ||
       test ".${ac_enable_sslv3}" = ".yes" ||   
       test ".${ac_enable_sslwatchdog}" = ".yes"; then
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* WARNING:    You disabled ssl but explicitly or implicitly specified"
        echo "*             the conflicting options:"
        echo "*                --with-ossl-lib=${OSSL_LIB}"
        echo "*                --with-ossl-include=${OSSL_INCLUDE}"
        if test ".${ac_enable_sslv3}" = ".yes"; then
            echo "*                --enable-sslv3"
        fi
        if test ".${ac_enable_sslwatchdog}" = ".yes"; then
            echo "*                --enable-sslwatchdog" 
        fi
        echo "*"
        echo "*>>> Ignoring the option(s)"
        echo "*"
        echo "*???     1. Remove the --without-ssl option"
        echo "*??? or  2. Remove the conflicting --with-xxxxx-xxxxx or "
        echo "*           --enable-xxxxx options"
        echo "*"
        echo "*******************************************************************"
        echo
        OSSL_LIB=
        OSSL_INCLUDE=
        ac_enable_sslv3="no"
        ac_enable_sslwatchdog="no"
        HAS_WARNING="yes"
    fi
else
    echo "    ...(Default) Requested if available. Disable via ./configure command line option --without-ssl."
    echo "  sslv3?"
    if test ".${ac_enable_sslv3}" = ".yes"; then
        echo "    ...Requested if available AT RUN TIME."
        AC_DEFINE_UNQUOTED(MAKE_WITH_SSLV3_SUPPORT, 1, [Support SSLv3 if available])
    else
        echo "    ...(Default) Disabled. Request via ./configure command line option --enable-sslv3"
    fi
    echo "  ssl watchdog?"
    if test ".${ac_enable_sslwatchdog}" = ".yes"; then
        echo "    ...Requested via ./configure command line option --enable-sslwatchdog"
        AC_DEFINE_UNQUOTED(MAKE_WITH_SSLWATCHDOG_COMPILETIME, 1, [Enable SSL Watchdog])
    else
        echo "    ...(Default) Disabled. Request via ./configure command line option  --enable-sslwatchdog"
        echo "                                    or ntop run time option --ssl-watchdog."
    fi
fi

echo
echo "TCP Wrappers?"
if test ".${ac_enable_tcpwrap}" = ".yes"; then
    echo "    ...Requested via ./configure command line option --enable-tcpwrap"
else
    echo "    ...(Default) Disabled. Request via ./configure command line option --enable-tcpwrap."
fi

echo
echo "Plugins?"
PLUGINS=
if test ".${ac_disable_plugins}" = ".yes"; then
    echo "    ...Disabled via ./configure command line option --disable-plugins"
else
    PLUGINS=plugins
    echo "    ...(Default) Requested. Disable via ./configure command line option --disable-plugins."
fi

echo
echo "Static plugins?"
if test ".${ac_enable_static_plugins}" = ".yes"; then
    echo "    ...Requested.  Use 'make sntop' instead of 'make'"
    if test ".${ac_disable_plugins}" = ".yes"; then
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* WARNING:    You requested static plugins but also disabled them"
        echo "*"
        echo "*>>> Ignoring the --enable-static-plugins option"
        echo "*"
        echo "*???     1. Remove the --disable-plugins option"
        echo "*"
        echo "*******************************************************************"
        echo
        HAS_WARNING="yes"
    else
        AC_DEFINE_UNQUOTED(MAKE_STATIC_PLUGIN, 1, [Statically build plugins into sntop])
    fi
else
    echo "    ...(Default) Disabled. Request via ./configure command line option --enable-static-plugin."
fi

echo
echo "ntcsh?"
if test ".${ac_enable_ntcsh}" != ".yes"; then
    echo "    ...(Default) Disabled. Request via ./configure command line option --enable-ntcsh."
    if test ".${ac_disable_curses}" = ".yes" ||
       test ".${ac_disable_readline}" = ".yes"; then
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* WARNING:    You did not enable ntcsh but specified ntcsh options"
        if test ".${ac_disable_curses}" = ".yes"; then
            echo "*                --without-curses"
        fi
        if test ".${ac_disable_readline}" = ".yes"; then
            echo "*                --without-readline"
        fi
        echo "*"
        echo "*>>> Ignoring the options"
        echo "*"
        echo "*???     1. Add the --enable-ntcsh option"
        echo "*??? or  2. Remove the conflicting --without-xxxxx option(s)"
        echo "*"
        echo "*******************************************************************"
        echo
        ac_disable_curses="no"
        ac_disable_readline="no"
        HAS_WARNING="yes"
    fi
else
    echo "    ...Requested via ./configure command line option --enable-ntcsh."
    echo
    echo "*******************************************************************"
    echo "*******************************************************************"
    echo "*******************************************************************"
    echo "*"
    echo "* WARNING:  ntcsh is UNSUPPORTED."
    echo "*"
    echo "*        We make the bare minimum of source changes so that ntcsh"
    echo "*        compiles and starts up, and even that is subject to"
    echo "*        change."
    echo "*"
    echo "*        If it works FOR YOU, great."
    echo "*"
    echo "*        If it doesn't work FOR YOU, don't bother asking about"
    echo "*        support."
    echo "*"
    echo "*???     1. Use the web interface"
    echo "*"
    echo "*******************************************************************"
    echo "*******************************************************************"
    echo "*******************************************************************"
    echo
    HAS_WARNING="yes"

    echo "  curses?"
    if test ".${ac_disable_curses}" = ".yes"; then
        echo "    ...Disabled via ./configure command line option --without-curses."
    else
        echo "    ...(Default) Requested if available. Disable via ./configure command line option --without-curses."
    fi

    echo "  GNU readline?"
    if test ".${ac_disable_readline}" = ".yes"; then
        echo "    ...Disabled via ./configure command line option --without-readline."
    else
        echo "    ...(Default) Requested if available. Disable via ./configure command line option --without-readline."
    fi
fi

echo
echo "Ignore SIGPIPE?"
if test ".$ac_enable_ignoresigpipe" = ".yes"; then
    echo "    ...Requested via ./configure command line option --enable-ignoresigpipe."
    AC_DEFINE_UNQUOTED(MAKE_WITH_IGNORE_SIGPIPE, 1, [Define for IGNORE of SIGPIPE])
else
    echo "    ...(Default) Disabled. Request via ./configure command line option --enable-ignoresigpipe"
    echo "                                    or ntop run time option --ignore-sigpipe."
fi

echo
echo "Internationalization (i18n)?"
if test ".$ac_enable_i18n" = ".yes"; then
    echo "    ...Requested via ./configure command line option --enable-i18n."
    case "${target}" in

        *-*-solaris* )
          echo
          echo "*******************************************************************"
          echo "*"
          echo "* WARNING: Unable to make i18n code under Solaris"
          echo "*          due to library differences."
          echo "*"
          echo "*"
          echo "*>>> Continuing without i18n."
          echo "*"
          echo "*******************************************************************"
          echo
          HAS_WARNING="yes"
          ;;

        * )
          AC_DEFINE_UNQUOTED(MAKE_WITH_I18N, 1, [Define for internationalization])
          ;;

    esac
else
    echo "    ...(Default) Disabled. Request via ./configure command line option --enable-i18n"
fi

echo
echo "XML Dump?"
if test ".${ac_enable_xmldump}" = ".yes"; then
    echo "    ...Requested if available."
else
    echo "    ...(Default) Disabled. Request via ./configure command line option --enable-xmldump."
    dnl> Prevents the makefile from executing awk
    touch xml_s_ntopinterface.inc
    if test ".${XML2_LIB}" != "."  ||
       test ".${XML2_INCLUDE}" != "."  ||
       test ".${GDOME_LIB}" != "." ||
       test ".${GDOME_INCLUDE}" != "." ||
       test ".${GLIB_LIB}" != "." ||
       test ".${GLIB_INCLUDE}" != "."; then
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* WARNING:  You didn't ./configure --enable-xmldump"
        echo "*           so the following explicit or implied options are "
        echo "*           irrelevant and will be ignored:"
        echo "*                  --with-xml2-lib=${XML2_LIB}"
        echo "*                  --with-xml2-include=${XML2_INCLUDE}"
        echo "*                  --with-gdome-lib=${GDOME_LIB}"
        echo "*                  --with-gdome-include=${GDOME_INCLUDE}"
        echo "*                  --with-glib-lib=${GLIB_LIB}"
        echo "*                  --with-glib-include=${GLIB_INCLUDE}"
        echo "*"
        echo "*>>> Ignoring meaningless request(s)."
        echo "*"
        echo "*???     1. Add the --enable-xmldump option"
        echo "*??? or  2. Remove the conflicting option(s)"
        echo "*"
        echo "*******************************************************************"
        echo
        XML2_LIB=
        GDOME_LIB=
        GLIB_LIB=
        XML2_INCLUDE=
        GDOME_INCLUDE=
        GLIB_INCLUDE=
        HAS_WARNING="yes"
    fi
fi

dnl> Process the simple, critical ROOT/DIRECTORY entries
dnl> So we can enter into the AC_CHECK_LIB and AC_CHECK_HEADER with a reasonable
dnl> LIBS and INCS value.

dnl> Openssl

if test ".${ac_disable_openssl}" != ".yes"; then
    AC_CHECK_HEADERS([openssl/rsa.h openssl/crypto.h openssl/x509.h openssl/pem.h openssl/ssl.h openssl/err.h])
    AC_CHECK_LIB([crypto], [SSLeay_version])
    AC_CHECK_LIB([ssl], [SSL_accept])

if test ".${OSSL_LIB}" != "." ||
   test ".${OSSL_INCLUDE}" != "."; then
   if test ! -d ${OSSL_LIB} ||
      test ! -d ${OSSL_INCLUDE}; then
        echo
        echo "*******************************************************************"
        echo "*" 
        echo "* WARNING:    You specified or implied non-existent directories"
        echo "*             for openSSL:"
        echo "*              --with-ossl-lib=${OSSL_LIB}"
        echo "*              --with-ossl-include=${OSSL_INCLUDE}"
        echo "*" 
        echo "*>>> Continuing without the --with-ossl-xxxxx values"
        echo "*"
        echo "*        ./configure should complete 'successfully'" 
        echo "*"
        echo "*        ntop may find openSSL installed in a standard location."
        echo "*"
        echo "*        If not found, ntop will disable code dependent upon openSSL"
        echo "*        meaning no https:// web server."
        echo "*"
        echo "*    Read the remaining messages carefully!"
        echo "*"
        echo "*???     1. Install the openSSL package and rerun ./configure"
        echo "*??? or  2. Correct the --with-ossl-xxxxx values and rerun"
        echo "*???        ./configure"
        echo "*"
        echo "*******************************************************************"
        echo
        OSSL_LIB=
        OSSL_INCLUDE=
        HAS_WARNING="yes"
    else
        NTOP_APPEND_LIBS([${OSSL_LIB}], [ssl])
        NTOP_APPEND_INCS([${OSSL_INCLUDE}])
    fi  
fi  
fi

if test ".${ZLIB_LIB}" != "." ||
   test ".${ZLIB_INCLUDE}" != "."; then
   if test ! -d ${ZLIB_LIB} ||
      test ! -d ${ZLIB_INCLUDE}; then
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* WARNING:    You specified or implied non-existent directories"
        echo "*             for zlib:"
        echo "*              --with-zlib-lib=${ZLIB_LIB}"
        echo "*              --with-zlib-include=${ZLIB_INCLUDE}"
        echo "*"
        echo "*>>> Continuing without the --with-zlib-xxxxx values"
        echo "*" 
        echo "*        ./configure should complete 'successfully'"
        echo "*" 
        echo "*        ntop may find zlib installed in a standard location."
        echo "*" 
        echo "*        If not found, ntop will disable code dependent upon zlib"
        echo "*        meaning no compressed web pages and no gdchart."
        echo "*"
        echo "*    Read the remaining messages carefully!"
        echo "*"
        echo "*???     1. Download the zlib portion of the ntop source tree,"
        echo "*???        build zlib and rerun ./configure"
        echo "*??? or  2. Install the zlib package and rerun ./configure"
        echo "*??? or  3. Correct the --with-zlib-xxxxx values and rerun"
        echo "*???        ./configure"
        echo "*"
        echo "*******************************************************************"
        echo
        ZLIB_LIB=
        ZLIB_INCLUDE=
        HAS_WARNING="yes"
    else
        NTOP_APPEND_LIBS([${ZLIB_LIB}], [z])
        NTOP_APPEND_INCS([${ZLIB_INCLUDE}])
    fi
fi

if test ".${LOCALEDIR}" != "." &&
   test ! -d ${LOCALEDIR}; then
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* WARNING:  You specified a non-existent directory for locale files"
    echo "*                  --with-localedir=${LOCALEDIR}"
    echo "*"
    echo "*>>> Since we just pass this through to the run-time, we're only"
    echo "*>>> going to warn you here, but ntop might or might not function"
    echo "*>>> as expected."
    echo "*"
    echo "*???     1. Correct the --with-localedir option and rerun"
    echo "*???        ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    HAS_WARNING="yes"
fi

if test ".${ac_enable_xmldump}" = ".yes"; then
    if test ! -d ${XML2_LIB} ||
       test ! -d ${XML2_INCLUDE} ||
       test ! -d ${GDOME_LIB} ||
       test ! -d ${GDOME_INCLUDE} ||
       test ! -d ${GLIB_LIB} ||
       test ! -d ${GLIB_INCLUDE}; then
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* WARNING:    You specified or implied non-existent directories"
        echo "*             for libraries required for XMLdump:"
        echo "*               --with-xml2-lib=${XML2_LIB}"
        echo "*               --with-xml2-include=${XML2_INCLUDE}"
        echo "*               --with-gdome-lib=${GDOME_LIB}"
        echo "*               --with-gdome-include=${GDOME_INCLUDE}"
        echo "*               --with-glib-lib=${GLIB_LIB}"
        echo "*               --with-glib-include=${GLIB_INCLUDE}"
        echo "*"
        echo "*>>> Continuing without the --with-xxxxx-xxxxx values"
        echo "*"
        echo "*        ./configure should complete 'successfully'"
        echo "*"
        echo "*        ntop may find the XMLdump libraries installed in standard"
        echo "*        locations."
        echo "*"
        echo "*        If not found, ntop will disable the XML dump feature."
        echo "*"
        echo "*    Read the remaining messages carefully!"
        echo "*"
        echo "*???     1. Install the XMLdump libraries and rerun ./configure"
        echo "*??? or  2. Correct the --with-xxxxx-xxxxx values and rerun"
        echo "*???        ./configure"
        echo "*"
        echo "*******************************************************************"
        echo
        XML2_LIB=
        XML2_INCLUDE=
        GDOME_LIB=
        GDOME_INCLUDE=
        GLIB_LIB=
        GLIB_INCLUDE=
        ac_enable_xmldump="no"
        HAS_WARNING="yes"
    else
        NTOP_APPEND_LIBS([${XML2_LIB}], [xml2])
        NTOP_APPEND_LIBS([${GDOME_LIB}], [gdome])
        NTOP_APPEND_LIBS([${GLIB_LIB}], [glib])
        NTOP_APPEND_INCS([${XML2_INCLUDE}])
        NTOP_APPEND_INCS([${GDOME_INCLUDE}])
        NTOP_APPEND_INCS([${GLIB_INCLUDE}])
    fi
fi

# Force it to use our list of -I values (I know this looks odd, but
#  the AC_CHECK_HEADER() test doesn't use the INCS list in the
#  generated gcc command.  This forces it to do so.
CCSAVE="${CC}"
CC="${CC} ${INCS}"
CPPSAVE="${CPP}"
CPP="${CPP} ${INCS}"
CXXSAVE="${CXX}"
CXX="${CXX} ${INCS}"

AC_HEADER_STDC
AC_HEADER_DIRENT
AC_HEADER_SYS_WAIT
AC_HEADER_TIME 

# Standard c stuff - must have
AC_CHECK_HEADERS([float.h stddef.h stdlib.h string.h])
AC_CHECK_HEADERS([errno.h fcntl.h limits.h math.h signal.h stdarg.h unistd.h])
AC_CHECK_HEADERS([stdio.h strings.h])
AC_CHECK_HEADERS([sys/ioctl.h sys/socket.h sys/time.h sys/types.h])

# Optional - have workaround...
AC_CHECK_HEADERS([setjmp.h])
AC_CHECK_HEADERS([shadow.h])

# Network
AC_CHECK_HEADERS([netdb.h])
AC_CHECK_HEADERS([netinet/in.h])
AC_CHECK_HEADERS([arpa/inet.h arpa/nameser.h])
AC_CHECK_HEADERS([net/bpf.h])
AC_CHECK_HEADERS([net/ethernet.h])
AC_CHECK_HEADERS([net/if.h])
AC_CHECK_HEADERS([netinet/if_ether.h])
AC_CHECK_HEADERS([netinet/in_systm.h])
AC_CHECK_HEADERS([netinet/ip.h])
AC_CHECK_HEADERS([netinet/ip_icmp.h])
AC_CHECK_HEADERS([netinet/tcp.h])
AC_CHECK_HEADERS([netinet/udp.h])
dnl>  Note - if ethertype is missing, ntop.h has the critical #defines extracted...
AC_CHECK_HEADERS([ethertype.h])
AC_CHECK_HEADERS([linux/if_pppox.h])

dnl> Security related
dnl> Note: on some systems, e.g. FreeBSD, crypt() is defined in unistd.
AC_CHECK_HEADERS([crypt.h pwd.h security/pam_appl.h shadow.h])

dnl> i18n
AC_CHECK_HEADERS([locale.h langinfo.h])

## Other
AC_CHECK_HEADERS([dirent.h])
AC_CHECK_HEADERS([dlfcn.h dl.h])
AC_CHECK_HEADERS([getopt.h])
AC_CHECK_HEADERS([if.h])
AC_CHECK_HEADERS([inttypes.h])
AC_CHECK_HEADERS([memory.h])
AC_CHECK_HEADERS([sys/ldr.h])
AC_CHECK_HEADERS([sys/select.h])
AC_CHECK_HEADERS([sys/sockio.h])
AC_CHECK_HEADERS([sys/stat.h])
AC_CHECK_HEADERS([sys/un.h])
AC_CHECK_HEADERS([sys/wait.h])
AC_CHECK_HEADERS([zlib.h])

AC_CHECK_HEADERS([malloc.h])
AC_CHECK_HEADERS([sys/resource.h])

dnl> Multithreading...
dnl>    pthread.h is required,
dnl>    sched.h or sys/sched.h are optional, but improves performance
dnl>    semaphore.h is also optional
AC_CHECK_HEADERS([semaphore.h])
AC_CHECK_HEADERS([sched.h sys/sched.h])
AC_CHECK_HEADERS([pthread.h])

dnl> Optional, used for -L parameter
AC_CHECK_HEADERS([sys/syslog.h syslog.h])

dnl> Used for tcpwrappers
AC_CHECK_HEADERS([tcpd.h])

dnl> XML dump
AC_CHECK_HEADERS(glib.h glibconfig.h)
AC_CHECK_HEADERS(xmlversion.h)
AC_CHECK_HEADERS(gdome.h)

AC_TYPE_PID_T
dnl> Autoconf2: AC_CHECK_TYPE(pid_t, int)
AC_TYPE_SIZE_T
dnl> Autoconf2: AC_CHECK_TYPE(size_t, unsigned)
AC_HEADER_TIME
AC_STRUCT_TM
AC_STRUCT_TIMEZONE 

AC_CHECK_TYPEDEF(u_int64_t, sys/types.h)
AC_CHECK_TYPEDEF(uint64_t, sys/types.h)
AC_CHECK_TYPEDEF(u_int32_t, sys/types.h)
AC_CHECK_TYPEDEF(u_int16_t, sys/types.h)
AC_CHECK_TYPEDEF(u_int8_t, sys/types.h)
AC_CHECK_TYPEDEF(int64_t, sys/types.h)
AC_CHECK_TYPEDEF(int32_t, sys/types.h)
AC_CHECK_TYPEDEF(int16_t, sys/types.h)
AC_CHECK_TYPEDEF(int8_t, sys/types.h)

dnl> If this fails, it could be a bad -l which is going to kill
dnl> ALL the tests... so do the trivial compile test...
case "${CC}" in
  *gcc* )
    AC_MSG_CHECKING([trivial compile])
    AC_LANG_CONFTEST(
    [AC_LANG_PROGRAM([[#include <unistd.h>]],
                     [[int i=0;]])])
    rm -f conftest.$ac_objext conftest$ac_exeext
    (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
    (eval $ac_link) 2> trivialcompilemessage
    ac_status=$?
    if test ".${ac_status}" = ".0"; then
        AC_MSG_RESULT(ok)
    else
        AC_MSG_WARN(error)
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* ERROR: A trivial c compile has failed.  Something is seriously wrong."
        echo "*"
        echo "*        Check your --with-xxxxx-xxxxx parameters - if a library (-l)"
        echo "*        is not found in the locations given (-L) it causes these global"
        echo "*        compile problems. The library list being used is:"
        echo "*"
        echo "*        LIBS=${LIBS}"
        echo "*"
        echo "*        The compile error message is:"
        echo "*"
        cat trivialcompilemessage
        echo "*"
        echo "*>>> No way to proceed."
        echo "*"
        echo "*???     1. Correct the --with-xxxxx-xxxxx parameters"
        echo "*???    and Rerun ./configure"
        echo "*"
        echo "*******************************************************************"
        echo
        AC_MSG_ERROR(Unable to continue... aborting ./configure)
    fi
    ;;
esac


AC_CHECK_LIB([c], [backtrace])
AC_CHECK_LIB([c], [crypt], , [AC_CHECK_LIB([crypt], [crypt])])
AC_CHECK_LIB([c], [getopt_long])
AC_CHECK_LIB([c], [gethostbyaddr_r], , [
    AC_CHECK_LIB([nsl], [gethostbyaddr_r])
])
dnl> Plugin load routine...
dnl>    Most systems... special cases in the platform specific...
AC_CHECK_LIB([c], [dlopen], , [AC_CHECK_LIB([dl], [dlopen])])

AC_CHECK_LIB([z], [zlibVersion])

dnl> Check for both sin and ceil - some implementations split them
AC_CHECK_LIB([c], [sin], , [AC_CHECK_LIB([m], [sin])])
AC_CHECK_LIB([c], [ceil], , [AC_CHECK_LIB([m], [ceil])])

dnl> Networking libraries
AC_CHECK_LIB([nsl], [gethostname], , [AC_CHECK_LIB([nsl], [gethostbyname])])
AC_CHECK_LIB([socket], [accept])
AC_CHECK_LIB([resolv], [inet_aton])

dnl> Multithreading libraries
AC_CHECK_LIB(pthread, pthread_create, , [
    AC_CHECK_LIB(pthreads, pthread_create, , [
        AC_CHECK_LIB(c_r, pthread_create)
    ])
])
AC_CHECK_LIB(posix4, sem_init)

dnl> regex.c
AC_CHECK_LIB([c], 
             [re_search],
             AC_DEFINE_UNQUOTED(HAVE_REGEX, 
                                1, 
                                [regex lib is defined inside -lc for regex.c]))

dnl> TCP Wrappers
dnl>  This is a problem - the test sets HAVE_LIBWRAP, which is the flag in ntop
dnl>  But we haven't processed --enable-tcpwrap yet. So we dummy this out until
dnl>  such time as we can fix the internal flag in ntop...
dnl>AC_CHECK_LIB([wrap], [hosts_access])

dnl> XML dump
if test ".${ac_enable_xmldump}" = ".yes"; then
AC_CHECK_LIB([glib], [g_date_julian])
AC_CHECK_LIB([xml2], [xmlCheckVersion])
AC_CHECK_LIB([gdome], [gdome_di_saveDocToFile])
fi

AC_FUNC_ALLOCA

AC_FUNC_FORK
AC_PROG_GCC_TRADITIONAL
dnl> do not use AC_FUNC_MALLOC ... because we have our own replacement...
AC_FUNC_MEMCMP
AC_FUNC_SETVBUF_REVERSED
AC_TYPE_SIGNAL
AC_FUNC_STAT
AC_FUNC_STRFTIME
AC_FUNC_VPRINTF

AC_CHECK_FUNCS([alarm])
AC_CHECK_FUNCS([ctime_r])
AC_CHECK_FUNCS([endpwent])
AC_CHECK_FUNCS([gethostbyaddr gethostbyname gethostname])
dnl> Note, we've already tested for gethostbyaddr_r to find it's library, above.
dnl>      This test is to get HAVE_GETHOSTBYADDR_R set...
AC_CHECK_FUNCS([gethostbyaddr_r])
AC_CHECK_FUNCS([getipnodebyaddr])
AC_CHECK_FUNCS([getpass])
AC_CHECK_FUNCS([gettimeofday])
AC_CHECK_FUNCS([inet_ntoa])
AC_CHECK_FUNCS([localtime_r])
AC_CHECK_FUNCS([memchr memset])
AC_CHECK_FUNCS([putenv])
AC_CHECK_FUNCS([re_comp regcomp])
AC_CHECK_FUNCS([sched_yield])
AC_CHECK_FUNCS([select socket])
AC_CHECK_FUNCS([snprintf])
AC_CHECK_FUNCS([sqrt])
AC_CHECK_FUNCS([strcasecmp strncasecmp])
AC_CHECK_FUNCS([strchr strrchr])
AC_CHECK_FUNCS([strcspn])
AC_CHECK_FUNCS([strdup])
AC_CHECK_FUNCS([strerror])
AC_CHECK_FUNCS([strpbrk])
AC_CHECK_FUNCS([strspn])
AC_CHECK_FUNCS([strstr])
AC_CHECK_FUNCS([strtoul])
AC_CHECK_FUNCS([uname])

dnl> Test for strtok_r (we have our own defn if it's not available)C_CHECK_FUNCS([strtok_r])
AC_CHECK_FUNCS([strtok_r])
dnl> Following used by regex.c only
AC_CHECK_FUNCS([bzero])

case "${CC}" in
  *gcc* )
    dnl> Check if malloc.h has mallinfo...
    AC_MSG_CHECKING([for mallinfo in malloc.h])
    AC_LANG_CONFTEST(
    [AC_LANG_PROGRAM([[#include <malloc.h>]],
                     [[struct mallinfo memStats = mallinfo();]])])
    gcc conftest.c -o /dev/null > /dev/null 2> /dev/null
    rc=$?
    if test ".${rc}" = ".0"; then
        AC_MSG_RESULT(yes)
        AC_DEFINE_UNQUOTED(HAVE_MALLINFO_MALLOC_H,
                               1,
                               [malloc.h has mallinfo])
    else
        AC_MSG_RESULT(no)
    fi
esac

echo
echo " Platform specific:"
echo "     Tests for libraries, headers, etc."
echo "     and flags / #define items" 
echo

dnl> This should mirror the first case on $target $CC (above), 
dnl> but remember that $CC might have been modified since then..

dnl> Skipping cases is, I guess, ok, but remember that you might have
dnl> been grabbed by an earlier target, above (e.g. 

case "${target}:${CC}" in

    *-*-solaris2.5*:* )
        AC_DEFINE_UNQUOTED(CFG_NEED_INET_ATON,
                           1,
                           [Solaris 2.5: private implementation of inet_aton])
        AC_DEFINE_UNQUOTED(CFG_NEED_GETDOMAINNAME,
                           1,
                           [OS lacks getdomainname function.])
      ;;

    *-*-darwin5.5*:* )
        DYN_FLAGS="-bundle -flat_namespace -undefined suppress $DYN_FLAGS"
      ;;

    *-*-openbsd*:* )
        SO_VERSION_PATCH=.0.0
      ;;

    *-*-aix[45]*:gcc* )
        AC_DEFINE_UNQUOTED(CFG_NEED_GETDOMAINNAME,
                           1,
                           [OS lacks getdomainname function.])

        dnl> plugin load function unique to AIX
        dnl> TODO (note that c is probably the WRONG library
        AC_CHECK_LIB([c], [open])
      ;;

    *-*-hpux11*:* )
        dnl> plugin load function unique to HPUX
        AC_CHECK_LIB([dld], [shl_load])

        dnl> thread library
        dnl> test for their "special" function and library with the non-standard names
        AC_CHECK_LIB(pthread, __pthread_create_system)
        AC_CHECK_LIB(posix4, sem_init, , [AC_CHECK_LIB(rt, sem_init)])
      ;;

    *-*-hpux10*:*)
        dnl> plugin load function unique to HPUX
        AC_CHECK_LIB([dld], [shl_load])

        dnl> thread library
        dnl> test for their "special" function and library with the non-standard names
        AC_CHECK_LIB(pthread, __pthread_create_system)
        AC_CHECK_LIB(rt, sem_init)
      ;;

    * )
      ;;
esac

echo
echo "Now, let's check for problems with what we've found..."
echo
echo "   Testing Required libraries and headers**"
echo
AC_MSG_CHECKING([for required C headers])
if test ".${ac_cv_header_errno_h}"      = ".no" ||
   test ".${ac_cv_header_fcntl_h}"      = ".no" ||
   test ".${ac_cv_header_float_h}"      = ".no" ||
   test ".${ac_cv_header_limits_h}"     = ".no" ||
   test ".${ac_cv_header_stddef_h}"     = ".no" ||
   test ".${ac_cv_header_stdlib_h}"     = ".no" ||
   test ".${ac_cv_header_stdio_h}"      = ".no" ||
   test ".${ac_cv_header_string_h}"     = ".no" ||
   test ".${ac_cv_header_strings_h}"    = ".no" ||
   test ".${ac_cv_header_unistd_h}"     = ".no" ||
   test ".${ac_cv_header_sys_ioctl_h}"  = ".no" ||
   test ".${ac_cv_header_sys_socket_h}" = ".no" ||
   test ".${ac_cv_header_sys_time_h}"   = ".no" ||
   test ".${ac_cv_header_sys_types_h}"  = ".no"; then
    AC_MSG_WARN(error)
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR: Basic c library routines are missing."
    echo "*           (yes means it was found, no means it was not found)"
    echo "*"
    echo "*              errno.h..."${ac_cv_header_errno_h}
    echo "*              fcntl.h...${ac_cv_header_fcntl_h}"
    echo "*              float.h...${ac_cv_header_float_h}"
    echo "*              limits.h...${ac_cv_header_limits_h}"
    echo "*              stddef.h...${ac_cv_header_stddef_h}"
    echo "*              stdlib.h...${ac_cv_header_stdlib_h}"
    echo "*              stdio.h...${ac_cv_header_stdio_h}"
    echo "*              string.h...${ac_cv_header_string_h}"
    echo "*              strings.h...${ac_cv_header_strings_h}"
    echo "*              unistd.h...${ac_cv_header_unistd_h}"
    echo "*              sys/ioctl.h...${ac_cv_header_sys_ioctl_h}"
    echo "*              sys/socket.h...${ac_cv_header_sys_socket_h}"
    echo "*              sys/time.h...${ac_cv_header_sys_time_h}"
    echo "*              sys/types.h...${ac_cv_header_sys_types_h}"
    echo "*"
    echo "*>>> No way to proceed."
    echo "*"
    echo "*???     1. Install the necessary c compiler libraries/headers"
    echo "*???    and Rerun ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    AC_MSG_ERROR(Unable to continue... aborting ./configure)
else
    AC_MSG_RESULT(ok)
fi
  
AC_MSG_CHECKING([for crypt])
if (test ".${ac_cv_lib_c_crypt}" != ".yes" &&
    test ".${ac_cv_lib_crypt_crypt}" != ".yes"); then
    AC_MSG_WARN(error)
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR: 1. Basic c library routines are missing."
    echo "*           (yes means it was found, no means it was not found)"
    echo "*"
    echo "*              crypt.h...${ac_cv_header_crypt_h} (optional)"
    echo "*              crypt() in -lc...${ac_cv_lib_c_crypt} -lcrypt...${ac_cv_lib_crypt_crypt}"
    echo "*"
    echo "*>>> No way to proceed."
    echo "*"
    echo "*???     1. Install the necessary c compiler libraries/headers"
    echo "*???    and Rerun ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    AC_MSG_ERROR(Unable to continue... aborting ./configure)
else
    AC_MSG_RESULT(ok)
fi

AC_MSG_CHECKING([for dynamic load module])
if test ".${DEFINEOS}" = ".DARWIN"; then
   AC_MSG_RESULT(skipping - ntop emulates function in ntop_darwin.c)
elif test ".${ac_cv_lib_dl_dlopen}"    != ".yes" &&
     test ".${ac_cv_lib_c_dlopen}"     != ".yes" &&
     test ".${ac_cv_lib_c_load}"       != ".yes" &&
     test ".${ac_cv_lib_dld_shl_load}" != ".yes"; then
    AC_MSG_WARN(error)
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR: Critical c library routine is missing."
    echo "*           (yes means it was found, no means it was not found)"
    echo "*"
    case "$target" in
      *-hpux* )
        echo "*              shl_load() in -ldld...${ac_cv_lib_dld_shl_load}   (HPUX specific)"  
        ;;
      *-aix* )
        echo "*              load() in -lc...${ac_cv_lib_c_load}         (IBM AIX specific)"  
        ;;
      * )
        echo "*              dlopen() in -ldl...${ac_cv_lib_dl_dlopen} or -lc...${ac_cv_lib_c_dlopen}"
        ;;
    esac
    echo "*"
    echo "*>>> No way to proceed."
    echo "*"
    echo "*???     1. Install the necessary c compiler libraries/headers"
    echo "*???    and Rerun ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    AC_MSG_ERROR(Unable to continue... aborting ./configure)
else
    AC_MSG_RESULT(ok)
fi

echo
echo "-------------------------------------------------------------------"
echo
echo "   **Testing Optional libraries and headers**"
echo

dnl> Multithreaded:
if test ".${ac_disable_multithread}" != ".yes"; then
    AC_MSG_CHECKING([for Multithreading])

    case "$target" in
      dnl> HPUX 11, deal with their "special" (retarded) library with the non-standard name
      *-hpux11* )
        if test ".${ac_cv_header_pthread_h}"                    != ".yes" ||
           test ".${ac_cv_lib_pthread___pthread_create_system}" != ".yes" ||
           (test ".${ac_cv_lib_posix4_sem_init}"                != ".yes" &&
            test ".${ac_cv_lib_rt_sem_init}"                    != ".yes") then
            AC_MSG_WARN(error)
            dnl> Missing a library?  Can't multithread...
            ac_disable_multithread="yes"
            echo
            echo "*******************************************************************"
            echo "*                                                           HPUX11*"
            echo "*"
            echo "* WARNING:  We are unable to find a header/library required"
            echo "*           to support multi-threading."
            echo "*"
            echo "*>>>    ntop will be built single threaded."
            echo "*       This is only minimally supported."
            echo "*"
            echo "*    Missing:"
            echo "*           (yes means it was found, no means it was not found)"
            echo "*"
            echo "*              pthread.h...${ac_cv_header_pthread_h}"
            echo "*              __pthread_create_system() in -lpthread...${ac_cv_lib_pthread___pthread_create_system}"
            echo "*              sem_init() in -lposix4...${ac_cv_lib_posix4_sem_init} or -lrt...${ac_cv_lib_rt_sem_init}"
            echo "*"
            echo "*???     1. Install the necessary headers and libraries."
            echo "*???    and rerun ./configure"
            echo "*"
            echo "*******************************************************************"
            echo
            HAS_WARNING="yes"
        fi
        ;;
      * )
        if test ".${ac_cv_header_pthread_h}"             != ".yes" ||
           (test ".${ac_cv_lib_pthread_pthread_create}"  != ".yes" &&
            test ".${ac_cv_lib_pthreads_pthread_create}" != ".yes" &&
            test ".${ac_cv_lib_c_r_pthread_create}"      != ".yes"); then
            AC_MSG_WARN(error)
            ac_disable_multithread="yes"
            echo
            echo "*******************************************************************"
            echo "*"
            echo "* WARNING:  We are unable to find a header/library required"
            echo "*           to support multi-threading."
            echo "*"
            echo "*>>>    ntop will be built single threaded."
            echo "*       This is only minimally supported."
            echo "*"
            echo "*    Missing:"
            echo "*           (yes means it was found, no means it was not found)"
            echo "*"
            echo "*              pthread.h...${ac_cv_header_pthread_h}"
            echo "*              pthread_create() in -lpthread...${ac_cv_lib_pthread_pthread_create} -lpthreads...${ac_cv_lib_pthreads_pthread_create} -lc_r...${ac_cv_lib_c_r_pthread_create}"
            echo "*"
            echo "*???     1. Install the necessary headers and libraries."
            echo "*???    and rerun ./configure"
            echo "*"
            echo "*******************************************************************"
            echo
            HAS_WARNING="yes"
        fi
        ;;
    esac

    if test ".${ac_disable_multithread}" != ".yes"; then
        AC_MSG_RESULT(ok)
        AC_DEFINE_UNQUOTED(CFG_MULTITHREADED,        1, [Enable/disable multithread support])
        multithread_mode="enabled"
    else
        multithread_mode="disabled (Single Threaded)"
    fi
fi

dnl> openSSL:
if test ".${ac_disable_openssl}" != ".yes"; then
    AC_MSG_CHECKING([for openSSL])
    if test ".${ac_cv_header_openssl_crypto_h}" = ".yes" &&
       test ".${ac_cv_header_openssl_err_h}" = ".yes"    &&
       test ".${ac_cv_header_openssl_pem_h}" = ".yes"    &&
       test ".${ac_cv_header_openssl_rsa_h}" = ".yes"    &&
       test ".${ac_cv_header_openssl_ssl_h}" = ".yes"    &&
       test ".${ac_cv_header_openssl_x509_h}" = ".yes"   &&
       test ".${ac_cv_lib_ssl_SSL_accept}" = ".yes"; then
        AC_MSG_RESULT(ok)
        AC_DEFINE_UNQUOTED(HAVE_OPENSSL, 1, [OPENSSL is available])
    else
        AC_MSG_WARN(error)
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* WARNING:  One or more items required for openSSL are missing:"
        echo "*           (yes means it was found, no means it was not found)"
        echo "*"
        echo "*                  openssl/crypto.h...${ac_cv_header_openssl_crypto_h}"
        echo "*                  openssl/err.h...${ac_cv_header_openssl_err_h}"
        echo "*                  openssl/pem.h...${ac_cv_header_openssl_pem_h}"
        echo "*                  openssl/rsa.h...${ac_cv_header_openssl_rsa_h}"
        echo "*                  openssl/ssl.h...${ac_cv_header_openssl_ssl_h}"
        echo "*                  openssl/x509.h...${ac_cv_header_openssl_x509_h}"
        echo "*                  libssl.so or libssl.a...${ac_cv_lib_ssl_SSL_accept}"
        echo "*"
        echo "*>>>    ntop will be built without openSSL"
        echo "*"
        echo "*???     1. Install the necessary headers and libraries."
        echo "*???    and rerun ./configure"
        echo "*"
        echo "*******************************************************************"
        echo
        HAS_WARNING="yes"
    fi
fi

dnl> zlib:
dnl> Test the various things we need for zlib...
AC_MSG_CHECKING([for zlib])
if test ".${ac_cv_header_zlib_h}" = ".yes"         &&
   test ".${ac_cv_lib_z_zlibVersion}" = ".yes"; then
    AC_MSG_RESULT(ok)
    AC_DEFINE_UNQUOTED(MAKE_WITH_ZLIB, 1, [ZLIB is available])
else
    AC_MSG_WARN(error)
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* WARNING:  One or more items required for zlib are missing:"
    echo "*           (yes means it was found, no means it was not found)"
    echo "*"
    echo "*                  zlib.h...${ac_cv_header_zlib_h}"
    echo "*                  libz.so or libz.a...${ac_cv_lib_z_zlibVersion}"
    echo "*"
    echo "*>>>    ntop will be built without zlib (and thus without gdchart)"
    echo "*"
    echo "*???     1. Install the necessary headers and libraries."
    echo "*???    and rerun ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    ac_disable_gdchart="yes"
    HAS_WARNING="yes"
fi


dnl> xmldump:
if test ".${ac_enable_xmldump}" = ".yes"; then
    AC_MSG_CHECKING([for xmldump])
    if test ".${ac_cv_header_glib_h}" = ".yes"            &&
       test ".${ac_cv_header_glibconfig_h}" = ".yes"      &&
       test ".${ac_cv_header_xmlversion_h}" = ".yes"      &&
       test ".${ac_cv_header_gdome_h}" = ".yes"           &&
       test ".${ac_cv_lib_glib_g_date_julian}" = ".yes"   &&
       test ".${ac_cv_lib_xml2_xmlCheckVersion}" = ".yes" &&
       test ".${ac_cv_lib_gdome_gdome_di_saveDocToFile}" = ".yes"; then
        AC_MSG_RESULT(ok)
        AC_DEFINE_UNQUOTED([MAKE_WITH_XMLDUMP], 1, [Enable XMLDUMP])
    else
        AC_MSG_WARN(error)
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* WARNING:  One or more items required for xmldump are missing:"
        echo "*           (yes means it was found, no means it was not found)"
        echo "*"
        echo "*                  xmlversion.h...${ac_cv_header_xmlversion_h}"
        echo "*                  libxml2.so or libxml2.a...${ac_cv_lib_xml2_xmlCheckVersion}"
        echo "*                  gdome.h...${ac_cv_header_gdome_h}"
        echo "*                  libgdome.so or libgdome.a...${ac_cv_lib_gdome_gdome_di_saveDocToFile}"
        echo "*                  glib.h...${ac_cv_header_glib_h}"
        echo "*                  libglib.so or libglib.a...${ac_cv_lib_glib_g_date_julian}"
        echo "*                  glibconfig.h...${ac_cv_header_glibconfig_h}"
        echo "*"
        echo "*>>>    ntop will be built without xmldump"
        echo "*"
        echo "*???     1. Install the necessary headers and libraries."
        echo "*???    and rerun ./configure"
        echo "*"
        echo "*******************************************************************"
        echo
        HAS_WARNING="yes"
    fi
fi


dnl> tcp wrappers:
if test ".${ac_enable_tcpwrap}" = ".yes"; then
    AC_MSG_CHECKING([for tcp wrappers])

    if test ".${ac_cv_header_tcpd_h}" = ".yes"; then
        dnl> Oh how I wish I could just say:
        dnl> AC_CHECK_LIB([wrap], [hosts_access],
        dnl>              ac_cv_tcpwrappers="yes",
        dnl>              ac_cv_tcpwrappers="no")
        dnl>  But, tcp wrappers has those silly global variables ...
        if test ".${ac_debug}" = ".yes"; then
            echo "DEBUG:   tcp wrappers: Calling try_link"
        fi
        oLIBS="${LIBS}"
        LIBS="${LIBS} -lwrap"
        AC_TRY_LINK([#include <tcpd.h>
 int allow_severity = 0;
 int deny_severity  = 0;

 struct request_info *req;
],[hosts_access (req)],
                     if test ".${ac_debug}" = ".yes"; then
                         echo "DEBUG:   tcp wrappers try_link: YES"
                     fi
                     AC_DEFINE(HAVE_LIBWRAP)
                     ac_cv_lib_wrap_hosts_access="yes"
                     ac_cv_tcpwrappers="yes",
                     if test ".${ac_debug}" = ".yes"; then
                         echo "DEBUG:   tcp wrappers try_link: NO"
                     fi
                     LIBS="${oLIBS}"
                     ac_cv_lib_wrap_hosts_access="no"
                     ac_cv_tcpwrappers="no")

    else
        if test ".${ac_debug}" = ".yes"; then
            echo "DEBUG:   tcp wrappers: no tcpd.h"
        fi
        ac_cv_tcpwrappers="no"
    fi

    if test ".${ac_cv_tcpwrappers}" = ".yes"; then
        AC_MSG_RESULT(ok)
    else
        AC_MSG_WARN(error)
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* WARNING:  One or more items required for tcpwrappers are missing:"
        echo "*           (yes means it was found, no means it was not found)"
        echo "*"
        echo "*                  tcpd.h...${ac_cv_header_tcpd_h}"
	echo "*                  hosts_access() in -lwrap...${ac_cv_lib_wrap_hosts_access}"
        echo "*"
        echo "*>>> Continuing without tcp wrappers"
        echo "*"
        echo "*???     1. Install the tcp wrappers library/header and rerun"
        echo "*           ./configure"
        echo "*"
        echo "*******************************************************************"
        echo
        HAS_WARNING="yes"
    fi
fi

if test ".${ac_enable_ntcsh}" = ".yes"; then
    AC_MSG_CHECKING(ntcsh libraries)
    AC_MSG_RESULT([])
    if test ".${ac_disable_curses}" = ".yes"; then
        AC_CHECK_LIB(ncurses, initscr, 
            AC_MSG_CHECKING(for ncurses)
            AC_MSG_RESULT(ok)
            LIBCURSES="-lncurses", 
            AC_MSG_CHECKING(for ncurses)
            AC_MSG_WARN([disabled - missing ncurses.h.])
            ac_enable_ntcsh="no"
        )
    else
        AC_CHECK_LIB(ncurses, initscr, 
                     AC_MSG_CHECKING(for ncurses)
                     AC_MSG_RESULT(ok)
                     LIBCURSES="-lncurses", 
                     AC_MSG_CHECKING(for ncurses)
                     AC_MSG_WARN(missing)
                     AC_CHECK_LIB(curses, initscr, 
                                   AC_MSG_CHECKING(for curses)
                                   AC_MSG_RESULT(ok)
                                   LIBCURSES="-lcurses",
                                   AC_MSG_CHECKING(for curses)
                                   AC_MSG_WARN([disabled - missing (n)curses.h.])
                                   ac_enable_ntcsh="no")
        )
    fi

    if test ".${ac_enable_ntcsh}" = ".yes"; then

        AC_MSG_CHECKING([for ntcsh])
        AC_MSG_RESULT(ok)
        NTCSH=ntcsh

        if test ".${ac_disable_readline}" != ".yes"; then
            READLIBS="${LIBCURSES}"
            case "${LIBCURSES}" in
                *termcap*|*curses* )
                    ;;
                * )
                    AC_CHECK_LIB(termcap, tgetent, [
                        LIBTERMCAP="-ltermcap"
                        READLIBS="${READLIBS} ${LIBTERMCAP}"
                        AC_MSG_RESULT([         ...using ${READLIBS}])
                    ])
                    ;;
             esac

             AC_CHECK_LIB(readline, readline, [
                 LIBREADLINE="-lreadline ${LIBTERMCAP}"
                 AC_DEFINE_UNQUOTED(HAVE_READLINE, 1, [GNU readline library (-lreadline).])
                        AC_MSG_RESULT([         ...using ${LIBREADLINE}])
             ], ,${READLIBS})
        fi
    fi
fi

echo
echo "Miscelaneous settings..."
echo

echo "  Directories:"
echo "    Default prefix is     ${ac_default_prefix}"

CFG_DATAFILE_DIR=$datadir/ntop
CFG_DATAFILE_DIR=`(
    test "x$prefix" = xNONE && prefix=${ac_default_prefix}
    eval echo "$CFG_DATAFILE_DIR"
)`
AC_DEFINE_UNQUOTED(CFG_DATAFILE_DIR,"$CFG_DATAFILE_DIR", [Data file directory])
echo "    Data files are in     $CFG_DATAFILE_DIR"

CFG_CONFIGFILE_DIR=$sysconfdir/ntop
CFG_CONFIGFILE_DIR=`(
    test "x$prefix" = xNONE && prefix=${ac_default_prefix}
    eval echo "$CFG_CONFIGFILE_DIR"
)`
AC_DEFINE_UNQUOTED(CFG_CONFIGFILE_DIR,"$CFG_CONFIGFILE_DIR", [Configuration file directory])
echo "    Config files are in   $CFG_CONFIGFILE_DIR"

CFG_RUN_DIR=$localstatedir/ntop
CFG_RUN_DIR=`(
    test "x$prefix" = xNONE && prefix=${ac_default_prefix}
    eval echo "$CFG_RUN_DIR"
)`
AC_DEFINE_UNQUOTED(CFG_RUN_DIR,"$CFG_RUN_DIR", [Run files directory])
echo "    Run directory is      $CFG_RUN_DIR"

CFG_PLUGIN_DIR=$libdir/ntop/plugins
CFG_PLUGIN_DIR=`(
  test "x$prefix" = xNONE && prefix=${ac_default_prefix}
  test "x$exec_prefix" = xNONE && exec_prefix=${prefix}
  eval echo "$CFG_PLUGIN_DIR"
)`
AC_DEFINE_UNQUOTED(CFG_PLUGIN_DIR,"$CFG_PLUGIN_DIR", [Plugin installation directory])
echo "    Plugin files are in   $CFG_PLUGIN_DIR"

CFG_DBFILE_DIR=$localstatedir/ntop
CFG_DBFILE_DIR=`(
  test "x$prefix" = xNONE && prefix=${ac_default_prefix}
  eval echo "$CFG_DBFILE_DIR"
)`
AC_DEFINE_UNQUOTED(CFG_DBFILE_DIR,"$CFG_DBFILE_DIR", [Database file directory])
echo "    Database files are in $CFG_DBFILE_DIR"
echo

dnl>
dnl> GNU gcc backtrace?
dnl>
AC_MSG_CHECKING([for gcc backtrace])
if test ".${ac_cv_lib_c_backtrace}" = ".yes"; then
    AC_MSG_RESULT([found - automatic SIGSEGV backtrace enabled via -K])
    AC_DEFINE_UNQUOTED(HAVE_BACKTRACE, 1, [backtrace() is available])
else
    AC_MSG_RESULT([not found])
fi

dnl>
dnl> getopt_long?
dnl>
AC_MSG_CHECKING([for gcc getopt_long])
if test ".${ac_cv_lib_c_getopt_long}" = ".yes"; then
    AC_MSG_RESULT([found - long command line options are enabled])
    AC_DEFINE_UNQUOTED(HAVE_GETOPT_LONG, 1, [getopt_long() is available])
else
    AC_MSG_RESULT([not found - long command line options are enabled using ntop code])
fi

dnl>
dnl> Test for facilitynames
dnl>
if test ".${ac_cv_header_sys_syslog_h}" = ".yes" ||
   test ".${ac_cv_header_syslog_h}"     = ".yes" ; then
    AC_MSG_CHECKING([for facilitynames - define SYSLOG_NAMES option])
    AC_TRY_COMPILE([
        #include "confdefs.h"
        #include <stdarg.h>
        #include <stdio.h>
        #define SYSLOG_NAMES
        #if defined(HAVE_SYS_SYSLOG_H)
        #include <sys/syslog.h>
        #elif defined(HAVE_SYSLOG_H)
        #include <syslog.h>
        #endif],
        [void * x = (void*) &(facilitynames[0]);],
        AC_MSG_RESULT(available)
        AC_DEFINE_UNQUOTED(HAVE_FACILITYNAMES, 
                           1, 
                           [glibc syslog.h or sys/syslog.h with facilitynames[] option]),
        AC_MSG_RESULT(unavailable))
fi

dnl>
dnl> Test ether_header has ea
dnl>
AC_MSG_CHECKING([if ether_header uses ether_addr structs])
AC_TRY_COMPILE([
#       include <sys/types.h>
#       if __STDC__
        /* osf3 has REALLY good prototyes */
        struct mbuf;
        struct rtentry;
#       endif
#       include <sys/socket.h>
#       include <net/if.h>
#       include <netinet/in.h>
#       include <netinet/if_ether.h>],
    [u_int i =
         sizeof(((struct ether_header *)0)->ether_dhost.ether_addr_octet)],
    [AC_MSG_RESULT(yes)
     AC_DEFINE_UNQUOTED(CFG_ETHER_HEADER_HAS_EA, 
                        1, 
                        [ether_header uses ether_addr structs])],
    [AC_MSG_RESULT(no)])

dnl>
dnl> check for ip6 address used by sFlow...
dnl>
if test "${ac_disable_plugins}" != ".yes"; then
    AC_MSG_CHECKING([if in6_addr is defined for sFlowPlugin])
    AC_TRY_COMPILE([
#       include <sys/types.h>
#       include <netinet/in.h>
#       include <netinet/in_systm.h>
#       include <sys/socket.h>
#       include <netinet/ip.h>
        ],
        [struct in6_addr tmp;],
        [AC_MSG_RESULT(yes)
         AC_DEFINE_UNQUOTED(HAVE_IN6_ADDR, 
                            1, 
                            [For sFlowPlugin.c to define in6_addr for environments without it.])],
        [AC_MSG_RESULT(no)])
fi

dnl>
dnl> Temporary
dnl>
AC_DEFINE_UNQUOTED(RETSIGTYPE, void, [temporary definition])
NTOP_APPEND_LIBS([$MYRRD], [myrrd])


dnl> Restore version without INCS stuff
CC="${CCSAVE}"
CPP="${CPPSAVE}"
CXX="${CXXSAVE}"

dnl>
dnl> Finish up...
dnl>
if test ".${CCLD}" = "."; then
    CCLD=${CC}
fi

echo "Removing dups and misplaced entries from LIBS and INCS..."
LIBS=`echo ${LIBS} | ${ac_cv_prog_AWK} '{ \
    for(i=NF; i>0; i--) { \
        if ($i in fields) { } else { fields[[$i]]="."; out[[i]]=$i } \
    } \
    for(i=1; i<=NF; i++) { \
        if (i in out) { printf("%s ", out[[i]]) } \
    } \
    print "" \
}'`
INCS=`echo ${INCS} | ${ac_cv_prog_AWK} '{ \
    for(i=NF; i>0; i--) { \
        if ($i in fields) { } else { fields[[$i]]="."; out[[i]]=$i } \
    } \
    for(i=1; i<=NF; i++) { \
        if (i in out) { printf("%s ", out[[i]]) } \
    } \
    print "" \
}'`
echo

echo "-------------------------------------------------------------------"
echo "==================================================================="
echo "-------------------------------------------------------------------"
echo
echo "Creating files..."
echo
AC_SUBST(AS)
AC_SUBST(CCLD)
AC_SUBST(XMLDUMP)
AC_SUBST(CFG_CONFIGFILE_DIR)
AC_SUBST(CFG_DATAFILE_DIR)
AC_SUBST(CFG_DBFILE_DIR)
AC_SUBST(DEFS)
AC_SUBST(DLLTOOL)
AC_SUBST(DYN_FLAGS)
AC_SUBST(EXEEXT)
AC_SUBST(INCS)
AC_SUBST(NTCSH)
AC_SUBST(LIBTOOL_DEPS)
AC_SUBST(NTOP_VERSION_EXTRA)
AC_SUBST(OBJDUMP)
AC_SUBST(OBJEXT)
AC_SUBST(CFG_PLUGIN_DIR)
AC_SUBST(PLUGINS)
AC_SUBST(CFG_RUN_DIR)
AC_SUBST(SCRIPTVER)
AC_SUBST(SO_VERSION_PATCH)

AC_CONFIG_FILES([Makefile])
AC_CONFIG_FILES([myrrd/Makefile])

if test ".${ac_enable_ntcsh}" = ".yes"; then
    AC_CONFIG_FILES([ntcsh/Makefile])
fi

if test ".${ac_disable_plugins}" != ".yes"; then
    AC_CONFIG_FILES([plugins/Makefile])
    AC_CONFIG_FILES([plugins/pep/Makefile])
fi

AC_OUTPUT

echo
echo "-------------------------------------------------------------------"
echo
echo "   Creating version.c..."
echo
/bin/rm -f version.c
echo $PACKAGE_VERSION $NTOP_VERSION_EXTRA  | sed -e 's/.*/char * version   = "&";/' > version.c
./config.guess | sed -e 's/.*/char * osName    = "&";/' >> version.c
echo "char * author    = \"Luca Deri <deri@ntop.org>\";" >> version.c
date +"%D %r" | sed -e 's/.*/char * buildDate = "&";/' >> version.c
echo $CONFIGURE_PARAMETERS | sed -e 's/.*/char * configure_parameters   = "&";/' >> version.c
echo ${host} | sed -e 's/.*/char * host_system_type   = "&";/' >> version.c
echo ${target} | sed -e 's/.*/char * target_system_type   = "&";/' >> version.c
echo ${CC} ${CFLAGS} ${DEFS} | sed -e 's/.*/char * compiler_cflags   = "&";/' >> version.c
echo ${INCS} | sed -e 's/.*/char * include_path    = "&";/' >> version.c
echo ${LDFLAGS} ${LIBS} | sed -e 's/.*/char * system_libs    = "&";/' >> version.c
echo ${prefix} | sed -e 's/.*/char * install_path   = "&";/' >> version.c
echo "/*i18n*/" >>version.c
echo ${LOCALEDIR} | sed -e 's/.*/char * locale_dir   = "&";/' >> version.c

echo
echo "-------------------------------------------------------------------"

dnl> MacOSX needs patched versions of some configure-related files

case "${host}" in
    *darwin* )
	echo "Welcome to OSX"
        cp packages/MacOSX/lt* .
	rm -f libtool
	ln -s  /usr/bin/glibtool libtool
        ;;
esac

echo "==================================================================="
echo "-------------------------------------------------------------------"
echo
echo "(optional) packages are in:"
echo
if test ".${ac_disable_openssl}" != ".yes"; then
    NTOP_RPT_LOC([openSSL ], [${OSSL_LIB}], [${OSSL_INCLUDE}])
fi
NTOP_RPT_LOC([zlib    ], [${ZLIB_LIB}], [${ZLIB_INCLUDE}])

echo
echo "This is your $PACKAGE $VERSION configuration:"
echo
echo "Host System Type  : ${host}"
if test ".${build_alias}" != .; then
    echo "                        Note: --build=${build_alias} specified"
fi
echo "Compiler (cflags) : ${CC} ${CFLAGS}"
echo "Defines           :     ${DEFS}"
echo "Loader (ldflags)  : ${LDFLAGS}"
echo "Include path      : ${INCS}"
echo "System Libs       : ${LIBS}"
echo "MultiThread mode  : ${multithread_mode}"
echo "Install path      : ${prefix}"
echo 
echo "*******************************************************************"
echo "*"
echo "* NOTE: ./configure is now complete!"
echo "*"
echo "*       All of the obviously FATAL errors would cause you to"
echo "*       abort before this point, so while you SHOULD scroll"
echo "*       back and check for error/warning/note messages,"
echo "*       you probably will not..."
echo "*"
echo "++"
echo "++    If you like ntop, please do not forget to support its"
echo "++    development. See SUPPORT_NTOP.txt for more information."
echo "++"
echo "++              Thanks for supporting ntop!"
echo "++"
echo "*"
echo "* NEXT STEP(S):"

case "${target}:${CC}" in
    *-*-freebsd5*:*gcc* )
        echo "*"
        echo "*FreeBSD5: You may encounter a problem building ntop for this OS,"
        echo "*FreeBSD5: where the following messages are repeated many times:"
        echo "*FreeBSD5: "
        echo "*FreeBSD5:    expr: illegal option -- l"
        echo "*FreeBSD5:    usage: expr [-e] expression"
        echo "*FreeBSD5: "
        echo "*FreeBSD5: To avoid this, according to the note on man expr," 
        echo "*FreeBSD5: \"Compatibility with previous implementations\","
        echo "*FreeBSD5: set the flag EXPR_COMPAT before typing make."
        echo "*FreeBSD5: "
        echo "*FreeBSD5: (Under bash, \$ export EXPR_COMPAT=Y will suffice.)"
      ;;
esac

if test ".${HAS_ERROR}" = ".yes"; then
    echo "*"
    echo "*>>>>  An ERROR has occured - please review the output before"
    echo "*>>>>  continuing to make ntop!"
elif test ".${HAS_WARNING}" = ".yes"; then
    echo "*"
    echo "*>>>>  A WARNING message was generated - please review the"
    echo "*>>>>  output before continuing to make ntop!"
fi

echo "*"
echo "*    Building ntop requires GNU Make, so to build ntop, type"
if test ".${ac_enable_static_plugins}" = ".yes"; then
    echo "*    'make sntop' (or on *BSD and Solaris systems, 'gmake sntop')"
else
    echo "*    'make' (or on *BSD and Solaris systems, 'gmake')"
fi
echo "*"
echo "*******************************************************************"
echo

exit 0
