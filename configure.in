dnl> TODOs

dnl>   should use STDC_HEADERS instead of __STDC__
dnl>   delete SNMP from webInterface.c
dnl>   Cleanup HAVE_SYS_SYSLOG_H to match pattern in test program!
dnl>   Cleanup CFG_NEED_GETDOMAINNAME from webInterface.c
dnl>   Cleanup HAVE_REGEX to use the value set by AC_CHECK_LIB
dnl>   Cleanup Autoconf2 (obsolete Autoconf1 macros still in use)
dnl>   Solaris 8 -- libgcc_s -- need test

dnl> -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
dnl>
dnl> Copyright (c) 1998 - 2002 Luca Deri <deri@ntop.org>
dnl> Written Oct2002 by Burton M. Strauss III <burton@ntopsupport.com>
dnl>     (Loosely based on the earlier ntop version)
dnl>
dnl> -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
dnl>
dnl> This program is free software; you can redistribute it and/or modify
dnl> it under the terms of the GNU General Public License as published by
dnl> the Free Software Foundation; either version 2 of the License, or
dnl> (at your option) any later version.
dnl>
dnl> This program is distributed in the hope that it will be useful,
dnl> but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl> MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl> GNU General Public License for more details.
dnl>
dnl> You should have received a copy of the GNU General Public License
dnl> along with this program; if not, write to the Free Software
dnl> Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
dnl>

dnl>
dnl> -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
dnl> this file is processed via 'autoconf' to produce the 'configure' script
dnl> -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
dnl>

dnl>
dnl> Initialization lines.
dnl>   Note that the AC_INIT must, simply MUST be the first line.  
dnl>   Anything before it is ignored in autoconf 2.5x (and beyond?)
dnl>
dnl>   Edit the version # in the AC_INIT line to roll the version.
dnl>   Edit NTOP_VERSION_EXTRA to put something extra (e.g. SourceForge rpm version"
dnl>       into the stamp.
dnl>
AC_INIT([ntop],[2.1.56pre])
AC_PREREQ([2.50])
SCRIPTVER="v1.100-2003-01-29"

dnl>
dnl> generate the config header
dnl>
umask 002
AM_CONFIG_HEADER(config.h)

NTOP_VERSION_EXTRA=""

GDCHART_DIRECTORY="gdchart0.94c"
GD_DIRECTORY="gd-1.8.3"
LIBPNG_DIRECTORY="libpng-1.2.4"
ZLIB_DIRECTORY="zlib-1.1.4"

dnl> order matters...
LIBPNG_DIRECTORY=`(cd ../${GDCHART_DIRECTORY}/${GD_DIRECTORY}/${LIBPNG_DIRECTORY} && pwd)`
GD_DIRECTORY=`(cd ../${GDCHART_DIRECTORY}/${GD_DIRECTORY} && pwd)`
ZLIB_DIRECTORY=`(cd ../${GDCHART_DIRECTORY}/${ZLIB_DIRECTORY} && pwd)`
GDCHART_DIRECTORY=`(cd ../${GDCHART_DIRECTORY} && pwd)`

echo
echo "Welcome to $PACKAGE_NAME, Version $PACKAGE_VERSION $NTOP_VERSION_EXTRA"
echo "  copyright (c) 1998-2002 Luca Deri <deri@ntop.org>"
echo
echo          "Configuration script version $SCRIPTVER"
echo

CONFIGURE_PARAMETERS=$*
echo
echo "Configuring ${PACKAGE_NAME} according to your request(s):"
echo "   ./configure ${CONFIGURE_PARAMETERS}"
echo

dnl>
dnl> Check versions of autotools...
dnl>
dnl>      We know that all of the 1.6.x [1..3] versions of automake work ok
dnl>      and the 2.5x [1..7] of autoconf work ok too.
dnl>      So we could compress them to save a few recreations, but that's 
dnl>      then got to be maintained.  So exact match or recreate...
dnl>
if test -f /tmp/autotoolversions; then
     rm -f /tmp/autotoolversions
fi
automake --version | head -n 1 | awk '{ gsub(/)/, "", $3); print "     " $3 " " $4 }'  >/tmp/autotoolversions
autoconf --version | head -n 1 | awk '{ gsub(/)/, "", $3); print "     " $3 " " $4 }' >>/tmp/autotoolversions
libtool --version | head -n 1  | awk '{ gsub(/)/, "", $3); print "     " $3 " " $4 }' >>/tmp/autotoolversions

touch autotoolversions
diff -q autotoolversions /tmp/autotoolversions 2>/dev/null
rc=$?

if test ".${rc}" = ".1"; then
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* WARNING: Auto* tools installed on this host differ from the ones"
    echo "*          that the ntop distribution uses:"
    echo "*"
    echo "* This host:"
    cat /tmp/autotoolversions
    echo "*"
    echo "* ntop distribution:"
    cat autotoolversions
    echo "*"
    echo "*>>> Version conflicts may cause configure/compile/link problems."
    echo "*"
    echo "*>>> We are going to:"
    echo "*>>>     1. delete the existing generated files"
    echo "*>>>     2. use the auto* tools to recreate them"
    echo "*                (if you do not have automake, autoconf and libtool"
    echo "*                 intalled, this will fail)"
    echo "*>>>     3. tell you to rerun ./configure with the --enable-automake171 flag"
    echo "*"
    echo "*    Please, tell the ntop-dev mailing list if there are problems..."
    echo "*"
    echo "*******************************************************************"
    echo
    echo "1. delete the existing generated files:"
    for i in acinclude.m4 \
             aclocal.m4 \
             Makefile.in \
             config.h.in \
             configure \
             Makefile; do
        if test -f $i; then
             echo "     .... $i"
             rm -f $i
        fi
    done
    echo "    done!"
    echo
    echo "2. use the auto* tools to recreate them:"
    echo "    .... cat acinclude.m4.ntop libtool.m4.in > acinclude.m4"
    cat acinclude.m4.ntop libtool.m4.in > acinclude.m4
    rc=$?
    if test ".${rc}" != ".0"; then
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* ERROR: Unable to run cat acinclude.m4.ntop libtool.m4.in > acinclude.m4"
        echo "*"
        echo "*    We are going to give up."
        echo "*"
        echo "*>>> Please correct the problem and rerun"
        echo "*"
        echo "*******************************************************************"
        echo
        exit 1
    fi
    for i in aclocal \
             autoheader \
             "automake --gnu --copy --add-missing" \
             autoconf; do
        echo "    .... $i"
        $i
        rc=$?
        if test ".${rc}" != ".0"; then
            echo
            echo "*******************************************************************"
            echo "*"
            echo "* ERROR: Unable to run $i"
            echo "*"
            echo "*    We are going to give up."
            echo "*"
            echo "*>>> Please correct the problem with the auto* tools and rerun"
            echo "*"
            echo "*******************************************************************"
            echo
            exit 1
        fi
    done

    cp -f /tmp/autotoolversions autotoolversions

    if test -f /tmp/autotoolversions; then
        rm -f tmp/autotoolversions
    fi

    echo
    echo
    echo "Now, rerun ./configure"
    echo
    exit 1
fi

dnl> autoheader stuff...just ignore
AH_TEMPLATE([HAVE_INT16_T],   [Define for int16 typedef])
AH_TEMPLATE([HAVE_INT32_T],   [Define for int32 typedef])
AH_TEMPLATE([HAVE_INT64_T],   [Define for int64 typedef])
AH_TEMPLATE([HAVE_INT8_T],    [Define for int8 typedef])
AH_TEMPLATE([HAVE_UINT64_T],  [Define for unsigned int 64 typedef])
AH_TEMPLATE([HAVE_U_INT16_T], [Define for unsigned int 16 typedef])
AH_TEMPLATE([HAVE_U_INT32_T], [Define for unsigned int 32 typedef])
AH_TEMPLATE([HAVE_U_INT64_T], [Define for unsigned int 64 typedef])
AH_TEMPLATE([HAVE_U_INT8_T],  [Define for unsigned int 8 typedef])
AH_TEMPLATE([HAVE_LIBWRAP],   [Define for tcp wrappers (-lwrap)])
dnl> end autoheader stuff

echo "*******************************************************************"
echo "*                                                                 *"
echo "* NOTICE:  I know you're used to ignoring output from ./configure *"
echo "*                                                                 *"
echo "*          ntop has a lot of complexity and interdependences.     *"
echo "*                                                                 *"
echo "*          Please, please AT LEAST read the stuff in these        *"
echo "*          boxes!                                                 *"
echo "*                                                                 *"
echo "*>>> The ACTION taken is shown prefixed '>>>'                     *"
echo "*                                                                 *"
echo "*    If the ACTION is unacceptable,                               *"
echo "*??? The REMEDIATION plan is shown prefixed with '???'            *"
echo "*                                                                 *"
echo "*******************************************************************"
echo

dnl> Basic sanity check ... does ntop.c exist?
AC_CONFIG_SRCDIR([ntop.c])

dnl> force configure to use current directory
AC_CONFIG_AUX_DIR(.)

dnl> This has to be here due to some odd dependency...
AC_CANONICAL_TARGET

AM_INIT_AUTOMAKE()
AC_MSG_CHECKING([for aclocal.m4])
AC_CHECK_FILE(aclocal.m4, ,
    echo ""
    echo "Invoking aclocal to create aclocal.m4..."
    aclocal
    echo ""
)
AC_CHECK_FILE(depcomp, , [

    echo ""
    echo "depcomp missing... will install it in this ntop directory."
    echo "  Checking automake version..."
    automakeversion=`automake --version | grep ^automake | awk '{ print $4 }'`
    case "${automakeversion}" in
        *1\.[[45]]*)
            echo "*******************************************************************"
            echo "*                                                                 *"
            echo "*ERROR: ntop requires automake version 1.6 or newer...            *"
            echo "*                                                                 *"
            echo "*  You are executing ${automakeversion}"
            echo "*                                                                 *"
            echo "*>>>   Unable to proceed with your request, aborting ./configure! *"
            echo "*                                                                 *"
            echo "*???    Suggestion - Install a private copy of automake 1.6.3.    *"
            echo "*???                 It's quite easy and does NOT require root:   *"
            echo "*                                                                 *"
            echo "*   Download automake 1.6.3 from gnu                              *"
            echo "*     $ wget http://ftp.gnu.org/gnu/automake/automake-1.6.3.tar.gz*"
            echo "*                                                                 *"
            echo "*   Untar it                                                      *"
            echo "*     $ tar xfvz automake-1.6.3.tar.gz                            *"
            echo "*                                                                 *"
            echo "*   Make it                                                       *"
            echo "*     $ cd automake-1.6.3                                         *"
            echo "*     $ ./configure --prefix=/home/<whatever>/automake163         *"
            echo "*     $ make                                                      *"
            echo "*     $ make install                                              *"
            echo "*                                                                 *"
            echo "*   Add it to your path.  Under bash do this:                     *"
            echo "*     $ PATH=/home/<whatever>automake163/bin:\$PATH                *"
            echo "*     $ export PATH                                               *"
            echo "*                                                                 *"
            echo "*******************************************************************"
            exit 1 
            ;;
    esac

    echo "  Invoking automake to copy depcomp..."
    automake --gnu --copy --add-missing
    echo ""
])

dnl> early since we need it for --enable-showoses
AC_PROG_AWK

AC_ARG_ENABLE(void,
              [  +--ntop-specific:------------------------------------------------------------+])
AC_ARG_WITH(void,
              [  +--external-packages:--------------------------------------------------------+])

AC_ARG_ENABLE(configuredebug,
              [  --enable-configuredebug     display debug information during ./configure],
              ac_debug="yes"
              echo "DEBUG: Enabled"
              echo "    PNG:  ${LIBPNG_DIRECTORY}"
              echo "    GD:   ${GD_DIRECTORY}"
              echo "    ZLIB: ${ZLIB_DIRECTORY}"
              echo " GDCHART: ${GDCHART_DIRECTORY}",
              ac_debug="no")

AC_ARG_ENABLE(mt,
              [  --disable-mt                disable multithread support [default=enabled]],
              ac_disable_multithread="yes",
              ac_disable_multithread="no")

AC_ARG_WITH(ssl,
              [  --without-ssl               disable HTPPS support [default=enabled]],
              ac_disable_openssl="yes",
              ac_disable_openssl="no")

AC_ARG_ENABLE(sslv3,
              [  --enable-sslv3              enable ssl v3 support [default=disabled]],
              ac_enable_sslv3="yes",
              ac_enable_sslv3="no")

AC_ARG_ENABLE(sslwatchdog,
              [  --enable-sslwatchdog        enable Watchdog for ssl hangups [default=disabled]],
              ac_enable_sslwatchdog="yes",
              ac_enable_sslwatchdog="no")

AC_ARG_WITH(gdchart,
              [  --without-gdchart           disable use of GDChart [default=enabled]],
              ac_disable_gdchart="yes",
              ac_disable_gdchart="no")

AC_ARG_WITH(tcpwrap,
              [  --with-tcpwrap              enable use of TCP Wrapper [default=disabled]],
              ac_enable_tcpwrap="yes",
              ac_enable_tcpwrap="no")

AC_ARG_ENABLE(plugins,
              [  --disable-plugins           disable compilation of plugins [default=enabled]],
              ac_disable_plugins="yes",
              ac_disable_plugins="no")

AC_ARG_ENABLE(micro-ntop,
              [  --enable-micro-ntop         compile a slim version of ntop [default=disabled]],
              ac_micro_ntop="yes",
              ac_micro_ntop="no")

AC_ARG_ENABLE(intop,
              [  --enable-intop              enable intop (obsolete) command line version [default=disabled]],
              ac_enable_intop="yes",
              ac_enable_intop="no")

AC_ARG_WITH(curses,
              [  --without-curses            disable use of curses [default=enabled]],
              ac_disable_curses="yes",
              ac_disable_curses="no")

AC_ARG_WITH(readline,
              [  --without-readline          disable use of GNU readline [default=enabled]],
              ac_disable_readline="yes",
              ac_disable_readline="no")

AC_ARG_ENABLE(ignoresigpipe,
              [  --enable-ignoresigpipe      Ignore SIGPIPE errors [default=do not ignore]],
              ac_enable_ignoresigpipe="yes",
              ac_enable_ignoresigpipe="no")

AC_ARG_ENABLE(i18n,
              [  --enable-i18n               Enable (limited) internationalization [default=disabled]],
              ac_enable_i18n="yes",
              ac_enable_i18n="no")

AC_ARG_ENABLE(xmldump,
              [  --enable-xmldump            Enable xml-based data dump [default=disabled]],
              ac_enable_xmldump="yes",
              ac_enable_xmldump="no")

dnl>
dnl> Define the "WITH"s for package root directories ... deal with these later...
dnl>
AC_ARG_WITH(void,
              [  +-External-source-locations:-------------------------------------------------+])

AC_ARG_WITH(  pcap-root,
              [  --with-pcap-root=DIR        LBNL pcap source tree located in DIR],
              PCAP_ROOT="$withval",
              PCAP_ROOT=)

AC_ARG_WITH(  gdbm-root,
              [  --with-gdbm-root=DIR        GNU gdbm source tree located in DIR],
              GDBM_ROOT="$withval",
              GDBM_ROOT=)

AC_ARG_WITH(  ossl-root,
              [  --with-ossl-root=DIR        openSSL source tree located in DIR],
              OSSL_ROOT="$withval",
              OSSL_ROOT=)

AC_ARG_WITH(  gdchart-root,
              [  --with-gdchart-root=DIR     GDChart source tree located in DIR],
              GDCHART_ROOT="$withval",
              GDCHART_ROOT=)

AC_ARG_WITH(  gd-root,
              [  --with-gd-root=DIR          GD source tree located in DIR],
              GD_ROOT="$withval",
              GD_ROOT=)

AC_ARG_WITH(  libpng-root,
              [  --with-libpng-root=DIR      PNGLIB source tree located in DIR],
              LIBPNG_ROOT="$withval",
              LIBPNG_ROOT=)

AC_ARG_WITH(  zlib-root,
              [  --with-zlib-root=DIR        ZLIB source tree located in DIR],
              ZLIB_ROOT="$withval",
              ZLIB_ROOT=)

AC_ARG_WITH(  rrd-root,
              [  --with-rrd-root=DIR         RRD located in DIR],
              RRD_ROOT="$withval",
              RRD_ROOT=)

AC_ARG_WITH(  localedir,
              [  --with-localedir=DIR        LOCALE files located in DIR (i18n)],
              LOCALEDIR="$withval",
              LOCALEDIR=)

AC_ARG_WITH(  xml2-root,
              [  --with-xml2-root=DIR        xml2 library source tree located in DIR],
              XML2_ROOT="$withval",
              XML2_ROOT=)

AC_ARG_WITH(  glib-root,
              [  --with-glib-root=DIR        glib library source tree located in DIR],
              GLIB_ROOT="$withval",
              GLIB_ROOT=)

AC_ARG_WITH(  glibconfig-root,
              [  --with-glibconfig-root=DIR  glibconfig.h source in DIR],
              GLIBCONFIG_ROOT="$withval",
              GLIBCONFIG_ROOT=)

AC_ARG_WITH(  gdome-root,
              [  --with-gdome-root=DIR       gdome library source tree located in DIR],
              GDOME_ROOT="$withval",
              GDOME_ROOT=)

AC_ARG_ENABLE(showoses,
              [  --enable-showoses           display OS Support information.],
              [echo
               echo  "Showing OS support information... one second"
               echo
               if test ".${ac_cv_prog_AWK}" = "."; then
                   echo "  Sorry, unable to honor your request - no awk appears to be available"
                   echo
                   exit 1
               fi
               if test ! -r configure.in; then
                   echo "  Sorry, unable to find the configure.in script in this directory."
                   exit 1
               fi
               if test ! -r utils/showoses.awk; then
                   echo "  Sorry, unable to find the showoses.awk script in the utils/ directory."
                   exit 1
               fi
               ${ac_cv_prog_AWK} -f utils/showoses.awk configure.in
               echo
               exit 0
])

AC_ARG_ENABLE(iknowbetter,
              [  --enable-iknowbetter        Override WILLFAIL],
              ac_willfailoverride="yes",
              ac_willfailoverride="no")

AC_ARG_ENABLE(void,
              [  +----------------------------------------------------------------------------+])
AC_ARG_WITH(void,
              [  +----------------------------------------------------------------------------+])

# Set constants and defaults
AS=
CCLD=
DEFS="-DHAVE_CONFIG_H"
DLLTOOL=
DYN_FLAGS=
EXEEXT=
INCS=
INTOP=
LIBCURSES=
LIBREADLINE=
LIBTERMCAP=
OBJDUMP=
OBJEXT=o
RRDLIB=
SO_VERSION_PATCH=

dnl>
dnl> Yes, we want to minimize the amount of work before we tell
dnl> the user we can't compile for this host, but this has to
dnl> to preceed the OS stuff so $CC is set.
dnl>

echo
echo "Checking C compiler program and features..."
echo 
AM_PROG_CC_STDC
if test ".${ac_cv_prog_cc_stdc}" = ".no"; then
    echo 
    echo "*******************************************************************"
    echo "*"
    echo "* WARNING: Attempting to configure for non ANSI standard C."
    echo "*"
    echo "*>>> This is unsupported."
    echo "*>>> It will probably fail."
    echo "*"
    echo "*    You are welcome to try - but please, keep the ntop-dev"
    echo "*    mailing list updated with your successes or failures..."
    echo "*"
    echo "*******************************************************************"
    echo
fi

if test ".${ac_debug}" = ".yes"; then
    echo "DEBUG:   CC starts as '${CC}')"
    echo "DEBUG:   CFLAGS as    '${CFLAGS}')"
fi

echo
echo "Checking for support status of ${target}, ${CC}..."
echo 
dnl>
dnl> How does this work?
dnl>
dnl> First off, we split up the target:cc stuff and tag each version we know
dnl> about with a couple of paramters.
dnl>
dnl>    DEFINEOS becomes the -DOS_xxxxx value
dnl>    STATUS   tells us which of the text blocks to print
dnl>    REMEDIATE1/2 and NOTE1/2 are extra blocks of text we can print
dnl>
dnl>    VERIFIEDn="ntop:yyyy-mm-dd:name <email>:osversion";
dnl>    VNOTES  ="";
dnl>

dnl> Really pervasive settings (CC, CFLAGS) go here.
dnl> The rest should be the second case $target, after we've done most 
dnl> of the common tests.

if test ".${ac_debug}" = ".yes"; then
    echo "DEBUG: build        is '${build}'"
    echo "       host         is '${host}'"
    echo "       target       is '${target}'"
    echo "       CC           is '${CC}'"
fi

case "${target}:${CC}" in
    *-*-mingw32*:gcc* )
        DEFINEOS="MINGW";     STATUS="SUPPORTED";
      ;;

    *-*-cygwin*:* )
        VERIFIED1="2.1.51:2002-10-21:Burton Strauss <burton@ntopsupport.com:any"
        VNOTES  ="Assumed to fail - ntop has never supported cygwin"
        REMEDIATE1="Use MinGW and the special makefiles instead."
        DEFINEOS="CYGWIN";    STATUS="WILLFAIL"
      ;;

    *-*-linux*:*gcc* )
        VERIFIED1="2.1.51:2002-11-24:Burton Strauss <burton@ntopsupport.com>:RedHat 7.2, 7.3 and 8.0"
        VERIFIED2="2.1.51:2002-10-24:Peter Sinoros-Szabo Peter <sini@cs.bme.hu>:Suse i686, 2.4.18-4GB-SMP"
        DEFINEOS="LINUX";     STATUS="SUPPORTED"
      ;;

    *-*-solaris2.9*:* )
        NOTE1="Supported: Solaris 8 for both sparc and i86"
        DEFINEOS="SOLARIS";   STATUS="UNTESTED"
      ;;

    *-*-solaris2.8*:* )
        VERIFIED1="2.1.51:2002-10-21:Burton Strauss <burton@ntopsupport.com:Solaris 8 i86"
        NOTE1="Requires various gnu tools from SunFreeware.com"
        DEFINEOS="SOLARIS";   STATUS="SUPPORTED"
      ;;

    *-*-solaris2.5*:* )
        NOTE1="Trying Solaris 2.5 configuration stuff from ntop 2.1."
        DEFINEOS="SOLARIS";   STATUS="UNTESTED"
      ;;

    *-*-solaris*:* )
        DEFINEOS="SOLARIS";   STATUS="UNTESTED"
      ;;

    *-*-darwin*:* )
        VERIFIED1="2.1.51:2002-10-21:Burton Strauss <burton@ntopsupport.com>:MAC OS X 10.1 (Darwin)"
        VERIFIED2="2.1.51:2002-10-22:Luca Deri:MAC OS X 10.2 (Jaguar)"
        NOTE1="'Darwin 5.5' is the kernel of the os known as MAC OS X 10.1"
        NOTE2="'Darwin 6.1' is the kernel of the os known as MAC OS X 10.2 (Jaguar)"
        DEFINEOS="DARWIN";    STATUS="SUPPORTED"

        CFLAGS="-no-cpp-precomp $CFLAGS"
      ;;

    *-*-freebsd[[45]]*:*gcc* )
        VERIFIED1="2.1.51:2002-10-21:Burton Strauss <burton@ntopsupport.com>:FreeBSD-4.6.2-RELEASE"
        VERIFIED2="2.1.51:2002-10-25:Stanley Hopcroft <anwsmh@IPAustralia.Gov.AU>:4.7-RELEASE"
        VERIFIED3="2.1.55:2003-01-19:Burton Strauss <burton@ntopsupport.com>:5.0-RELEASE"
        DEFINEOS="FREEBSD";   STATUS="SUPPORTED"
        if test ".${LOCALEDIR}" = "."; then
            LOCALEDIR="/usr/share/locale"
        fi
      ;;

    *-*-freebsd*:* )
        DEFINEOS="FREEBSD";   STATUS="UNTESTED"
      ;;

    *-*-openbsd3.1*:*gcc* )
        DEFINEOS="OPENBSD";   STATUS="WILLFAIL"
      ;;

    *-*-openbsd*:* )
        DEFINEOS="OPENBSD";   STATUS="UNTESTED"
      ;;

    *-*-netbsd*1.5*:gcc* )
        VERIFIED1="2.1.51:2002-10-23:Burton Strauss <burton@ntopsupport.com:1.5.3 w/ updated auto* tools"
        NOTE1="Single Threaded only."
        DEFINEOS="NETBSD"
        if test ".${ac_disable_multithread}" = ".yes"; then
            STATUS="SUPPORTED"
        else
            STATUS="WILLFAIL"
            NOTE2="With ANY of the threads packages, you are on your own!"
        fi
      ;;

    *-*-netbsd*:* )
        DEFINEOS="NETBSD";    STATUS="UNTESTED"
      ;;

    *-*-hpux11*:gcc* )
        DEFINEOS="HPUX";      STATUS="SUPPORTED"
        CFLAGS="${CFLAGS}"
      ;;

    *-*-hpux10*:gcc* )
        NOTE1="Single Threaded only."
        DEFINEOS="HPUX"
        CFLAGS="${CFLAGS}"
        if test ".${ac_disable_multithread}" = ".yes"; then
            STATUS="UNTESTED"
        else
            STATUS="WILLFAIL"
        fi
      ;;

    *-*-aix5l*:gcc* )
        NOTE1="Guessing that AIX5L is like Linux."
        DEFINEOS="AIX";       STATUS="UNTESTED"
      ;;

    *-*-aix[45]*:gcc* )
        NOTE1="Trying configuration stuff from ntop 1.3 for AIX 4.1/4.2."
        DEFINEOS="AIX";       STATUS="UNTESTED"

        dnl> These are so pervasive, they MUST be here...
        GCCLIB=`gcc -print-libgcc-file-name`
        cp $GCCLIB .
        LIBS="-L. -lgcc ${LIBS}"
        CCLD="cc -bI:/lib/pse.exp"
      ;;

    *-*-aix4*:* )
        REMEDIATE1="Install gcc."
        DEFINEOS="AIX";       STATUS="WILLFAIL"
      ;;

    *-*-aix*:* )
        DEFINEOS="AIX";       STATUS="UNTESTED"
      ;;

    * )
        DEFINEOS="";          STATUS="UNKNOWN"
      ;;
esac

dnl> Last chance default (if there is an os-specific value, set it above)
if test ".${LOCALEDIR}" = "."; then
    LOCALEDIR="/usr/lib/locale"
fi

CFLAGS="-D${DEFINEOS} ${CFLAGS}"

dnl> Leave this: it causes showoses to print it's footer
dnl> showoses TERMS

echo
echo "*******************************************************************"
echo "*"

case "${STATUS}" in

    SUPPORTED)
        echo "* NOTE: Building ntop for a supported platform"
        echo "*       This means we expect ntop to work without major issues"
        echo "*"
        echo "*            '${target}'"
        if test ".${NOTE1}" != "."; then
            echo "*"
            echo "*    ${NOTE1}"
        fi
        if test ".${NOTE2}" != "."; then
            echo "*    ${NOTE2}"
        fi
        ;;

    UNTESTED)
        echo "* NOTE: Building ntop for an untested platform"
        echo "*"
        echo "*            '${target}'"
        echo "*"
        echo "*      Untested means that:"
        echo "*"
        echo "*           1. A previous version of this OS is supported."
        echo "*        or 2. This version of this OS was supported by a"
        echo "*              previous version of ntop."
        echo "*"
        echo "*     ./configure applies the same configuration options,"
        echo "*     special parameters, etc. as for the prior release."
        echo "*"
        echo "*             For OS .0 releases that is probably a bad bet..."
        echo "*"
        echo "*  It could just be that you are compiling an older version"
        echo "*  of ntop on a new OS release - check the http://www.ntop.org"
        echo "*  site for an update."
        if test ".${NOTE1}" != "."; then
            echo "*"
            echo "*    ${NOTE1}"
        fi
        if test ".${NOTE2}" != "."; then
            echo "*    ${NOTE2}"
        fi
        ;;

    WILLFAIL)
        echo "* ERROR: Attempting to build ntop for an unsupported platform"
        echo "*"
        echo "*            '${target}'"
        echo "*"
        echo "*>>> This is unsupported."
        echo "*>>> It will almost certainly fail"
        echo "*           (that is why it is listed as 'unsupported' - doh!)"
        if test ".${REMEDIATE1}" != "."; then
            echo "*"
            echo "*??? ${REMEDIATE1}"
        fi
        if test ".${REMEDIATE2}" != "."; then
            echo "*??? ${REMEDIATE2}"
        fi
        if test ".${ac_willfailoverride}" = ".yes"; then
            echo "*"
            echo "*   But... you think you know better (or are testing things)"
            echo "*          so let us rock and roll..."
        fi
        ;;

    *)
        echo "* ERROR: Attempting to build ntop for an unknown platform"
        echo "*"
        echo "*            '${target}'"
        echo "*"
        echo "*>>> This is unsupported."
        echo "*>>> It will probably fail."
        echo "*"
        echo "*    Of course, you are certainly welcome to try ntop on this platform..."
        ;;
esac

echo "*"
echo "*    Please keep the ntop-dev mailing list updated with any"
echo "*    successes you have or problems you encounter..."
 echo "*"

if test ".${VERIFIED1}" != "."; then
    echo "*   Support for this platform was most recently verified for"
    echo "*"
    echo $VERIFIED1 | awk -f utils/verified.awk
    if test ".${VERIFIED2}" != "."; then
        echo $VERIFIED2 | awk -f utils/verified.awk
    fi
    if test ".${VERIFIED3}" != "."; then
        echo $VERIFIED3 | awk -f utils/verified.awk
    fi
    if test ".${VERIFIED4}" != "."; then
        echo $VERIFIED4 | awk -f utils/verified.awk
    fi
    if test ".${VNOTES}" != "."; then
        echo "*    ${VNOTES}"
    fi
else
    echo "*   Support is unverified..."
fi
echo "*"
echo "*******************************************************************"
echo

dnl> Leave this: it causes showoses to stop
dnl> showoses END

case "${STATUS}" in
    WILLFAIL)
          if test ".${ac_willfailoverride}" != ".yes"; then
              exit 1
          fi
      ;;
esac

dnl>
dnl>  Here so we stop processing ASAP after printing above
dnl>
AC_ARG_ENABLE(test,
              [  --enable-test                Test platform and stop],
              exit 0)

echo
echo "Initializing..."
echo
# Checks for programs.
AC_PROG_CXX
AC_PROG_AWK
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB

AC_PROG_LIBTOOL

dnl> make NTOPDIR the default for the installation
AC_PREFIX_DEFAULT(${NTOPDIR:-/usr/local})

echo
echo "Test the compiler and setup CFLAGS..."
echo
case "$CFLAGS" in
    *-g* )
        ;;
    * )
        CFLAGS="$CFLAGS -g"
        AC_MSG_CHECKING([if compiler accepts -g (debugging information)])
        oCFLAGS=$CFLAGS
        CFLAGS="-g $CFLAGS"
        AC_TRY_COMPILE( ,
                       return 0 ,
                       AC_MSG_RESULT(yes),
                       CFLAGS="${oCFLAGS}"
                       AC_MSG_RESULT(no)
                      )
        ;;
esac

AC_MSG_CHECKING([if compiler accepts -W (warning flags)])
oCFLAGS=$CFLAGS
CFLAGS="$CFLAGS -Wshadow -Wpointer-arith -Wmissing-prototypes -Wmissing-declarations -Wnested-externs"
AC_TRY_COMPILE( ,
               return 0 ,
               AC_MSG_RESULT(yes),
               CFLAGS="${oCFLAGS}"
               AC_MSG_RESULT(no)
              )

dnl> add pic flag in any case this makes sure all our code is relocatable
CFLAGS="$CFLAGS "`grep pic_flag= libtool | head -n1 | sed -e 's/.*pic_flag=//' -e 's/"//g'`

dnl> Specific compiler feature tests
AC_C_CONST
AC_C_VOLATILE
AC_C_INLINE
AC_C_CHAR_UNSIGNED
AC_C_LONG_DOUBLE  

if test ".${ac_debug}" = ".yes"; then
    echo "DEBUG: After compiler tests, CFLAGS is '${CFLAGS}'"
fi

AC_C_BIGENDIAN([AC_DEFINE_UNQUOTED(CFG_BIG_ENDIAN, 1, [ntop built for big endian machine])],
               [AC_DEFINE_UNQUOTED(CFG_LITTLE_ENDIAN, 1,  [ntop built for little endian machine])],
               [AC_DEFINE_UNQUOTED(CFG_UNKNOWN_ENDIAN, 1, [ntop built for unknown machine])])

dnl> Define the arguments we accept...
dnl>
dnl>   In this version of the configure file, we use AC_ARG_WITH for whole external
dnl>   programs and AC_ARG_ENABLE for features of ntop itself.  Since they're the
dnl>   same as to processing, we don't separate them here.
dnl>
dnl>   And it keeps them together in the ./configure --help output
dnl>
dnl>   Remember, there shouldn't be any processing in these... that's below when
dnl>   we test for libraries.  It's ok to set values via AC_DEFINE_UNQUOTED().

echo
echo "-------------------------------------------------------------------"
echo
echo "   **Handling your --enable and --disable requests**"
echo

echo
echo "Multithread?"
if test ".${ac_disable_multithread}" = ".yes"; then
    echo "    ...Disabled via command line option --disable-mt"
    multithread_mode="disabled (Single Threaded) via --disable-mt"
else
    echo "    ...(Default) Requested if available. Disable via command line option --disable-mt."
fi

echo
echo "SSL?"
if test ".${ac_disable_openssl}" = ".yes"; then
    echo "    ...Disabled via command line option --without-ssl"
else
    echo "    ...(Default) Requested if available. Disable via command line option --without-ssl."
    echo "  sslv3?"
    if test ".${ac_enable_sslv3}" = ".yes"; then
        echo "    ...Requested if available AT RUN TIME."
        AC_DEFINE_UNQUOTED(MAKE_WITH_SSLV3_SUPPORT, 1, [Support SSLv3 if available])
    else
        echo "    ...(Default) Disabled. Request via command line option --enable-sslv3"
    fi
    if test ".${ac_enable_sslwatchdog}" = ".yes"; then
        echo "    ...Requested via command line option --enable-sslwatchdog"
        AC_DEFINE_UNQUOTED(MAKE_WITH_SSLWATCHDOG_COMPILETIME, 1, [Enable SSL Watchdog])
    else
        echo "    ...(Default) Disabled. Request via command line option  --enable-sslwatchdog"
        echo "                                    or run time option."
    fi
fi

echo
echo "GDChart?"
if test ".${ac_disable_gdchart}" = ".yes"; then
    echo "    ...Disabled via command line option --without-gdchart"
else
    echo "    ...(Default) Requested if available. Disable via command line option --without-gdchart."
fi

echo
echo "XML Dump?"
if test ".${ac_enable_xmldump}" = ".yes"; then
    echo "    ...Requested if available."
else
    echo "    ...(Default) Disabled. Request via command line option --enable-xmldump."
fi

echo
echo "TCP Wrappers?"
if test ".${ac_enable_tcpwrap}" = ".yes"; then
    echo "    ...Requested via command line option --enable-tcpwrap"
else
    echo "    ...(Default) Disabled. Request via command line option --enable-tcpwrap."
fi

echo
echo "Plugins?"
PLUGINS=
if test ".${ac_disable_plugins}" = ".yes"; then
    echo "    ...Disabled via command line option --disable-plugins"
else
    PLUGINS=plugins
    echo "    ...(Default) Requested. Disable via command line option --disable-plugins."
fi

echo
echo "Micro ntop?"
if test ".${ac_micro_ntop}" = ".yes"; then
    echo "    ...Requested via command line option --enable-micro-ntop."
    AC_DEFINE_UNQUOTED(MAKE_MICRO_NTOP, 1, [Define to build micro ntop])
else
    echo "    ...(Default) Disabled. Request via command line option --enable-micro-ntop."
fi

echo
echo "intop (obsolete, but it will not die!)?"
if test ".${ac_enable_intop}" != ".yes"; then
    echo "    ...(Default) Disabled. Request via command line option --enable-intop."
else
    echo "    ...Requested via command line option --enable-intop."
    echo
    echo "*******************************************************************"
    echo "*******************************************************************"
    echo "*******************************************************************"
    echo "*******************************************************************"
    echo "*******************************************************************"
    echo "*******************************************************************"
    echo "*"
    echo "* WARNING:  1. intop is UNSUPPORTED."
    echo "*"
    echo "*        We make the bare minimum of source changes so that intop"
    echo "*        compiles and starts up, and even that is subject to"
    echo "*        change."
    echo "*"
    echo "*        If it works FOR YOU, great."
    echo "*"
    echo "*        If it doesn't work FOR YOU, don't bother asking about"
    echo "*        support."
    echo "*"
    echo "*???     1. Use the web interface"
    echo "*"
    echo "*******************************************************************"
    echo "*******************************************************************"
    echo "*******************************************************************"
    echo "*******************************************************************"
    echo "*******************************************************************"
    echo "*******************************************************************"
    echo

    echo "  curses?"
    if test ".${ac_disable_curses}" = ".yes"; then
        echo "    ...Disabled via command line option --without-curses."
    else
        echo "    ...(Default) Requested if available. Disable via command line option --without-curses."
    fi

    echo "  GNU readline?"
    if test ".${ac_without_readline}" != ".yes"; then
        echo "    ...Disabled via command line option --without-readline."
    else
        echo "    ...(Default) Requested if available. Disable via command line option --without-readline."
    fi
fi


echo
echo "Ignore SIGPIPE?"
if test ".$ac_enable_ignoresigpipe" = ".yes"; then
    echo "    ...Requested via command line option --enable-ignoresigpipe."
    AC_DEFINE_UNQUOTED(MAKE_WITH_IGNORE_SIGPIPE, 1, [Define for IGNORE of SIGPIPE])
else
    echo "    ...(Default) Disabled. Request via command line option --enable-ignoresigpipe"
    echo "                                    or run time option."
fi

echo
echo "Internationalization (i18n)?"
if test ".$ac_enable_i18n" = ".yes"; then
    echo "    ...Requested via command line option --enable-i18n."
    AC_DEFINE_UNQUOTED(MAKE_WITH_I18N, 1, [Define for internationalization])
else
    echo "    ...(Default) Disabled. Request via command line option --enable-i18n"
fi

echo
echo "Testing for headers..."
echo
echo "  Note: We do ALL the tests here, then trap problems below!"
echo
AC_HEADER_STDC
AC_HEADER_DIRENT
AC_HEADER_SYS_WAIT
AC_HEADER_TIME 

# This set is tested for by AC_HEADER_STDC, above...
dnl>AC_CHECK_HEADERS([float.h stddef.h stdlib.h string.h])

# Standard c stuff - must have
AC_CHECK_HEADERS([errno.h fcntl.h limits.h unistd.h])
AC_CHECK_HEADERS([stdio.h strings.h])
AC_CHECK_HEADERS([sys/ioctl.h sys/socket.h sys/time.h sys/types.h])

# Network
AC_CHECK_HEADERS([netdb.h])
AC_CHECK_HEADERS([netinet/in.h])
AC_CHECK_HEADERS([arpa/inet.h arpa/nameser.h])
AC_CHECK_HEADERS([net/bpf.h])
AC_CHECK_HEADERS([net/ethernet.h])
AC_CHECK_HEADERS([net/if.h])
AC_CHECK_HEADERS([netinet/if_ether.h])
AC_CHECK_HEADERS([netinet/in_systm.h])
AC_CHECK_HEADERS([netinet/ip.h])
AC_CHECK_HEADERS([netinet/ip_icmp.h])
AC_CHECK_HEADERS([netinet/tcp.h])
AC_CHECK_HEADERS([netinet/udp.h])
dnl>  Note - if ethertype is missing, ntop.h has the critical #defines extracted...
AC_CHECK_HEADERS([ethertype.h])
AC_CHECK_HEADERS([pcap.h])

dnl> Security related
AC_CHECK_HEADERS([crypt.h pwd.h security/pam_appl.h shadow.h])

dnl> i18n
AC_CHECK_HEADERS([locale.h langinfo.h])

## Other
AC_CHECK_HEADERS([dirent.h])
AC_CHECK_HEADERS([dlfcn.h dl.h])
AC_CHECK_HEADERS([gdbm.h])
AC_CHECK_HEADERS([getopt.h])
AC_CHECK_HEADERS([if.h])
AC_CHECK_HEADERS([inttypes.h])
AC_CHECK_HEADERS([memory.h])
AC_CHECK_HEADERS([sys/ldr.h])
AC_CHECK_HEADERS([sys/select.h])
AC_CHECK_HEADERS([sys/sockio.h])
AC_CHECK_HEADERS([sys/stat.h])
AC_CHECK_HEADERS([sys/un.h])
AC_CHECK_HEADERS([sys/wait.h])
AC_CHECK_HEADERS([zlib.h])

dnl> syslog
AC_CHECK_HEADERS([sys/syslog.h syslog.h])

dnl> Openssl
AC_CHECK_HEADERS([openssl/rsa.h openssl/crypto.h openssl/x509.h openssl/pem.h openssl/ssl.h openssl/err.h])

dnl> Multithreading...  
dnl>    pthread.h is required, 
dnl>    sched.h or sys/sched.h are optional, but improves performance
dnl>    semaphore.h is also optional
AC_CHECK_HEADERS([semaphore.h])
AC_CHECK_HEADERS([sched.h sys/sched.h])
AC_CHECK_HEADERS([pthread.h])

dnl> Optional, used for -L parameter
AC_CHECK_HEADERS([sys/syslog.h syslog.h])

dnl> GDChart
AC_CHECK_HEADERS([gdc.h gd.h png.h])

dnl> Used for tcpwrappers
AC_CHECK_HEADERS([tcpd.h])

dnl> Used only by intop
AC_CHECK_HEADERS([readline/readline.h])
AC_CHECK_HEADERS([curses.h ncurses.h])

dnl> Used only by regex.c
dnl>   Note: stack allocation, not encouraged for use...
AC_CHECK_HEADERS([alloca.h])

dnl> Used only by plugins/rrdPlugin.c
AC_CHECK_HEADERS(rrd.h)

dnl> XML dump
AC_CHECK_HEADERS(glib.h glibconfig.h)
AC_CHECK_HEADERS(xmlversion.h)
AC_CHECK_HEADERS(gdome.h)

echo
echo "Testing for common typedefs and structures..."
echo
echo "  Again: We do ALL the tests here, then trap problems below!"
echo
AC_TYPE_PID_T
dnl> Autoconf2: AC_CHECK_TYPE(pid_t, int)
AC_TYPE_SIZE_T
dnl> Autoconf2: AC_CHECK_TYPE(size_t, unsigned)
AC_HEADER_TIME
AC_STRUCT_TM
AC_STRUCT_TIMEZONE 

echo
echo "Testing for typedefs..."
echo
echo "  Again: We do ALL the tests here, then trap problems below!"
echo
AC_CHECK_TYPEDEF(u_int64_t, sys/types.h)
AC_CHECK_TYPEDEF(uint64_t, sys/types.h)
AC_CHECK_TYPEDEF(u_int32_t, sys/types.h)
AC_CHECK_TYPEDEF(u_int16_t, sys/types.h)
AC_CHECK_TYPEDEF(u_int8_t, sys/types.h)
AC_CHECK_TYPEDEF(int64_t, sys/types.h)
AC_CHECK_TYPEDEF(int32_t, sys/types.h)
AC_CHECK_TYPEDEF(int16_t, sys/types.h)
AC_CHECK_TYPEDEF(int8_t, sys/types.h)

echo
echo "Testing for system libraries..."
echo
echo "  Again: We do ALL the tests here, then trap problems below!"
echo
AC_CHECK_LIB([c], [crypt], , [AC_CHECK_LIB([crypt], [crypt])])
AC_CHECK_LIB([c], [backtrace])
AC_CHECK_LIB([c], [getopt_long])
AC_CHECK_LIB([c], [gethostbyaddr_r], , [
    AC_CHECK_LIB([nsl], [gethostbyaddr_r])
])
dnl> Plugin load routine...
dnl>    Most systems... special cases in the platform specific...
AC_CHECK_LIB([c], [dlopen], , [AC_CHECK_LIB([dl], [dlopen])])

AC_CHECK_LIB([crypto], [SSLeay_version])
AC_CHECK_LIB([gdbm], [gdbm_open])
AC_CHECK_LIB([pcap], [pcap_open_live])
AC_CHECK_LIB([ssl], [SSL_accept])
AC_CHECK_LIB([z], [zlibVersion])

dnl> GDChart uses functions from math library,
dnl> so make sure we link against the math library if needed
dnl> Check for both sin and ceil - some implementations split them
AC_CHECK_LIB([c], [sin], ,  [AC_CHECK_LIB([m], [sin])])
AC_CHECK_LIB([c], [ceil], , [AC_CHECK_LIB([m], [ceil])])
dnl> As much as I would like to say:
dnl> AC_CHECK_LIB([gdchart], [GDC_out_pie])
dnl> Here, the blasted gdchart library won't work for a simple compile.
dnl> So, if you have the gdc.h header, that will have to do.

AC_CHECK_LIB([gd], [gdImageDestroy])
AC_CHECK_LIB([png], [png_read_info])

dnl> Networking libraries
AC_CHECK_LIB([nsl], [gethostname], , [AC_CHECK_LIB([nsl], [gethostbyname])])
AC_CHECK_LIB([socket], [accept])
AC_CHECK_LIB([resolv], [inet_aton])

dnl> Multithreading libraries
AC_CHECK_LIB(pthread, pthread_create, , [
    AC_CHECK_LIB(pthreads, pthread_create, , [
        AC_CHECK_LIB(c_r, pthread_create)
    ])
])
AC_CHECK_LIB(posix4, sem_init)

dnl> regex.c
AC_CHECK_LIB([c], 
             [re_search],
             AC_DEFINE_UNQUOTED(HAVE_REGEX, 
                                1, 
                                [regex lib is defined inside -lc for regex.c]))

dnl> TCP Wrappers
dnl>  This is a problem - the test sets HAVE_LIBWRAP, which is the flag in ntop
dnl>  But we haven't processed --enable-tcpwrap yet. So we dummy this out until
dnl>  such time as we can fix the internal flag in ntop...
dnl>AC_CHECK_LIB([wrap], [hosts_access])

dnl> rrd
AC_CHECK_LIB([rrd], [rrd_create], [
    RRDLIB="-lrrd"
])

dnl> XML dump
AC_CHECK_LIB([glib], [g_date_julian])
AC_CHECK_LIB([xml2], [xmlCheckVersion])
AC_CHECK_LIB([gdome], [gdome_di_saveDocToFile])

echo
echo "Testing for library functions..."
echo
echo "  Again: We do ALL the tests here, then trap problems below!"
echo

AC_FUNC_ALLOCA

AC_FUNC_FORK
AC_PROG_GCC_TRADITIONAL
dnl> do not use AC_FUNC_MALLOC ... because we have our own replacement...
AC_FUNC_MEMCMP
AC_FUNC_SETVBUF_REVERSED
AC_TYPE_SIGNAL
AC_FUNC_STAT
AC_FUNC_STRFTIME
AC_FUNC_VPRINTF

AC_CHECK_FUNCS([alarm])
AC_CHECK_FUNCS([ctime_r])
AC_CHECK_FUNCS([endpwent])
AC_CHECK_FUNCS([gethostbyaddr gethostbyname gethostname])
dnl> Note, we've already tested for gethostbyaddr_r to find it's library, above.
dnl>      This test is to get HAVE_GETHOSTBYADDR_R set...
AC_CHECK_FUNCS([gethostbyaddr_r])
AC_CHECK_FUNCS([getipnodebyaddr])
AC_CHECK_FUNCS([getpass])
AC_CHECK_FUNCS([gettimeofday])
AC_CHECK_FUNCS([inet_ntoa])
AC_CHECK_FUNCS([localtime_r])
AC_CHECK_FUNCS([memchr memset])
AC_CHECK_FUNCS([putenv])
AC_CHECK_FUNCS([re_comp regcomp])
AC_CHECK_FUNCS([select socket])
AC_CHECK_FUNCS([snprintf])
AC_CHECK_FUNCS([sqrt])
AC_CHECK_FUNCS([strcasecmp strncasecmp])
AC_CHECK_FUNCS([strchr strrchr])
AC_CHECK_FUNCS([strcspn])
AC_CHECK_FUNCS([strdup])
AC_CHECK_FUNCS([strerror])
AC_CHECK_FUNCS([strpbrk])
AC_CHECK_FUNCS([strspn])
AC_CHECK_FUNCS([strstr])
AC_CHECK_FUNCS([strtoul])
AC_CHECK_FUNCS([uname])

dnl> Test for strtok_r (we have our own defn if it's not available)C_CHECK_FUNCS([strtok_r])
AC_CHECK_FUNCS([strtok_r])
dnl> Following used by regex.c only
AC_CHECK_FUNCS([bzero])

echo
echo "-------------------------------------------------------------------"
echo "-------------------------------------------------------------------"
echo "-------------------------------------------------------------------"
echo
echo " Platform specific:"
echo "     Tests for libraries, headers, etc."
echo "     and flags / #define items" 
echo

dnl> This should mirror the first case on $target $CC (above), 
dnl> but remember that $CC might have been modified since then..

dnl> Skipping cases is, I guess, ok, but remember that you might have
dnl> been grabbed by an earlier target, above (e.g. 

case "${target}:${CC}" in

    *-*-solaris2.5*:* )
        AC_DEFINE_UNQUOTED(CFG_NEED_INET_ATON,
                           1,
                           [Solaris 2.5: private implementation of inet_aton])
        AC_DEFINE_UNQUOTED(CFG_NEED_GETDOMAINNAME,
                           1,
                           [OS lacks getdomainname function.])
      ;;

    *-*-darwin5.5*:* )
        DYN_FLAGS="-bundle -flat_namespace -undefined suppress $DYN_FLAGS"
      ;;

    *-*-openbsd*:* )
        SO_VERSION_PATCH=.0.0
      ;;

    *-*-aix[45]*:gcc* )
        AC_DEFINE_UNQUOTED(CFG_NEED_GETDOMAINNAME,
                           1,
                           [OS lacks getdomainname function.])

        dnl> plugin load function unique to AIX
        dnl> TODO (note that c is probably the WRONG library
        AC_CHECK_LIB([c], [open])
      ;;

    *-*-hpux11*:* )
        dnl> plugin load function unique to HPUX
        AC_CHECK_LIB([dld], [shl_load])

        dnl> thread library
        dnl> test for their "special" function and library with the non-standard names
        AC_CHECK_LIB(pthread, __pthread_create_system)
        AC_CHECK_LIB(posix4, sem_init, , [AC_CHECK_LIB(rt, sem_init)])
      ;;

    *-*-hpux10*:*)
        dnl> plugin load function unique to HPUX
        AC_CHECK_LIB([dld], [shl_load])

        dnl> thread library
        dnl> test for their "special" function and library with the non-standard names
        AC_CHECK_LIB(pthread, __pthread_create_system)
        AC_CHECK_LIB(rt, sem_init)
      ;;

    * )
      ;;
esac

echo
echo "-------------------------------------------------------------------"
echo "-------------------------------------------------------------------"
echo "-------------------------------------------------------------------"
echo
echo "Now, let's check for problems with what we've found..."
echo
echo "-------------------------------------------------------------------"
echo
AC_MSG_CHECKING([for required C headers])
if test ".${ac_cv_header_errno_h}"      = ".no" ||
   test ".${ac_cv_header_fcntl_h}"      = ".no" ||
   test ".${ac_cv_header_float_h}"      = ".no" ||
   test ".${ac_cv_header_limits_h}"     = ".no" ||
   test ".${ac_cv_header_stddef_h}"     = ".no" ||
   test ".${ac_cv_header_stdlib_h}"     = ".no" ||
   test ".${ac_cv_header_stdio_h}"      = ".no" ||
   test ".${ac_cv_header_string_h}"     = ".no" ||
   test ".${ac_cv_header_strings_h}"    = ".no" ||
   test ".${ac_cv_header_unistd_h}"     = ".no" ||
   test ".${ac_cv_header_sys_ioctl_h}"  = ".no" ||
   test ".${ac_cv_header_sys_socket_h}" = ".no" ||
   test ".${ac_cv_header_sys_time_h}"   = ".no" ||
   test ".${ac_cv_header_sys_types_h}"  = ".no"; then
    AC_MSG_RESULT(error)
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR: Basic c library routines are missing."
    echo "*"
    if test ".${ac_cv_header_errno_h}"      = ".no" ; then 
        echo "*   ** errno.h"
    fi
    if test ".${ac_cv_header_fcntl_h}"      = ".no" ; then 
        echo "*   ** fcntl.h"
    fi
    if test ".${ac_cv_header_float_h}"      = ".no" ; then 
        echo "*   ** float.h"
    fi
    if test ".${ac_cv_header_limits_h}"     = ".no" ; then 
        echo "*   ** limits.h"
    fi
    if test ".${ac_cv_header_stddef_h}"     = ".no" ; then 
        echo "*   ** stddef.h"
    fi
    if test ".${ac_cv_header_stdlib_h}"     = ".no" ; then 
        echo "*   ** stdlib.h"
    fi
    if test ".${ac_cv_header_stdio_h}"      = ".no" ; then 
        echo "*   ** stdio.h"
    fi
    if test ".${ac_cv_header_string_h}"     = ".no" ; then 
        echo "*   ** string.h"
    fi
    if test ".${ac_cv_header_strings_h}"    = ".no" ; then 
        echo "*   ** strings.h"
    fi
    if test ".${ac_cv_header_unistd_h}"     = ".no" ; then 
        echo "*   ** unistd.h"
    fi
    if test ".${ac_cv_header_sys_ioctl_h}"  = ".no" ; then 
        echo "*   ** sys/ioctl.h"
    fi
    if test ".${ac_cv_header_sys_socket_h}" = ".no" ; then 
        echo "*   ** sys/socket.h"
    fi
    if test ".${ac_cv_header_sys_time_h}"   = ".no" ; then 
        echo "*   ** sys/time.h"
    fi
    if test ".${ac_cv_header_sys_types_h}"  = ".no" ; then 
        echo "*   ** sys/types.h"
    fi
    echo "*>>> No way to proceed."
    echo "*"
    echo "*???     1. Install the necessary c compiler libraries/headers"
    echo "*??? and 2. Rerun ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    AC_MSG_ERROR(Unable to continue... aborting ./configure)
else
    AC_MSG_RESULT(ok)
fi
  
AC_MSG_CHECKING([for required libraries])
AC_MSG_RESULT([])

AC_MSG_CHECKING([    for crypt])
if (test ".${ac_cv_lib_c_crypt}" != ".yes" &&
    test ".${ac_cv_lib_crypt_crypt}" != ".yes"); then
    AC_MSG_RESULT(error)
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR: Basic c library routines are missing."
    echo "*"
    if test ".${ac_cv_header_crypt_h}" != ".yes" ; then
        echo "*   ** crypt.h  --optional"
    fi
    if test ".${ac_cv_lib_c_crypt}" != ".yes" ||
       test ".${ac_cv_lib_crypt_crypt}" != ".yes"; then
        if test ".${ac_cv_lib_c_crypt}" != ".yes" ; then
            echo "*   ** crypt() in -lc"
        fi
        if test ".${ac_cv_lib_crypt_crypt}" != ".yes" ; then
            echo "*   ** crypt() in -lcrypt"
        fi
    fi
    echo "*"
    echo "*>>> No way to proceed."
    echo "*"
    echo "*???     1. Install the necessary c compiler libraries/headers"
    echo "*??? and 2. Rerun ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    AC_MSG_ERROR(Unable to continue... aborting ./configure)
else
    AC_MSG_RESULT(ok)
fi

AC_MSG_CHECKING([  for dynamic load module])
if test ".${DEFINEOS}" = ".DARWIN"; then
   AC_MSG_RESULT(skipping - ntop emulates function in ntop_darwin.c)
elif test ".${ac_cv_lib_dl_dlopen}"    != ".yes" &&
     test ".${ac_cv_lib_c_dlopen}"     != ".yes" &&
     test ".${ac_cv_lib_c_load}"       != ".yes" &&
     test ".${ac_cv_lib_dld_shl_load}" != ".yes"; then
    AC_MSG_RESULT(error)
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR: Basic c library routines are missing."
    echo "*"
    case "$target" in
      *-hpux* )
          echo "*   ** shl_load() in -ldld   (HPUX specific)"  
          ;;
      *-aix* )
          echo "*   ** load() in -lc         (IBM AIX specific)"  
          ;;
      * )
          echo "*   ** dlopen() in -ldl or -lc"
          ;;
    esac
    echo "*"
    echo "*>>> No way to proceed."
    echo "*"
    echo "*???     1. Install the necessary c compiler libraries/headers"
    echo "*??? and 2. Rerun ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    AC_MSG_ERROR(Unable to continue... aborting ./configure)
else
    AC_MSG_RESULT(ok)
fi

NTOP_TEST_MUSTHAVE(pcap, pcap.h, pcap_open, pcap_version, PCAP)
NTOP_TEST_MUSTHAVE(gdbm, gdbm.h, gdbm_close, gdbm_version, GDBM)

echo
echo "-------------------------------------------------------------------"
echo
echo "   **Testing Optional libraries and headers**"
echo

dnl> Multithreaded:
if test ".${ac_disable_multithread}" != ".yes"; then
    AC_MSG_CHECKING([for Multithreading])

    case "$target" in
      dnl> HPUX 11, deal with their "special" (retarded) library with the non-standard name
      *-hpux11* )
        if test ".${ac_cv_header_pthread_h}"                    != ".yes" ||
           test ".${ac_cv_lib_pthread___pthread_create_system}" != ".yes" ||
           (test ".${ac_cv_lib_posix4_sem_init}"                != ".yes" &&
            test ".${ac_cv_lib_rt_sem_init}"                    != ".yes") then
            AC_MSG_RESULT(error)
            dnl> Missing a library?  Can't multithread...
            ac_disable_multithread="yes"
            echo
            echo "*******************************************************************"
            echo "*                                                           HPUX11*"
            echo "*"
            echo "* WARNING:  1. We are unable to find a header/library required"
            echo "*              to support multi-threading."
            echo "*"
            echo "*>>>    ntop will be build single threaded."
            echo "*       This is only minimally supported."
            echo "*"
            echo "*    Missing:"
            echo "*"
            if test ".${ac_cv_header_pthread_h}" != ".yes"; then
                echo "*   ** HEADER: pthread.h"
            fi
            if test ".${ac_cv_lib_pthread___pthread_create_system}" != ".yes"; then
                echo "*   ** FUNCTION: __pthread_create_system() in -lpthread"
            fi
            if test ".${ac_cv_lib_posix4_sem_init}"       != ".yes" ||
               test ".${ac_cv_lib_rt_sem_init}"           != ".yes"; then
                echo "*   ** FUNCTION: sem_init() in"
                if test ".${ac_cv_lib_posix4_sem_init}"       != ".yes"; then
                    echo "*                                 -lposix4"
                fi
                if test ".${ac_cv_lib_rt_sem_init}"           != ".yes";then
                    echo "*                                 -lrt"
                fi
            fi
            echo "*"
            echo "*???     1. Install the necessary headers and libraries."
            echo "*??? and 2. rerun ./configure"
            echo "*"
            echo "*******************************************************************"
            echo
        fi
        ;;
      * )
        if test ".${ac_cv_header_pthread_h}"             != ".yes" ||
           (test ".${ac_cv_lib_pthread_pthread_create}"  != ".yes" &&
            test ".${ac_cv_lib_pthreads_pthread_create}" != ".yes" &&
            test ".${ac_cv_lib_c_r_pthread_create}"      != ".yes"); then
            AC_MSG_RESULT(error)
            ac_disable_multithread="yes"
            echo
            echo "*******************************************************************"
            echo "*"
            echo "* WARNING:  1. We are unable to find a header/library required"
            echo "*              to support multi-threading."
            echo "*"
            echo "*>>>    ntop will be build single threaded."
            echo "*       This is only minimally supported."
            echo "*"
            echo "*    Missing:"
            echo "*"
            if test ".${ac_cv_header_pthread_h}" != ".yes"; then
                echo "*   ** HEADER: pthread.h"
            fi
            if test ".${ac_cv_lib_pthread_pthread_create}"  != ".yes" &&
               test ".${ac_cv_lib_pthreads_pthread_create}" != ".yes" &&
               test ".${ac_cv_lib_c_r_pthread_create}"      != ".yes"; then
                echo "*   ** FUNCTION: pthread_create() in"
                if test ".${ac_cv_lib_pthread_pthread_create}" != ".yes"; then
                    echo "*                                 -lpthread"
                fi
                if test ".${ac_cv_lib_pthreads_pthread_create}" != ".yes"; then
                    echo "*                                 -lpthreads"
                fi
                if test ".${ac_cv_lib_c_r_pthread_create}" != ".yes";then
                    echo "*                                 -lc_r"
                fi
            fi
            echo "*"
            echo "*???     1. Install the necessary headers and libraries."
            echo "*??? and 2. rerun ./configure"
            echo "*"
            echo "*******************************************************************"
            echo
        fi
        ;;
    esac

    if test ".${ac_disable_multithread}" != ".yes"; then
        AC_MSG_RESULT(ok)
        AC_DEFINE_UNQUOTED(CFG_MULTITHREADED,        1, [Enable/disable multithread support])
        multithread_mode="enabled"
    else
        multithread_mode="disabled (Single Threaded)"
    fi
fi

dnl> tcp wrappers:

if test ".${ac_enable_tcpwrap}" = ".yes"; then
    AC_MSG_CHECKING([for tcp wrappers])

    if test ".${ac_cv_header_tcpd_h}" = ".yes"; then
        dnl> Oh how I wish I could just say:
        dnl> AC_CHECK_LIB([wrap], [hosts_access],
        dnl>              ac_cv_tcpwrappers="yes",
        dnl>              ac_cv_tcpwrappers="no")
        dnl>  But, tcp wrappers has those silly global variables ...
        if test ".${ac_debug}" = ".yes"; then
            echo "DEBUG:   tcp wrappers: Calling try_link"
        fi
        oLIBS="${LIBS}"
        LIBS="${LIBS} -lwrap"
        AC_TRY_LINK([#include <tcpd.h>
 int allow_severity = 0;
 int deny_severity  = 0;

 struct request_info *req;
],[hosts_access (req)],
                     if test ".${ac_debug}" = ".yes"; then
                         echo "DEBUG:   tcp wrappers try_link: YES"
                     fi
                     AC_DEFINE(HAVE_LIBWRAP)
                     ac_cv_lib_wrap_hosts_access="yes"
                     ac_cv_tcpwrappers="yes",
                     if test ".${ac_debug}" = ".yes"; then
                         echo "DEBUG:   tcp wrappers try_link: NO"
                     fi
                     LIBS="${oLIBS}"
                     ac_cv_lib_wrap_hosts_access="no"
                     ac_cv_tcpwrappers="no")

    else
        if test ".${ac_debug}" = ".yes"; then
            echo "DEBUG:   tcp wrappers: no tcpd.h"
        fi
        ac_cv_tcpwrappers="no"
    fi

    if test ".${ac_cv_tcpwrappers}" = ".yes"; then
        AC_MSG_RESULT(ok)
    else
        AC_MSG_RESULT(error)
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* WARNING:  1. You requested tcp wrappers via the"
        echo "*              --enable-tcpwrap options."
        echo "*"
        echo "*       and 2. We were unable to find tcpd.h and/or the -lwrap"
        echo "*              library."
        echo "*"
        echo "*>>> Continuing without tcp wrappers"
        echo "*"
        echo "*???     1. Install the tcp wrappers library/header and rerun"
        echo "*           ./configure"
        echo "*"
        echo "*******************************************************************"
        echo
    fi
fi

dnl> openSSL:

if test ".${ac_disable_openssl}" != ".yes"; then

    if test ".${OSSL_ROOT}" != "." &&
       test ! -d ${OSSL_ROOT}; then
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* ERROR:    1. You specified a non-existent directory for the"
        echo "*              --with-ossl-root option."
        echo "*"
        echo "*>>> Continuing without the --with-ossl-root option"
        echo "*"
        echo "*    ./configure may complete successfully or the openSSL"
        echo "*    option may be disabled."
        echo "*"
        echo "*???     1. Correct the --with-ossl-root value and rerun ./configure"
        echo "*"
        echo "*******************************************************************"
        echo
        OSSL_ROOT=
    fi

    AC_MSG_CHECKING([for openSSL])

    if test ".${ac_cv_lib_crypto_SSLeay_version}" = ".yes" &&
       test ".${ac_cv_lib_ssl_SSL_accept}"        = ".yes" &&
       test ".${ac_cv_header_openssl_crypto_h}"   = ".yes" &&
       test ".${ac_cv_header_openssl_rsa_h}"      = ".yes" &&
       test ".${ac_cv_header_openssl_x509_h}"     = ".yes" &&
       test ".${ac_cv_header_openssl_pem_h}"      = ".yes" &&
       test ".${ac_cv_header_openssl_ssl_h}"      = ".yes" &&
       test ".${ac_cv_header_openssl_err_h}"      = ".yes"; then
        AC_DEFINE_UNQUOTED([HAVE_OPENSSL], 1, [Enable openssl])
        if test ".${OSSL_ROOT}" != "."; then
            AC_MSG_RESULT(ok)
            echo
            echo "*******************************************************************"
            echo "*"
            echo "* NOTE:  You specified --with-ossl-root."
            echo "*        However, a version was found in a standard location."
            echo "*"
            echo "*       Since this version will be used anyway,"
            echo "*>>>    we've ignored your specified location."
            echo "*"
            echo "*******************************************************************"
            echo
            OSSL_ROOT=
        else
            AC_MSG_RESULT([ok (found in standard location)])
        fi
    elif test ".${OSSL_ROOT}" = "."; then
        AC_MSG_RESULT([not found in standard location, no --with-ossl-root, testing further...])
        AC_MSG_CHECKING([for header files])

dnl> _OPENSSL_TESTS is a macro that makes no sense by itself, it just drops the
dnl> last test line and the various actions if true...

        if test -d /usr                        &&
            NTOP_OPENSSL_TESTS([/usr/include])
        elif test -d /usr                      &&
             test -d /usr/include              &&
            NTOP_OPENSSL_TESTS([/usr/include/openssl])
        elif test -d /usr                      &&
             test -d /usr/include              &&
            NTOP_OPENSSL_TESTS([/usr/include/ssl])
        elif test -d /usr                      &&
             test -d /usr/local                &&
            NTOP_OPENSSL_TESTS([/usr/local/include])
        elif test -d /usr                      &&
             test -d /usr/local                &&
             test -d /usr/local/include        &&
            NTOP_OPENSSL_TESTS([/usr/local/include/openssl])
        elif test -d /usr                      &&
             test -d /usr/local                &&
             test -d /usr/local/include        &&
            NTOP_OPENSSL_TESTS([/usr/local/include/ssl])
        else
            AC_MSG_RESULT(error)
            echo
            echo "*******************************************************************"
            echo "*"
            echo "* WARNING:  1. We were unable to find the openSSL header files"
            echo "*              in the standard location."
            echo "*"
            echo "*       and 2. You did not specify an alternate location"
            echo "*              via --with-ossl-root."
            echo "*"
            echo "*       and 3. We also tested the following:"
            echo "*"
            echo "*                /usr/include"
            echo "*                /usr/include/openssl"
            echo "*                /usr/include/ssl"
            echo "*                /usr/local/include"
            echo "*                /usr/local/include/openssl"
            echo "*                /usr/local/include/ssl"
            echo "*"
            echo "*>>> Continuing without openSSL (i.e. no https://)"
            echo "*"
            echo "*???     1. Rerun ./configure with a corrected --with-ossl-root"
            echo "*???  or 2. Install openSSL and rerun ./configure"
            echo "*"
            echo "*******************************************************************"
            echo
            ac_disable_openssl="yes"
        fi
        if test ".${ac_disable_openssl}" = ".yes"; then
            dnl> nop to skip the 2nd part tests...
            nop="yes"
        else
            AC_MSG_CHECKING([for openSSL libraries])
            if test -d /usr &&
               test -d /usr/lib &&
               (test -r /usr/lib/libssl.so ||
                test -r /usr/lib/libssl.a); then
                AC_MSG_RESULT([ok, found in /usr/lib])
                LIBS="${LIBS} -L/usr/lib -lssl"
                dnl>  /usr/lib should be automatically tested for as part of ld.so.conf...
                AC_DEFINE_UNQUOTED(HAVE_OPENSSL, 1, [Show we found -lssl and set LIBS])
            elif test -d /usr &&
                 test -d /usr/local &&
                 test -d /usr/local/lib &&
                 (test -r /usr/local/lib/libssl.so ||
                  test -r /usr/local/lib/libssl.a); then
                AC_MSG_RESULT([ok, found in /usr/local/lib])
                LIBS="${LIBS} -L/usr/local/lib -lssl"
                AC_DEFINE_UNQUOTED(HAVE_OPENSSL, 1, [Show we found -lssl and set LIBS])
            else
                AC_MSG_RESULT(error)
                echo
                echo "*******************************************************************"
                echo "*"
                echo "* ERROR:  1. We were unable to compile a test program for"
                echo "*            SSL_accept() against -lssl."
                echo "*"
                echo "*     and 2. You did not specify an alternate location"
                echo "*            via --with-ossl-root."
                echo "*"
                echo "*     and 3. We were unable to find libssl.so or libssl.a"
                echo "*            via a manual search of"
                echo "*"
                echo "*                /usr/lib"
                echo "*                /usr/local/lib"
                echo "*"
                echo "*>>> Continuing without openSSL."
                echo "*       (https requests will not be supported)."
                echo "*"
                echo "*???     1. Rerun ./configure with a corrected --with-ossl-root"
                echo "*???  or 2. Install openSSL and rerun ./configure"
                echo "*"
                echo "*******************************************************************"
                echo
                ac_disable_openssl="yes"
            fi
        fi
    else
        AC_MSG_RESULT([not found in standard location, testing further...])

        dnl> Can we find ossl.h and the libs where s/he told us?

        AC_MSG_CHECKING([for openSSL libraries])

        OSSL_ROOT=`(cd ${OSSL_ROOT} && pwd)`
        oLIBS=${LIBS}
        LIBS="${oLIBS} -L ${OSSL_ROOT}"
        AC_CHECK_LIB([ssl], [SSL_accept])
        AC_CHECK_LIB([crypto], [SSLeay_version])
        if test ".${ac_cv_lib_crypto_SSLeay_version}" != ".yes" ||
           test ".${ac_cv_lib_ssl_SSL_accept}"        != ".yes"; then
            LIBS="${oLIBS} -L ${OSSL_ROOT}/lib"
            AC_CHECK_LIB([ssl], [SSL_accept])
            AC_CHECK_LIB([crypto], [SSLeay_version])
            if test ".${ac_cv_lib_crypto_SSLeay_version}" != ".yes" ||
               test ".${ac_cv_lib_ssl_SSL_accept}"        != ".yes"; then
                LIBS="${oLIBS} -L ${OSSL_ROOT}/lib/openssl"
                AC_CHECK_LIB([ssl], [SSL_accept])
                AC_CHECK_LIB([crypto], [SSLeay_version])
                if test ".${ac_cv_lib_crypto_SSLeay_version}" != ".yes" ||
                   test ".${ac_cv_lib_ssl_SSL_accept}"        != ".yes"; then
                    AC_MSG_RESULT([error, library not found under ${OSSL_ROOT}])
                else
                    AC_MSG_RESULT([ok library found in ${OSSL_ROOT}/lib/openssl])
                    AC_DEFINE_UNQUOTED([HAVE_OPENSSL], 1, [Enable openssl])
                fi
            else
                AC_MSG_RESULT([ok library found in ${OSSL_ROOT}/lib])
                AC_DEFINE_UNQUOTED([HAVE_OPENSSL], 1, [Enable openssl])
            fi
        else
            AC_MSG_RESULT([ok library found in ${OSSL_ROOT}])
            AC_DEFINE_UNQUOTED([HAVE_OPENSSL], 1, [Enable openssl])
        fi
        if test ".${ac_cv_lib_crypto_SSLeay_version}" != ".yes" ||
           test ".${ac_cv_lib_ssl_SSL_accept}"        != ".yes"; then
            AC_MSG_RESULT([error, libraries not found under ${OSSL_ROOT}])
            LIBS=${oLIBS}
            echo
            echo "*******************************************************************"
            echo "*"
            echo "* WARNING:  1. You specified --with-ossl-root, however"
            echo "*              we were unable to find the routines SSL_accept()"
            echo "*              in -lssl and/or SSLeay_version() in -lcrypto"
            echo "*              at that location."
            echo "*"
            echo "*>>> Continuing without openSSL (i.e. no https://)"
            echo "*"
            echo "*???     1. Rerun ./configure with a corrected --with-ossl-root"
            echo "*???  or 2. Install openSSL and rerun ./configure"
            echo "*"
            echo "*******************************************************************"
            echo
            ac_disable_openssl="yes"
        else
            AC_MSG_CHECKING([for openSSL headers])
            if 
                NTOP_OPENSSL_TESTS([${OSSL_ROOT}])
            elif test -d ${OSSL_ROOT}                  &&
                NTOP_OPENSSL_TESTS([${OSSL_ROOT}/include])
            elif test -d ${OSSL_ROOT}                          &&
                 test -d ${OSSL_ROOT}/include                  &&
                NTOP_OPENSSL_TESTS([${OSSL_ROOT}/include/openssl])
            elif test -d ${OSSL_ROOT}                      &&
                 test -d ${OSSL_ROOT}/include              &&
                NTOP_OPENSSL_TESTS([${OSSL_ROOT}/include/ssl])
            else
                AC_MSG_RESULT([error, headers not found under ${OSSL_ROOT}])
                echo
                echo "*******************************************************************"
                echo "*"
                echo "* WARNING:  1. You specified --with-ossl-root, however"
                echo "*              we were unable to find the header files (ssl.h,"
                echo "*              err.h, pem.h, x509.h, rsa.h and/or crypto.h)."
                echo "*"
                echo "*>>> Continuing without openSSL (i.e. no https://)"
                echo "*"
                echo "*???     1. Rerun ./configure with a corrected --with-ossl-root"
                echo "*???  or 2. Install openSSL and rerun ./configure"
                echo "*"
                echo "*******************************************************************"
                echo
                ac_disable_openssl="yes"
            fi
        fi
    fi
fi

dnl> GDChart:

if test ".${GDCHART_ROOT}" != "." &&
   test ! -d ${GDCHART_ROOT}; then
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR:    1. You specified a non-existent directory for the"
    echo "*              --with-gdchart-root option."
    echo "*"
    echo "*>>> Continuing without the --with-gdchart-root option"
    echo "*"
    echo "*    ./configure may complete successfully or the GDChart"
    echo "*    option may be disabled."
    echo "*"
    echo "*???     1. Correct the --with-gdchart-root value and rerun ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    GDCHART_ROOT=
fi
if test ".${GD_ROOT}" != "." &&
   test ! -d ${GD_ROOT}; then
    echo
    echo "*******************************************************************"
    echo "*" 
    echo "* ERROR:    1. You specified a non-existent directory for the"
    echo "*              --with-gd-root option."
    echo "*" 
    echo "*>>> Continuing without the --with-gd-root option"
    echo "*" 
    echo "*    ./configure may complete successfully or the GDChart"
    echo "*    option may be disabled."
    echo "*" 
    echo "*???     1. Correct the --with-gd-root value and rerun ./configure"
    echo "*" 
    echo "*******************************************************************"
    echo
    GD_ROOT=
fi 
if test ".${LIBPNG_ROOT}" != "." &&
   test ! -d ${LIBPNG_ROOT}; then
    echo
    echo "*******************************************************************"
    echo "*" 
    echo "* ERROR:    1. You specified a non-existent directory for the"
    echo "*              --with-png-root option."
    echo "*" 
    echo "*>>> Continuing without the --with-png-root option"
    echo "*" 
    echo "*    ./configure may complete successfully or the GDChart"
    echo "*    option may be disabled."
    echo "*" 
    echo "*???     1. Correct the --with-png-root value and rerun ./configure"
    echo "*" 
    echo "*******************************************************************"
    echo
    LIBPNG_ROOT=
fi 
if test ".${ZLIB_ROOT}" != "." &&
   test ! -d ${ZLIB_ROOT}; then
    echo
    echo "*******************************************************************"
    echo "*" 
    echo "* ERROR:    1. You specified a non-existent directory for the"
    echo "*              --with-zlib-root option."
    echo "*" 
    echo "*>>> Continuing without the --with-zlib-root option"
    echo "*" 
    echo "*    ./configure may complete successfully or the GDChart"
    echo "*    option may be disabled."
    echo "*" 
    echo "*???     1. Correct the --with-zlib-root value and rerun ./configure"
    echo "*" 
    echo "*******************************************************************"
    echo
    ZLIB_ROOT=
fi 

dnl> First off, let's cheat.  
dnl> If you specify GDCHART_ROOT and not GD_ROOT, LIBPNG_ROOT and/or ZLIB_ROOT,
dnl> We'll set them to GDCHART_ROOT.
if test ".${GDCHART_ROOT}" != "."; then
    if test ".${ac_debug}" = ".yes"; then
        echo "DEBUG:   _ROOT: Setting GD_ LIBPNG_ and/or ZLIB_ to GDCHART_ROOT if not already set"
    fi
    if test ".${GD_ROOT}" = "."; then
        GD_ROOT="${GDCHART_ROOT}"
        if test ".${ac_debug}" = ".yes"; then
            echo "DEBUG:       GD_ROOT now ${GD_ROOT}"
        fi
    fi
    if test ".${LIBPNG_ROOT}" = "."; then
        LIBPNG_ROOT="${GDCHART_ROOT}"
        if test ".${ac_debug}" = ".yes"; then
            echo "DEBUG:       LIBPNG_ROOT now ${LIBPNG_ROOT}"
        fi
    fi
    if test ".${ZLIB_ROOT}" = "."; then
        ZLIB_ROOT="${GDCHART_ROOT}"
        if test ".${ac_debug}" = ".yes"; then
            echo "DEBUG:       ZLIB_ROOT now ${ZLIB_ROOT}"
        fi
    fi
fi

if test ".${ac_disable_gdchart}" != ".yes"; then
    AC_MSG_CHECKING([for GDChart])

    if test ".${ac_debug}" = ".yes"; then
        echo "DEBUG: GDChart - checking for the math libraries..."
    fi
    if (test ".${ac_cv_lib_c_ceil}" != ".yes" && 
        test ".${ac_cv_lib_m_ceil}" != ".yes") ||
       (test ".${ac_cv_lib_c_sin}" != ".yes" && 
        test ".${ac_cv_lib_m_sin}" != ".yes"); then
        AC_MSG_RESULT([error])
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* WARNING:  1. You requested GDChart.  However, we were unable to"
        echo "*              find one of the necessary math functions, sin()"
        echo "*              and/or ceil() in -lc or -lm."
        echo "*"
        echo "*>>> Continuing without GDChart"
        echo "*"
        echo "*???     1. Install the requred functions and rerun ./configure"
        echo "*"
        echo "*******************************************************************"
        echo
        ac_disable_gdchart="yes"
    fi

    if test ".${ac_disable_gdchart}" != ".yes"; then

       dnl> Remember, we can not do a AC_CHECK_LIB, so we can also not:
       dnl>   test ".${ac_cv_lib_gdchart_GDC_out_pie}"        = ".yes"

       dnl>  First the mass test - if ALL of it is found, we just push on...
       mass_gdchart_test_result="no"

       if test ".${ac_debug}" = ".yes"; then
           echo "DEBUG: GDChart - mass test... _header_gdc_h is ${ac_cv_header_gdc_h}"
           echo "                              _header_gd_h  is ${ac_cv_header_gd_h}"
           echo "                              _header_png_h is ${ac_cv_header_png_h}"
           echo "                     _lib_gd_gdImageDestroy is ${ac_cv_lib_gd_gdImageDestroy}"
           echo "                     _lib_png_png_read_info is ${ac_cv_lib_png_png_read_info}"
       fi

       if test ".${ac_cv_header_gdc_h}"                   = ".yes" &&
          test ".${ac_cv_header_gd_h}"                    = ".yes" &&
          test ".${ac_cv_header_png_h}"                   = ".yes" &&
          test ".${ac_cv_lib_gd_gdImageDestroy}"          = ".yes" &&
          test ".${ac_cv_lib_png_png_read_info}"          = ".yes"; then
           mass_gdchart_test_result="yes"
           dnl> Add this because it is not done in the non-existant AC_CHECK_LIB
           LIBS="${LIBS} -lgdchart -lgd -lpng"
           AC_DEFINE_UNQUOTED([HAVE_GDCHART], 1, [Enable GDChart])
           if test ".${GDCHART_ROOT}" != "."; then
               AC_MSG_RESULT(ok)
               echo
               echo "*******************************************************************"
               echo "*"
               echo "* NOTE:  You specified --with-gdchart-root."
               echo "*        (and possibly --with-gd-root and/or --with-libpng-root)"
               echo "*        However, a version was found in a standard location."
               echo "*"
               echo "*       Since this version will be used anyway,"
               echo "*>>>    we've ignored your specified location."
               echo "*"
               echo "*******************************************************************"
               echo
               GDCHART_ROOT=
               GD_ROOT=
               LIBPNG_ROOT=
           else
               AC_MSG_RESULT([ok (standard location)])
           fi
       elif test ".${GDCHART_ROOT}" = "."; then
           AC_MSG_RESULT([not found in standard location, no --with-gdchart-root, testing further...])
           AC_MSG_CHECKING([for GDChart headers])
           if test -d /usr &&
              test -d /usr/include &&
              test -r /usr/include/gdchart.h; then
               AC_MSG_RESULT([ok, gdchart.h found in /usr/include])
               INCS="${INCS} -I/usr/include"
               AC_DEFINE_UNQUOTED(HAVE_GDCHART_H, 1, [Show we found gdchart.h and set INCS])
           elif test -d /usr &&
                test -d /usr/local &&
                test -d /usr/local/include &&
                test -r /usr/local/include/gdchart.h; then
               AC_MSG_RESULT([ok, gdchart.h found in /usr/local/include])
               INCS="${INCS} -I/usr/local/include"
               AC_DEFINE_UNQUOTED(HAVE_GDCHART_H, 1, [Show we found gdchart.h and set INCS])
           elif test -d ${GDCHART_DIRECTORY} &&
                test -r ${GDCHART_DIRECTORY}/gdchart.h; then
               AC_MSG_RESULT([ok, gdchart.h found in ${GDCHART_DIRECTORY}])
               INCS="${INCS} -I${GDCHART_DIRECTORY}"
               AC_DEFINE_UNQUOTED(HAVE_GDCHART_H, 1, [Show we found gdchart.h and set INCS])
           else
               echo
               echo "*******************************************************************"
               echo "*"
               echo "* ERROR:  1. We were unable to find the header gdchart.h in the"
               echo "*            standard location."
               echo "*"
               echo "*     and 2. You did not specify an alternate location"
               echo "*            via --with-gdchart-root."
               echo "*"
               echo "*     and 3. We also tested the following:"
               echo "*"
               echo "*                /usr/include"
               echo "*                /usr/local/include"
               echo "*                ${GDCHART_DIRECTORY} (ntop source tree)"
               echo "*"
               echo "*>>> ./configure continues, charts will not be available."
               echo "*"
               echo "*???     1. Rerun ./configure with a corrected --with-gdchart-root*"
               echo "*???  or 2. Install GDChart and rerun ./configure"
               echo "*"
               echo "*******************************************************************"
               echo
               ac_disable_gdchart="yes"
           fi
           if test ".${ac_disable_gdchart}" = ".yes"; then
               dnl> Skip further tests
               nop="yes"
           else
               AC_MSG_CHECKING([for GDChart library])
               if test -d /usr &&
                  test -d /usr/lib &&
                  (test -r /usr/lib/libgdchart.so ||
                   test -r /usr/lib/libgdchart.a); then
                   AC_MSG_RESULT([ok, library found in /usr/lib])
                   LIBS="${LIBS} -L/usr/lib -lgdchart"
                   dnl>  /usr/lib should be automatically tested for as part of ld.so.conf...
                   AC_DEFINE_UNQUOTED([HAVE_GDCHART], 1, [Enable GDChart])
               elif test -d /usr &&
                    test -d /usr/local &&
                    test -d /usr/local/lib &&
                    (test -r /usr/local/lib/libgdchart.so ||
                     test -r /usr/local/lib/libgdchart.a); then
                   AC_MSG_RESULT([ok, library found in /usr/local/lib])
                   LIBS="${LIBS} -L/usr/local/lib -lgdchart"
                   AC_DEFINE_UNQUOTED([HAVE_GDCHART], 1, [Enable GDChart])
               elif test -d ${GDCHART_DIRECTORY} &&
                    (test -r ${GDCHART_DIRECTORY}/libgdchart.so ||
                     test -r ${GDCHART_DIRECTORY}/libgdchart.a); then
                   AC_MSG_RESULT([ok, library found in ${GDCHART_DIRECTORY}])
                   LIBS="${LIBS} -L${GDCHART_DIRECTORY} -lgdchart"
                   AC_DEFINE_UNQUOTED([HAVE_GDCHART], 1, [Enable GDChart])
               else
                   AC_MSG_RESULT(error)
                   echo
                   echo "*******************************************************************"
                   echo "*"
                   echo "* ERROR:  1. We are pretending that were are unable to compile a"
                   echo "*            test program for GDC_out_pie() against -lgdchart."
                   echo "*            (in reality, we skip the compile test because gdchart"
                   echo "*             does not support the kind of simple compile test"
                   echo "*             done in a configure file, and we looked for the"
                   echo "*             library by name. libgdchart.?? was not found.)"
                   echo "*"
                   echo "*     and 2. You did not specify an alternate location"
                   echo "*            via --with-gdchart-root."
                   echo "*"
                   echo "*     and 3. We were unable to find libgdchart.so or libgdchart.a"
                   echo "*            via a manual search of"
                   echo "*"
                   echo "*                /usr/lib"
                   echo "*                /usr/local/lib"
                   echo "*                ${GDCHART_DIRECTORY} (ntop source tree)"
                   echo "*"
                   echo "*>>> ./configure continues, charts will not be available."
                   echo "*"
                   echo "*???     1. Run ./buildAll.sh in ${GDCHART_DIRECTORY}"
                   echo "*???  or 2. Rerun ./configure with a corrected --with-gdchart-root"
                   echo "*???  or 3. Install GDChart and rerun ./configure"
                   echo "*"
                   echo "*******************************************************************"
                   echo
                   ac_disable_gdchart="yes"
               fi
           fi
       else
           AC_MSG_RESULT([not found in standard location, testing further...])

           dnl> Can we find gdchart.h and libgdchart where s/he told us?

           AC_MSG_CHECKING([for gdchart.h])
           GDCHART_ROOT=`(cd ${GDCHART_ROOT} && pwd)`
           if test -d ${GDCHART_ROOT} &&
              test -r ${GDCHART_ROOT}/gdchart.h; then
               AC_MSG_RESULT([ok, gdchart.h found in ${GDCHART_ROOT}])
               INCS="${INCS} -I${GDCHART_ROOT}"
               AC_DEFINE_UNQUOTED(HAVE_GDCHART_H, 1, [Show we found gdchart.h and set INCS])
           elif test -d ${GDCHART_ROOT} &&
              test -d ${GDCHART_ROOT}/include &&
              test -r ${GDCHART_ROOT}/include/gdchart.h; then
               AC_MSG_RESULT([ok, gdchart.h found in ${GDCHART_ROOT}/include])
               INCS="${INCS} -I${GDCHART_ROOT}/include"
               AC_DEFINE_UNQUOTED(HAVE_GDCHART_H, 1, [Show we found gdchart.h and set INCS])
           else
               AC_MSG_RESULT(error)
               echo
               echo "*******************************************************************"
               echo "*"
               echo "* ERROR:  1. We were unable to find the header gdchart.h in the"
               echo "*            standard location or the alternate location you"
               echo "*            specified by --with-gdchart-root."
               echo "*"
               echo "*>>> ./configure continues, charts will not be available."
               echo "*"
               echo "*???     1. Rerun ./configure with a corrected --with-gdchart-root"
               echo "*???  or 2. Install gdchart and rerun ./configure"
               echo "*"
               echo "*******************************************************************"
               echo
               ac_disable_gdchart="yes"
           fi
           if test ".${ac_disable_gdchart}" != ".yes"; then
               AC_MSG_CHECKING([for gdchart library])
               dnl> We can't actually use AC_CHECK_LIB for gdchart, so we just assume it's ok...
               NTOP_APPEND_LIBS([${GDCHART_ROOT}], [gdchart])
               AC_MSG_RESULT([ok, library assumed to exist in ${GDCHART_ROOT}])
               AC_DEFINE_UNQUOTED([HAVE_GDCHART], 1, [Enable GDChart])
           fi
       fi
    fi

    if test ".${ac_disable_gdchart}"       != ".yes" &&
       test ".${mass_gdchart_test_result}" != ".yes"; then
        AC_MSG_CHECKING([for gd])

       if test ".${ac_cv_header_gd_h}"                    = ".yes" &&
          test ".${ac_cv_lib_gd_gdImageDestroy}"          = ".yes"; then
           AC_DEFINE_UNQUOTED([HAVE_GD], 1, [Enable GD])
           if test ".${GD_ROOT}" != "."; then
               AC_MSG_RESULT(ok)
               echo
               echo "*******************************************************************"
               echo "*"
               echo "* NOTE:  You specified (or implied) --with-gd-root.  However,"
               echo "*        a version was found in a standard location."
               echo "*"
               echo "*       Since this version will be used anyway,"
               echo "*>>>    we've ignored your specified location."
               echo "*"
               echo "*******************************************************************"
               echo
               GD_ROOT=
           else
               AC_MSG_RESULT([ok (standard location)])
           fi
       elif test ".${GD_ROOT}" = "."; then
           AC_MSG_RESULT([not found in standard location, no --with-gd-root, testing further...])
           AC_MSG_CHECKING([for gd header])
           if test -d /usr &&
              test -d /usr/include &&
              test -r /usr/include/gd.h; then
               AC_MSG_RESULT([ok, found in /usr/include])
               INCS="${INCS} -I/usr/include"
               AC_DEFINE_UNQUOTED(HAVE_GD_H, 1, [Show we found gd.h and set INCS])
           elif test -d /usr &&
              test -d /usr/local &&
              test -d /usr/local/include &&
              test -r /usr/local/include/gd.h; then
               AC_MSG_RESULT([ok, found in /usr/local/include])
               INCS="${INCS} -I/usr/local/include"
               AC_DEFINE_UNQUOTED(HAVE_GD_H, 1, [Show we found gd.h and set INCS])
           elif test -d ${GDCHART_DIRECTORY} &&
                test -d ${GD_DIRECTORY} &&
                test -r ${GD_DIRECTORY}/gd.h; then
               AC_MSG_RESULT([ok, found in ${GD_DIRECTORY}])
               INCS="${INCS} -I${GD_DIRECTORY}"
               AC_DEFINE_UNQUOTED(HAVE_GD_H, 1, [Show we found gd.h and set INCS])
           else
               AC_MSG_RESULT(error)
               echo
               echo "*******************************************************************"
               echo "*"
               echo "* ERROR:  1. We were unable to find the header gd.h in the"
               echo "*            standard location."
               echo "*"
               echo "*     and 2. You did not specify an alternate location"
               echo "*            via --with-gd-root (or implied one"
               echo "*            via --with-gdchart-root)."
               echo "*"
               echo "*     and 3. We also tested the following:"
               echo "*"
               echo "*                /usr/include"
               echo "*                /usr/local/include"
               echo "*                ${GD_DIRECTORY} (ntop source tree)"
               echo "*"
               echo "*>>> ./configure continues, charts will not be available."
               echo "*"
               echo "*???     1. Rerun ./configure with a corrected --with-gd-root"
               echo "*???  or 2. Install gd and rerun ./configure"
               echo "*"
               echo "*******************************************************************"
               echo
               ac_disable_gdchart="yes"
           fi
           if test ".${ac_disable_gdchart}" = ".yes"; then
               nop="yes"
           else
               AC_MSG_CHECKING([for gd library])
               if test -d /usr &&
                  test -d /usr/lib &&
                  (test -r /usr/lib/libgd.so ||
                   test -r /usr/lib/libgd.a); then
                   AC_MSG_RESULT([ok, found in /usr/lib])
                   LIBS="${LIBS} -L/usr/lib -lgd"
                   dnl>  /usr/lib should be automatically tested for as part of ld.so.conf...
                   AC_DEFINE_UNQUOTED([HAVE_GD], 1, [Enable GD])
               elif test -d /usr &&
                  test -d /usr/local &&
                  test -d /usr/local/lib &&
                  (test -r /usr/local/lib/libgd.so ||
                   test -r /usr/local/lib/libgd.a); then
                   AC_MSG_RESULT([ok, found in /usr/local/lib])
                   LIBS="${LIBS} -L/usr/local/lib -lgd"
                   AC_DEFINE_UNQUOTED([HAVE_GD], 1, [Enable GD])
               elif test -d ${GDCHART_DIRECTORY} &&
                  test -d ${GD_DIRECTORY} &&
                  (test -r ${GD_DIRECTORY}/libgd.so ||
                   test -r ${GD_DIRECTORY}/libgd.a); then
                   AC_MSG_RESULT([ok, found in ${GD_DIRECTORY}])
                   LIBS="${LIBS} -L${GD_DIRECTORY} -lgd"
                   AC_DEFINE_UNQUOTED([HAVE_GD], 1, [Enable GD])
               else
                   AC_MSG_RESULT(error)
                   echo
                   echo "*******************************************************************"
                   echo "*"
                   echo "* ERROR:  1. We were unable to compile a test program for"
                   echo "*            gdImageDestroy() against -lgd."
                   echo "*"
                   echo "*     and 2. You did not specify an alternate location"
                   echo "*            via --with-gd-root or imply one via"
                   echo "*            --with-gdchart-root."
                   echo "*"
                   echo "*     and 3. We were unable to find libgd.so or libgd.a"
                   echo "*            via a manual search of"
                   echo "*"
                   echo "*                /usr/lib"
                   echo "*                /usr/local/lib"
                   echo "*                ${GD_DIRECTORY} (ntop source tree)"
                   echo "*"
                   echo "*>>> ./configure continues, charts will not be available."
                   echo "*"
                   echo "*???     1. Run ./buildAll.sh in ${GDCHART_DIRECTORY}"
                   echo "*???  or 2. Rerun ./configure with a corrected --with-gd-root"
                   echo "*???  or 3. Install gd and rerun ./configure"
                   echo "*"
                   echo "*******************************************************************"
                   echo
                   ac_disable_gdchart="yes"
               fi
           fi
       else
           AC_MSG_RESULT([not found in standard location, testing further...])
           dnl> Can we find gd.h and libgd where s/he told us?

           AC_MSG_CHECKING([for gd library])

           GD_ROOT=`(cd ${GD_ROOT} && pwd)`
           if test -d ${GD_ROOT} &&
              test -r ${GD_ROOT}/gd.h; then
               AC_MSG_RESULT([ok, gd.h found in ${GD_ROOT}])
               INCS="${INCS} -I${GD_ROOT}"
               AC_DEFINE_UNQUOTED(HAVE_GD_H, 1, [Show we found gd.h and set INCS])
           elif test -d ${GD_ROOT} &&
              test -d ${GD_ROOT}/include &&
              test -r ${GD_ROOT}/include/gd.h; then
               AC_MSG_RESULT([ok, gd.h found in ${GD_ROOT}/include])
               INCS="${INCS} -I${GD_ROOT}/include"
               AC_DEFINE_UNQUOTED(HAVE_GD_H, 1, [Show we found gd.h and set INCS])
           else
               AC_MSG_RESULT(error)
               echo
               echo "*******************************************************************"
               echo "*"
               echo "* ERROR:  1. We were unable to find the header gd.h in the"
               echo "*            standard location or the alternate locations you"
               echo "*            specified by --with-gd-root and/or"
               echo "*            --with-gdchart-root."
               echo "*"
               echo "*>>> ./configure continues, charts will not be available."
               echo "*"
               echo "*???     1. Rerun ./configure with a corrected --with-gd-root"
               echo "*???  or 2. Install gd and rerun ./configure"
               echo "*"
               echo "*******************************************************************"
               echo
               ac_disable_gdchart="yes"
           fi
           
           if test ".${ac_disable_gdchart}" != ".yes"; then
                AC_MSG_CHECKING([for gd library])
                oLIBS="${LIBS}"
                NTOP_APPEND_LIBS([${GD_ROOT}])
                AC_CHECK_LIB([gd], [gdImageDestroy], [
                    AC_MSG_RESULT(ok)
                    AC_DEFINE_UNQUOTED([HAVE_GD], 1, [Enable GD])
                ], [
                    AC_MSG_RESULT(error)
                    LIBS="${oLIBS}"
                    echo
                    echo "*******************************************************************"
                    echo "*"
                    echo "* ERROR:  1. We were unable to compile a test program for"
                    echo "*            gdImageDestroy() against -lgd in the standard"
                    echo "*            location nor in the alternate locations you"
                    echo "*            specified by --with-gd-root and/or"
                    echo "*            --with-gdchart-root."
                    echo "*"
                    echo "*>>> ./configure continues, charts will not be available."
                    echo "*"
                    echo "*???     1. Rerun ./configure with a corrected --with-gd-root"
                    echo "*???  or 2. Install gd and rerun ./configure"
                    echo "*"
                    echo "*******************************************************************"
                    echo
                    ac_disable_gdchart="yes"
                ])
            fi
       fi
    fi

    if test ".${ac_disable_gdchart}"       != ".yes" &&
       test ".${mass_gdchart_test_result}" != ".yes"; then
        AC_MSG_CHECKING([for libpng])

       if test ".${ac_cv_header_png_h}"                    = ".yes" &&
          test ".${ac_cv_lib_png_png_read_info}"           = ".yes"; then
           if test ".${LIBPNG_ROOT}" != "."; then
               AC_MSG_RESULT(ok)
               echo
               echo "*******************************************************************"
               echo "*"
               echo "* NOTE:  You specified (or implied) --with-libpng-root.  However,"
               echo "*        a version was found in a standard location."
               echo "*"
               echo "*       Since this version will be used anyway,"
               echo "*>>>    we've ignored your specified location."
               echo "*"
               echo "*******************************************************************"
               echo
               LIBPNG_ROOT=
           else
               AC_MSG_RESULT([ok (standard location)])
           fi
       elif test ".${LIBPNG_ROOT}" = "."; then
           AC_MSG_RESULT([not found in standard location, no --with-libpng-root, testing further...])
           AC_MSG_CHECKING([for libpng header])
           if test -d /usr &&
              test -d /usr/include &&
              test -r /usr/include/png.h; then
               AC_MSG_RESULT([ok, png.h found in /usr/include])
               INCS="${INCS} -I/usr/include"
               AC_DEFINE_UNQUOTED(HAVE_PNG_H, 1, [Show we found png.h and set INCS])
           elif test -d /usr &&
              test -d /usr/local &&
              test -d /usr/local/include &&
              test -r /usr/local/include/png.h; then
               AC_MSG_RESULT([ok, png.h found in /usr/local/include])
               INCS="${INCS} -I/usr/local/include"
               AC_DEFINE_UNQUOTED(HAVE_PNG_H, 1, [Show we found png.h and set INCS])
           elif test -d ${GDCHART_DIRECTORY} &&
                test -d ${GD_DIRECTORY} &&
                test -d ${LIBPNG_DIRECTORY} &&
                test -r ${LIBPNG_DIRECTORY}/png.h; then
               AC_MSG_RESULT([ok, png.h found in ${LIBPNG_DIRECTORY}])
               INCS="${INCS} -I${LIBPNG_DIRECTORY}"
               AC_DEFINE_UNQUOTED(HAVE_PNG_H, 1, [Show we found png.h and set INCS])
           else
               AC_MSG_RESULT(error)
               echo
               echo "*******************************************************************"
               echo "*"
               echo "* ERROR:  1. We were unable to find the header png.h in the"
               echo "*            standard location."
               echo "*"
               echo "*     and 2. You did not specify an alternate location"
               echo "*            via --with-libpng-root (or implied one"
               echo "*            via --with-gdchart-root)."
               echo "*"
               echo "*     and 3. We also tested the following:"
               echo "*"
               echo "*                /usr/include"
               echo "*                /usr/local/include"
               echo "*                ${LIBPNG_DIRECTORY}"
               echo "*"
               echo "*>>> ./configure continues, charts will not be available."
               echo "*"
               echo "*???     1. Rerun ./configure with a corrected --with-libpng-root"
               echo "*???  or 2. Install libpng and rerun ./configure"
               echo "*"
               echo "*******************************************************************"
               echo
               ac_disable_gdchart="yes"
           fi
           if test ".${ac_disable_gdchart}" = ".yes"; then
               nop="yes"
           else
               AC_MSG_CHECKING([for libpng library])
                if test -d /usr &&
                   test -d /usr/lib &&
                   (test -r /usr/lib/libpng.so ||
                    test -r /usr/lib/libpng.a); then
                    LIBS="${LIBS} -L/usr/lib -lpng"
                    AC_MSG_RESULT([ok, found in /usr/lib])
                    dnl>  /usr/lib should be automatically tested for as part of ld.so.conf...
                    AC_DEFINE_UNQUOTED([HAVE_PNG], 1, [Enable libpng])
                elif test -d /usr &&
                     test -d /usr/local &&
                     test -d /usr/local/lib &&
                     (test -r /usr/local/lib/libpng.so ||
                      test -r /usr/local/lib/libpng.a); then
                    LIBS="${LIBS} -L/usr/local/lib -lpng"
                    AC_MSG_RESULT([ok, found in /usr/local/lib])
                    AC_DEFINE_UNQUOTED([HAVE_PNG], 1, [Enable libpng])
                elif test -d ${GDCHART_DIRECTORY} &&
                   test -d ${GD_DIRECTORY} &&
                   test -d ${LIBPNG_DIRECTORY} &&
                   (test -r ${LIBPNG_DIRECTORY}/libpng.so ||
                    test -r ${LIBPNG_DIRECTORY}/libpng.a); then
                    LIBS="${LIBS} -L${LIBPNG_DIRECTORY} -lpng"
                    AC_MSG_RESULT([ok, found in ${LIBPNG_DIRECTORY}])
                    AC_DEFINE_UNQUOTED([HAVE_PNG], 1, [Enable libpng])
                else
                    AC_MSG_RESULT(error)
                    echo
                    echo "*******************************************************************"
                    echo "*"
                    echo "* ERROR:  1. We were unable to compile a test program for"
                    echo "*            png_read_info() against -libpng."
                    echo "*"
                    echo "*     and 2. You did not specify an alternate location"
                    echo "*            via --with-libpng-root or imply one via"
                    echo "*            --with-gdchart-root."
                    echo "*"
                    echo "*     and 3. We were unable to find libpng.so or libpng.a"
                    echo "*            via a manual search of"
                    echo "*"
                    echo "*                /usr/lib"
                    echo "*                /usr/local/lib"
                    echo "*                ${LIBPNG_DIRECTORY}"
                    echo "*                                         (ntop source tree)"
                    echo "*"
                    echo "*>>> ./configure continues, charts will not be available."
                    echo "*"
                    echo "*???     1. Run ./buildAll.sh in ${GDCHART_DIRECTORY}"
                    echo "*???  or 2. Rerun ./configure with a corrected --with-libpng-root"
                    echo "*???  or 3. Install gd and rerun ./configure"
                    echo "*"
                    echo "*******************************************************************"
                    echo
                    ac_disable_gdchart="yes"
                fi
            fi
       else
           AC_MSG_RESULT([not found in standard location, testing further...])
           dnl> Can we find png.h and libgd where s/he told us?
           AC_MSG_CHECKING([for libpng header])
           LIBPNG_ROOT=`(cd ${LIBPNG_ROOT} && pwd)`
           if test -d ${LIBPNG_ROOT} &&
              test -r ${LIBPNG_ROOT}/png.h; then
               AC_MSG_RESULT([ok, png.h found in ${LIBPNG_ROOT}])
               INCS="${INCS} -I${LIBPNG_ROOT}"
               AC_DEFINE_UNQUOTED(HAVE_PNG_H, 1, [Show we found png.h and set INCS])
           elif test -d ${LIBPNG_ROOT} &&
              test -d ${LIBPNG_ROOT}/include &&
              test -r ${LIBPNG_ROOT}/include/png.h; then
               AC_MSG_RESULT([ok, png.h found in ${LIBPNG_ROOT}/include])
               INCS="${INCS} -I${LIBPNG_ROOT}/include"
               AC_DEFINE_UNQUOTED(HAVE_PNG_H, 1, [Show we found png.h and set INCS])
           else
               AC_MSG_RESULT(error)
               echo
               echo "*******************************************************************"
               echo "*"
               echo "* ERROR:  1. We were unable to find the header png.h in the"
               echo "*            standard location or the alternate locations you"
               echo "*            specified by --with-libpng-root and/or"
               echo "*            --with-gdchart-root."
               echo "*"
               echo "*>>> ./configure continues, charts will not be available."
               echo "*"
               echo "*???     1. Rerun ./configure with a corrected --with-libpng-root"
               echo "*???  or 2. Install gd and rerun ./configure"
               echo "*"
               echo "*******************************************************************"
               echo
               ac_disable_gdchart="yes"
           fi
           if test ".${ac_disable_gdchart}" != ".yes"; then
               AC_MSG_CHECKING([for libpng library])
                oLIBS=${LIBS}
                NTOP_APPEND_LIBS([${LIBPNG_ROOT}])
                AC_CHECK_LIB([png], [png_read_info], [
                    AC_MSG_RESULT(ok)
                    AC_DEFINE_UNQUOTED([HAVE_PNG], 1, [Enable libpng])
                ], [
                    AC_MSG_RESULT(error)
                    LIBS=${oLIBS}
                    echo
                    echo "*******************************************************************"
                    echo "*"
                    echo "* ERROR:  1. We were unable to compile a test program for"
                    echo "*            png_read_info() against -lpng in the standard"
                    echo "*            location nor in the alternate locations you"
                    echo "*            specified by --with-libpng-root and/or"
                    echo "*            --with-gdchart-root."
                    echo "*"
                    echo "*>>> ./configure continues, charts will not be available."
                    echo "*"
                    echo "*???     1. Rerun ./configure with a corrected --with-libpng-root"
                    echo "*???  or 2. Install gd and rerun ./configure"
                    echo "*"
                    echo "*******************************************************************"
                    echo
                    ac_disable_gdchart="yes"
                ])
            fi
       fi
    fi
    if test ".${ac_disable_gdchart}" != ".yes"; then
        AC_DEFINE_UNQUOTED(HAVE_GDCHART, 1, [GDChart is available])
    fi
fi

AC_MSG_CHECKING([zlib])

if test ".${ac_cv_lib_z_zlibVersion}" = ".yes" &&
   test ".${ac_cv_header_zlib_h}" = ".yes"; then
    AC_DEFINE_UNQUOTED(HAVE_ZLIB, 1, [Show we found -lz and zlib.h and set INCS])
    if test ".${ZLIB_ROOT}" != "."; then
        AC_MSG_RESULT(ok)
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* NOTE:  You specified --with-zlib-root."
        echo "*        However, a version was found in a standard location."
        echo "*"
        echo "*       Since this version will be used anyway,"
        echo "*>>>    we've ignored your specified location."
        echo "*"
        echo "*******************************************************************"
        echo
    else
        AC_MSG_RESULT([ok (standard location)])
    fi
    ZLIB_ROOT=
elif test ".${ZLIB_ROOT}" = "."; then
    ac_disable_zlib="no"
    AC_MSG_RESULT([not found in standard location, no --with-zlib-root, testing further...])

    if test -d /usr &&
       test -d /usr/include &&
       test -r /usr/include/zlib.h; then
         AC_MSG_RESULT([ok, zlib.h found in /usr/include])
         INCS="${INCS} -I/usr/include"
         AC_DEFINE_UNQUOTED(HAVE_ZLIB_H, 1, [Show we found zlib.h and set INCS])
    elif test -d /usr &&
       test -d /usr/local &&
       test -d /usr/local/include &&
       test -r /usr/local/include/zlib.h; then
         AC_MSG_RESULT([ok, zlib.h found in /usr/local/include])
         INCS="${INCS} -I/usr/local/include"
         AC_DEFINE_UNQUOTED(HAVE_ZLIB_H, 1, [Show we found zlib.h and set INCS])
    elif test -d ${GDCHART_DIRECTORY} &&
         test -d ${ZLIB_DIRECTORY} &&
         test -r ${ZLIB_DIRECTORY}/zlib.h; then
         AC_MSG_RESULT([ok, zlib.h found in ${ZLIB_DIRECTORY}])
         INCS="${INCS} -I${ZLIB_DIRECTORY}"
         AC_DEFINE_UNQUOTED(HAVE_ZLIB_H, 1, [Show we found zlib.h and set INCS])
    else
        AC_MSG_RESULT(error)
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* ERROR:  1. We were unable to find the header zlib.h in the"
        echo "*            standard location."
        echo "*"
        echo "*     and 2. You did not specify an alternate location"
        echo "*            via --with-zlib-root."
        echo "*"
        echo "*     and 3. We also tested the following:"
        echo "*"
        echo "*                /usr/include"
        echo "*                /usr/local/include"
        echo "*                ${ZLIB_DIRECTORY} (ntop source tree)"
        echo "*"
        echo "*>>> Continuing without zlib."
        echo "*       (http requests will not be compressed for transmission)."
        echo "*"
        echo "*???     1. Rerun ./configure with a corrected --with-zlib-root"
        echo "*???  or 2. Install zlib and rerun ./configure"
        echo "*"
        echo "*******************************************************************"
        echo
        ZLIB_ROOT=
        ac_disable_zlib="yes"
    fi
    if test ".${ac_disable_zlib}" = ".yes"; then
        dnl> nop to skip the 2nd part tests...
        nop="yes"
    else
        AC_MSG_CHECKING([for zlib library])
         if test -d /usr &&
            test -d /usr/lib &&
            (test -r /usr/lib/libz.so ||
             test -r /usr/lib/libz.a); then
             AC_MSG_RESULT([ok, found in /usr/lib])
             LIBS="${LIBS} -L/usr/lib -lz"
             dnl>  /usr/lib should be automatically tested for as part of ld.so.conf...
             AC_DEFINE_UNQUOTED([HAVE_ZLIB], 1, [Enable compression - zlib])
         elif test -d /usr &&
            test -d /usr/local &&
            test -d /usr/local/lib &&
            (test -r /usr/local/lib/libz.so ||
             test -r /usr/local/lib/libz.a); then
             LIBS="${LIBS} -L/usr/local/lib -lz"
             AC_MSG_RESULT([ok, found in /usr/local/lib])
             AC_DEFINE_UNQUOTED([HAVE_ZLIB], 1, [Enable compression - zlib])
         elif test -d ${GDCHART_DIRECTORY} &&
              test -d ${ZLIB_DIRECTORY} &&
              (test -r ${ZLIB_DIRECTORY}/libz.so ||
               test -r ${ZLIB_DIRECTORY}/libz.a); then
             LIBS="${LIBS} -L${ZLIB_DIRECTORY} -lz"
             AC_MSG_RESULT([ok, found in ${ZLIB_DIRECTORY}])
             AC_DEFINE_UNQUOTED([HAVE_ZLIB], 1, [Enable compression - zlib])
         else
             AC_MSG_RESULT(error)
             echo
             echo "*******************************************************************"
             echo "*"
             echo "* ERROR:  1. We were unable to compile a test program for"
             echo "*            zlibVersion() against -lz."
             echo "*"
             echo "*     and 2. You did not specify an alternate location"
             echo "*            via --with-zlib-root."
             echo "*"
             echo "*     and 3. We were unable to find libz.so or libz.a"
             echo "*            via a manual search of"
             echo "*"
             echo "*                /usr/lib"
             echo "*                /usr/local/lib"
             echo "*                ${ZLIB_DIRECTORY} (ntop source tree)"
             echo "*"
             echo "*>>> Continuing without zlib."
             echo "*       (http requests will not be compressed for transmission)."
             echo "*"
             echo "*???     1. Rerun ./configure with a corrected --with-zlib-root"
             echo "*???  or 2. Install zlib and rerun ./configure"
             echo "*"
             echo "*******************************************************************"
             echo
             ZLIB_ROOT=
         fi
    fi
else
    AC_MSG_RESULT([not found in standard location, testing further...])
    dnl> Can we find zlib.h and libz where s/he told us?
    ZLIB_ROOT=`(cd ${ZLIB_ROOT} && pwd)`
    if test -d ${ZLIB_ROOT} &&
       test -r ${ZLIB_ROOT}/zlib.h; then
        AC_MSG_RESULT([ok, zlib.h found in ${ZLIB_ROOT}])
        INCS="${INCS} -I${ZLIB_ROOT}"
        AC_DEFINE_UNQUOTED(HAVE_ZLIB_H, 1, [Show we found zlib.h and set INCS])
    elif test -d ${ZLIB_ROOT} &&
       test -d ${ZLIB_ROOT}/include &&
       test -r ${ZLIB_ROOT}/include/zlib.h; then
        AC_MSG_RESULT([ok, zlib.h found in ${ZLIB_ROOT}/include])
        INCS="${INCS} -I${ZLIB_ROOT}/include"
        AC_DEFINE_UNQUOTED(HAVE_ZLIB_H, 1, [Show we found zlib.h and set INCS])
    else
        AC_MSG_RESULT(error)
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* WARNING:  1. You specified --with-zlib-root, however"
        echo "*              we were unable to find the header file (zlib.h)."
        echo "*"
        echo "*>>> Continuing without zlib."
        echo "*       (http requests will not be compressed for transmission)."
        echo "*"
        echo "*???     1. Rerun ./configure with a corrected --with-zlib-root"
        echo "*???  or 2. Install zlib and rerun ./configure"
        echo "*"
        echo "*******************************************************************"
        echo
        ZLIB_ROOT=
    fi
    if test ".${ZLIB_ROOT}" != "."; then
        AC_MSG_CHECKING([for zlib library])
        oLIBS=${LIBS}
        NTOP_APPEND_LIBS([${ZLIB_ROOT}])
        AC_CHECK_LIB([z], [gzopen], [
            AC_MSG_RESULT([ok, library found in ${ZLIB_ROOT}])
            AC_DEFINE_UNQUOTED([HAVE_ZLIB], 1, [Enable compression - zlib])
        ], [
            AC_MSG_RESULT(error)
            LIBS=${oLIBS}
            echo
            echo "*******************************************************************"
            echo "*"
            echo "* WARNING:  1. You specified --with-zlib-root, however"
            echo "*              we were unable to find the routine gzopen()"
            echo "*              in -lz at that location."
            echo "*"
            echo "*>>> Continuing without zlib."
            echo "*       (http requests will not be compressed for transmission)."
            echo "*"
            echo "*???     1. Rerun ./configure with a corrected --with-zlib-root"
            echo "*???  or 2. Install zlib and rerun ./configure"
            echo "*"
            echo "*******************************************************************"
            echo
        ])
    fi
fi

dnl> XML Dump:

if test ".${GLIB_ROOT}" != "." &&
   test ! -d ${GLIB_ROOT}; then
    echo
    echo "*******************************************************************"
    echo "*" 
    echo "* ERROR:    1. You specified a non-existent directory for the"
    echo "*              --with-glib-root option."
    echo "*" 
    echo "*>>> Continuing without the --with-glib-root option"
    echo "*" 
    echo "*    ./configure may complete successfully or the xml dump"
    echo "*    option may be disabled."
    echo "*" 
    echo "*???     1. Correct the --with-glib-root value and rerun ./configure"
    echo "*" 
    echo "*******************************************************************"
    echo
    GLIB_ROOT=
fi 
if test ".${GLIBCONFIG_ROOT}" != "." &&
   test ! -d ${GLIBCONFIG_ROOT}; then
    echo
    echo "*******************************************************************"
    echo "*" 
    echo "* ERROR:    1. You specified a non-existent directory for the"
    echo "*              --with-glibconfig-root option."
    echo "*" 
    echo "*>>> Continuing without the --with-glibconfig-root option"
    echo "*" 
    echo "*    ./configure may complete successfully or the xml dump"
    echo "*    option may be disabled."
    echo "*" 
    echo "*???     1. Correct the --with-glibconfig-root value and rerun ./configure"
    echo "*" 
    echo "*******************************************************************"
    echo
    GLIBCONFIG_ROOT=
fi 
if test ".${XML2_ROOT}" != "." &&
   test ! -d ${XML2_ROOT}; then
    echo
    echo "*******************************************************************"
    echo "*" 
    echo "* ERROR:    1. You specified a non-existent directory for the"
    echo "*              --with-xml2-root option."
    echo "*" 
    echo "*>>> Continuing without the --with-xml2-root option"
    echo "*" 
    echo "*    ./configure may complete successfully or the xml dump"
    echo "*    option may be disabled."
    echo "*" 
    echo "*???     1. Correct the --with-xml2-root value and rerun ./configure"
    echo "*" 
    echo "*******************************************************************"
    echo
    XML2_ROOT=
fi 
if test ".${GDOME_ROOT}" != "." &&
   test ! -d ${GDOME_ROOT}; then
    echo
    echo "*******************************************************************"
    echo "*" 
    echo "* ERROR:    1. You specified a non-existent directory for the"
    echo "*              --with-gdome-root option."
    echo "*" 
    echo "*>>> Continuing without the --with-gdome-root option"
    echo "*" 
    echo "*    ./configure may complete successfully or the xml dump"
    echo "*    option may be disabled."
    echo "*" 
    echo "*???     1. Correct the --with-gdome-root value and rerun ./configure"
    echo "*" 
    echo "*******************************************************************"
    echo
    GDOME_ROOT=
fi 

if test ".${ac_enable_xmldump}" = ".yes"; then
    AC_MSG_CHECKING([for XML Dump])

   dnl>  First the mass test - if ALL of it is found, we just push on...
   mass_xmldump_test_result="no"

   if test ".${ac_debug}" = ".yes"; then
       echo "DEBUG: XMLDump - mass test... _header_glib_h is ${ac_cv_header_glib_h}"
       echo "                        _header_glibconfig_h is ${ac_cv_header_glibconfig_h}"
       echo "                        _header_xmlversion_h is ${ac_cv_header_xmlversion_h}"
       echo "                             _header_gdome_h is ${ac_cv_header_gdome_h}"
       echo "                     _lib_glib_g_date_julian is ${ac_cv_lib_glib_g_date_julian}"
       echo "                   _lib_glib12_g_date_julian is ${ac_cv_lib_glib12_g_date_julian}"
       echo "                   _lib_xml2_xmlCheckVersion is ${ac_cv_lib_xml2_xmlCheckVersion}"
       echo "           _lib_gdome_gdome_di_saveDocToFile is ${ac_cv_lib_gdome_gdome_di_saveDocToFile}"
   fi

   if test ".${ac_cv_header_glib_h}"                    = ".yes" &&
      test ".${ac_cv_header_glibconfig_h}"              = ".yes" &&
      test ".${ac_cv_header_xmlversion_h}"              = ".yes" &&
      test ".${ac_cv_header_gdome_h}"                   = ".yes" &&
      (test ".${ac_cv_lib_glib_g_date_julian}"          = ".yes" ||
       test ".${ac_cv_lib_glib12_g_date_julian}"        = ".yes") &&
      test ".${ac_cv_lib_xml2_xmlCheckVersion}"         = ".yes" &&
      test ".${ac_cv_lib_gdome_gdome_di_saveDocToFile}" = ".yes"; then
       mass_xmldump_test_result="yes"
       if test ".${XML2_ROOT}" != "."; then
           AC_MSG_RESULT(ok)
           echo
           echo "*******************************************************************"
           echo "*"
           echo "* NOTE:  You specified --with-xml2-root (and possibly --with-glib-root,"
           echo "*        --with-glibconfig-root and/or --with-gdome-root)."
           echo "*        However, a version was found in a standard location."
           echo "*"
           echo "*       Since this version will be used anyway,"
           echo "*>>>    we've ignored your specified location."
           echo "*"
           echo "*******************************************************************"
           echo
           XML2_ROOT=
           GLIB_ROOT=
           GLIBCONFIG_ROOT=
           GDOME_ROOT=
       else
           AC_MSG_RESULT([ok (standard location)])
       fi
   elif test ".${XML2_ROOT}" = "."; then
       AC_MSG_RESULT([not found in standard location, no --with-xml2-root, testing further...])
       AC_MSG_CHECKING([for libxml2 headers])
       if test -d /usr &&
          test -d /usr/include &&
          test -r /usr/include/xmlversion.h; then
           AC_MSG_RESULT([ok, xmlversion.h found in /usr/include])
           INCS="${INCS} -I/usr/include"
           AC_DEFINE_UNQUOTED(HAVE_XMLVERSION_H, 1)
       elif test -d /usr &&
            test -d /usr/local &&
            test -d /usr/local/include &&
            test -r /usr/local/include/xmlversion.h; then
           AC_MSG_RESULT([ok, xmlversion.h found in /usr/local/include])
           INCS="${INCS} -I/usr/local/include"
           AC_DEFINE_UNQUOTED(HAVE_XMLVERSION_H, 1)
       else
           echo
           echo "*******************************************************************"
           echo "*"
           echo "* ERROR:  1. We were unable to find the header xmlversion.h in the"
           echo "*            standard location."
           echo "*"
           echo "*     and 2. You did not specify an alternate location"
           echo "*            via --with-xml2-root."
           echo "*"
           echo "*     and 3. We also tested the following:"
           echo "*"
           echo "*                /usr/include"
           echo "*                /usr/local/include"
           echo "*"
           echo "*>>> ./configure continues, xml dump will not be available."
           echo "*"
           echo "*???     1. Rerun ./configure with a corrected --with-xml2-root*"
           echo "*???  or 2. Install libxml2 and rerun ./configure"
           echo "*"
           echo "*******************************************************************"
           echo
           ac_disable_xmldump="yes"
       fi
       if test ".${ac_disable_xmldump}" = ".yes"; then
           dnl> Skip further tests
           nop="yes"
       else
           AC_MSG_CHECKING([for libxml2 library])
           if test -d /usr &&
              test -d /usr/lib &&
              (test -r /usr/lib/libxml2.so ||
               test -r /usr/lib/libxml2.a); then
               dnl>  /usr/lib should be automatically tested for as part of ld.so.conf...
               AC_MSG_RESULT([ok, library found in /usr/lib])
               LIBS="${LIBS} -L/usr/lib -lxmldump"
               AC_DEFINE_UNQUOTED(HAVE_LIBXML2, 1)
           elif test -d /usr &&
                test -d /usr/local &&
                test -d /usr/local/lib &&
                (test -r /usr/local/lib/libxml2.so ||
                 test -r /usr/local/lib/libxml2.a); then
               AC_MSG_RESULT([ok, library found in /usr/local/lib])
               LIBS="${LIBS} -L/usr/local/lib -lxmldump"
               AC_DEFINE_UNQUOTED(HAVE_LIBXML2, 1)
           else
               AC_MSG_RESULT(error)
               echo
               echo "*******************************************************************"
               echo "*"
               echo "* ERROR:  1. We were unable to compile a test program for libxml2."
               echo "*"
               echo "*     and 2. You did not specify an alternate location"
               echo "*            via --with-xml2-root."
               echo "*"
               echo "*     and 3. We were unable to find libxml2.so or libxml2.a"
               echo "*            via a manual search of"
               echo "*"
               echo "*                /usr/lib"
               echo "*                /usr/local/lib"
               echo "*"
               echo "*>>> ./configure continues, xml dump will not be available."
               echo "*"
               echo "*???     1. Run ./buildAll.sh in ${XMLDUMP_DIRECTORY}"
               echo "*???  or 2. Rerun ./configure with a corrected --with-xml2-root"
               echo "*???  or 3. Install libxml2 and rerun ./configure"
               echo "*"
               echo "*******************************************************************"
               echo
               ac_disable_xmldump="yes"
           fi
       fi
   else
       AC_MSG_RESULT([not found in standard location, testing further...])

       dnl> Can we find xmlversion.h and libxml2 where s/he told us?

       AC_MSG_CHECKING([for xmlversion.h])
       XML2_ROOT=`(cd ${XML2_ROOT} && pwd)`
       if test -d ${XML2_ROOT} &&
          test -r ${XML2_ROOT}/xmlversion.h; then
           AC_MSG_RESULT([ok, xmlversion.h found in ${XML2_ROOT}])
           INCS="${INCS} -I${XML2_ROOT}"
           AC_DEFINE_UNQUOTED(HAVE_XMLVERSION_H, 1)
       elif test -d ${XML2_ROOT} &&
          test -d ${XML2_ROOT}/include &&
          test -r ${XML2_ROOT}/include/xmlversion.h; then
           AC_MSG_RESULT([ok, xmlversion.h found in ${XML2_ROOT}/include])
           INCS="${INCS} -I${XML2_ROOT}/include"
           AC_DEFINE_UNQUOTED(HAVE_XMLVERSION_H, 1)
       else
           AC_MSG_RESULT(error)
           echo
           echo "*******************************************************************"
           echo "*"
           echo "* ERROR:  1. We were unable to find the header xmlversion.h in the"
           echo "*            standard location or the alternate location you"
           echo "*            specified by --with-xml2-root."
           echo "*"
           echo "*>>> ./configure continues, xml dump will not be available."
           echo "*"
           echo "*???     1. Rerun ./configure with a corrected --with-xml2-root"
           echo "*???  or 2. Install libxml2 and rerun ./configure"
           echo "*"
           echo "*******************************************************************"
           echo
           ac_disable_xmldump="yes"
       fi
       if test ".${ac_enable_xmldump}" = ".yes"; then
           AC_MSG_CHECKING([for libxml2 library])
           oLIBS="${LIBS}"
           NTOP_APPEND_LIBS([${XML2_ROOT}])
           AC_CHECK_LIB([xml2], [xmlInitParser], [], [
               AC_MSG_RESULT(error)
               LIBS="${oLIBS}"
               echo
               echo "*******************************************************************"
               echo "*"
               echo "* ERROR:  1. We were unable to compile a test program for"
               echo "*            xmlInitParser() against -lxml2 in the standard"
               echo "*            location nor in the alternate locations you"
               echo "*            specified by --with-xml2-root."
               echo "*"
               echo "*>>> ./configure continues, xml dump will not be available."
               echo "*"
               echo "*???     1. Rerun ./configure with a corrected --with-gd-root"
               echo "*???  or 2. Install libxml2 and rerun ./configure"
               echo "*"
               echo "*******************************************************************"
               echo
               ac_disable_xmldump="yes"
           ])
       fi
    fi

    if test ".${ac_disable_xmldump}"       != ".yes" &&
       test ".${mass_xmldump_test_result}" != ".yes"; then
        AC_MSG_CHECKING([for glib])

       if test ".${ac_cv_header_glib_h}"                    = ".yes" &&
          test ".${ac_cv_lib_glib_g_date_julian}"           = ".yes"; then
           if test ".${GLIB_ROOT}" != "."; then
               AC_MSG_RESULT(ok)
               echo
               echo "*******************************************************************"
               echo "*"
               echo "* NOTE:  You specified (or implied) --with-glib-root.  However,"
               echo "*        a version was found in a standard location."
               echo "*"
               echo "*       Since this version will be used anyway,"
               echo "*>>>    we've ignored your specified location."
               echo "*"
               echo "*******************************************************************"
               echo
               GLIB_ROOT=
           else
               AC_MSG_RESULT([ok (standard location)])
           fi
       elif test ".${GLIB_ROOT}" = "."; then
           AC_MSG_RESULT([not found in standard location, no --with-glib-root, testing further...])
           AC_MSG_CHECKING([for glib header])
           if test -d /usr &&
              test -d /usr/include &&
              test -r /usr/include/glib.h; then
               AC_MSG_RESULT([ok, found in /usr/include])
               INCS="${INCS} -I/usr/include"
               AC_DEFINE_UNQUOTED(HAVE_GLIB_H, 1)
           elif test -d /usr &&
              test -d /usr/local &&
              test -d /usr/local/include &&
              test -r /usr/local/include/glib.h; then
               AC_MSG_RESULT([ok, found in /usr/local/include])
               INCS="${INCS} -I/usr/local/include"
               AC_DEFINE_UNQUOTED(HAVE_GLIB_H, 1)
           else
               AC_MSG_RESULT(error)
               echo
               echo "*******************************************************************"
               echo "*"
               echo "* ERROR:  1. We were unable to find the header glib.h in the"
               echo "*            standard location."
               echo "*"
               echo "*     and 2. You did not specify an alternate location"
               echo "*            via --with-glib-root."
               echo "*"
               echo "*     and 3. We also tested the following:"
               echo "*"
               echo "*                /usr/include"
               echo "*                /usr/local/include"
               echo "*"
               echo "*>>> ./configure continues, xml dump will not be available."
               echo "*"
               echo "*???     1. Rerun ./configure with a corrected --with-glib-root"
               echo "*???  or 2. Install glib and rerun ./configure"
               echo "*"
               echo "*******************************************************************"
               echo
               ac_disable_xmldump="yes"
           fi
           if test ".${ac_disable_xmldump}" = ".yes"; then
               nop="yes"
           else
               AC_MSG_CHECKING([for glib library])
               if test -d /usr &&
                  test -d /usr/lib &&
                  (test -r /usr/lib/libglib.so ||
                   test -r /usr/lib/libglib.a); then
                   dnl>  /usr/lib should be automatically tested for as part of ld.so.conf...
                   AC_MSG_RESULT([ok, found in /usr/lib])
                   LIBS="${LIBS} -L/usr/lib -lglib"
                   AC_DEFINE_UNQUOTED(HAVE_LIBGLIB, 1)
               elif test -d /usr &&
                  test -d /usr/local &&
                  test -d /usr/local/lib &&
                  (test -r /usr/local/lib/libglib.so ||
                   test -r /usr/local/lib/libglib.a); then
                   AC_MSG_RESULT([ok, found in /usr/local/lib])
                   LIBS="${LIBS} -L/usr/local/lib -lglib"
                   AC_DEFINE_UNQUOTED(HAVE_LIBGLIB, 1)
               else
                   AC_MSG_RESULT(error)
                   echo
                   echo "*******************************************************************"
                   echo "*"
                   echo "* ERROR:  1. We were unable to compile a test program for"
                   echo "*            g_date_julian() against -lglib."
                   echo "*"
                   echo "*     and 2. You did not specify an alternate location"
                   echo "*            via --with-glib-root."
                   echo "*"
                   echo "*     and 3. We were unable to find libglib.so or libgd.a"
                   echo "*            via a manual search of"
                   echo "*"
                   echo "*                /usr/lib"
                   echo "*                /usr/local/lib"
                   echo "*"
                   echo "*>>> ./configure continues, xml dump will not be available."
                   echo "*"
                   echo "*???     1. Rerun ./configure with a corrected --with-glib-root"
                   echo "*???  or 2. Install glib and rerun ./configure"
                   echo "*"
                   echo "*******************************************************************"
                   echo
                   ac_disable_xmldump="yes"
               fi
           fi
       else
           AC_MSG_RESULT([not found in standard location, testing further...])
           dnl> Can we find glib.h and libgd where s/he told us?

           AC_MSG_CHECKING([for glib library])

           GLIB_ROOT=`(cd ${GLIB_ROOT} && pwd)`
           if test -d ${GLIB_ROOT} &&
              test -r ${GLIB_ROOT}/glib.h; then
               AC_MSG_RESULT([ok, glib.h found in ${GLIB_ROOT}])
               INCS="${INCS} -I${GLIB_ROOT}"
               AC_DEFINE_UNQUOTED(HAVE_GLIB_H, 1)
           elif test -d ${GLIB_ROOT} &&
              test -d ${GLIB_ROOT}/include &&
              test -r ${GLIB_ROOT}/include/glib.h; then
               AC_MSG_RESULT([ok, glib.h found in ${GLIB_ROOT}/include])
               INCS="${INCS} -I${GLIB_ROOT}/include"
               AC_DEFINE_UNQUOTED(HAVE_GLIB_H, 1)
           elif test -d ${GLIB_ROOT} &&
              test -d ${GLIB_ROOT}/include &&
              test -d ${GLIB_ROOT}/include/glib20 &&
              test -r ${GLIB_ROOT}/include/glib20/glib.h; then
               AC_MSG_RESULT([ok, glib.h found in ${GLIB_ROOT}/include/glib20])
               INCS="${INCS} -I${GLIB_ROOT}/include/glib20"
           elif test -d ${GLIB_ROOT} &&
              test -d ${GLIB_ROOT}/include &&
              test -d ${GLIB_ROOT}/include/glib-2.0 &&
              test -r ${GLIB_ROOT}/include/glib-2.0/glib.h; then
               AC_MSG_RESULT([ok, glib.h found in ${GLIB_ROOT}/include/glib-2.0])
               INCS="${INCS} -I${GLIB_ROOT}/include/glib-2.0"
           elif test -d ${GLIB_ROOT} &&
              test -d ${GLIB_ROOT}/include &&
              test -d ${GLIB_ROOT}/include/glib12 &&
              test -r ${GLIB_ROOT}/include/glib12/glib.h; then
               AC_MSG_RESULT([ok, glib.h found in ${GLIB_ROOT}/include/glib12])
               INCS="${INCS} -I${GLIB_ROOT}/include/glib12"
           elif test -d ${GLIB_ROOT} &&
              test -d ${GLIB_ROOT}/include &&
              test -d ${GLIB_ROOT}/include/glib-1.2 &&
              test -r ${GLIB_ROOT}/include/glib-1.2/glib.h; then
               AC_MSG_RESULT([ok, glib.h found in ${GLIB_ROOT}/include/glib-1.2])
               INCS="${INCS} -I${GLIB_ROOT}/include/glib-1.2"
               AC_DEFINE_UNQUOTED(HAVE_GLIB_H, 1)
           else
               AC_MSG_RESULT(error)
               echo
               echo "*******************************************************************"
               echo "*"
               echo "* ERROR:  1. We were unable to find the header glib.h in the"
               echo "*            standard location or the alternate locations you"
               echo "*            specified by --with-glib-root."
               echo "*"
               echo "*>>> ./configure continues, xml dump will not be available."
               echo "*"
               echo "*???     1. Rerun ./configure with a corrected --with-glib-root"
               echo "*???  or 2. Install glib and rerun ./configure"
               echo "*"
               echo "*******************************************************************"
               echo
               ac_disable_xmldump="yes"
           fi

           if test ".${ac_enable_xmldump}" = ".yes"; then
               oLIBS="${LIBS}"
               AC_MSG_CHECKING([for glib library])
               echo ""
               for subdir in "" /lib; do
                 if test ".${ac_cv_lib_glib_g_date_to_struct_tm}" = ".yes"; then
                    :;
                 else
                   echo "Checking ${GLIB_ROOT}${subdir}..."
                   for libname in glib glib-2.0 glib20 glib-1.2 glib12; do
                     if test ".${ac_cv_lib_glib_g_date_to_struct_tm}" = ".yes"; then
                       :;
                     else
                       if test -d ${GLIB_ROOT}${subdir}; then
                         NTOP_APPEND_LIBS([${GLIB_ROOT}${subdir}])
                         as_ac_Lib=`echo "ac_cv_lib_${libname}''_g_date_to_struct_tm" | $as_tr_sh`
                         eval "$as_unset ${as_ac_Lib}"
                         AC_CHECK_LIB([${libname}], 
                                      [g_date_to_struct_tm], 
                                      [ac_cv_lib_glib_g_date_to_struct_tm=yes], 
                                      [LIBS="${oLIBS}"])
                       fi
                     fi
                   done
                 fi
               done
               if test ".${ac_cv_lib_glib_g_date_to_struct_tm}" = ".yes"; then 
                   :;
               else
                   LIBS="${oLIBS}"
                   echo
                   echo "*******************************************************************"
                   echo "*"
                   echo "* ERROR:  1. We were unable to compile a test program for"
                   echo "*            g_date_to_struct_tm() against -lglib in the standard"
                   echo "*            location nor in the alternate locations you"
                   echo "*            specified by --with-glib-root."
                   echo "*"
                   echo "*>>> ./configure continues, xml dump will not be available."
                   echo "*"
                   echo "*???     1. Rerun ./configure with a corrected --with-glib-root"
                   echo "*???  or 2. Install glib and rerun ./configure"       
                   echo "*"
                   echo "*******************************************************************"
                   echo
                   ac_disable_xmldump="yes"
               fi
           fi
       fi
    fi

    if test ".${ac_disable_xmldump}"       != ".yes" &&
       test ".${mass_xmldump_test_result}" != ".yes"; then
        AC_MSG_CHECKING([for glibconfig])

       if test ".${ac_cv_header_glibconfig_h}"                    = ".yes"; then
           if test ".${GLIBCONFIG_ROOT}" != "."; then
               AC_MSG_RESULT(ok)
               echo
               echo "*******************************************************************"
               echo "*"
               echo "* NOTE:  You specified (or implied) --with-glibconfig-root.  However,"
               echo "*        a version was found in a standard location."
               echo "*"
               echo "*       Since this version will be used anyway,"
               echo "*>>>    we've ignored your specified location."
               echo "*"
               echo "*******************************************************************"
               echo
               GLIBCONFIG_ROOT=
           else
               AC_MSG_RESULT([ok (standard location)])
           fi
       elif test ".${GLIBCONFIG_ROOT}" = "."; then
           AC_MSG_RESULT([not found in standard location, no --with-glibconfig-root, testing further...])
           AC_MSG_CHECKING([for glibconfig header])
           if test -d /usr &&
              test -d /usr/include &&
              test -r /usr/include/glibconfig.h; then
               AC_MSG_RESULT([ok, found in /usr/include])
               INCS="${INCS} -I/usr/include"
               AC_DEFINE_UNQUOTED(HAVE_GLIBCONFIG_H, 1)
           elif test -d /usr &&
              test -d /usr/local &&
              test -d /usr/local/include &&
              test -r /usr/local/include/glibconfig.h; then
               AC_MSG_RESULT([ok, found in /usr/local/include])
               INCS="${INCS} -I/usr/local/include"
               AC_DEFINE_UNQUOTED(HAVE_GLIBCONFIG_H, 1)
           else
               AC_MSG_RESULT(error)
               echo
               echo "*******************************************************************"
               echo "*"
               echo "* ERROR:  1. We were unable to find the header glibconfig.h in the"
               echo "*            standard location."
               echo "*"
               echo "*     and 2. You did not specify an alternate location"
               echo "*            via --with-glibconfig-root."
               echo "*"
               echo "*     and 3. We also tested the following:"
               echo "*"
               echo "*                /usr/include"
               echo "*                /usr/local/include"
               echo "*"
               echo "*>>> ./configure continues, xml dump will not be available."
               echo "*"
               echo "*???     1. Rerun ./configure with a corrected --with-glibconfig-root"
               echo "*???  or 2. Install glibconfig and rerun ./configure"
               echo "*"
               echo "*******************************************************************"
               echo
               ac_disable_xmldump="yes"
           fi
       else
           AC_MSG_RESULT([not found in standard location, testing further...])
           dnl> Can we find glibconfig.h where s/he told us?

           GLIBCONFIG_ROOT=`(cd ${GLIBCONFIG_ROOT} && pwd)`
           if test -d ${GLIBCONFIG_ROOT} &&
              test -r ${GLIBCONFIG_ROOT}/glibconfig.h; then
               AC_MSG_RESULT([ok, glibconfig.h found in ${GLIBCONFIG_ROOT}])
               INCS="${INCS} -I${GLIBCONFIG_ROOT}"
               AC_DEFINE_UNQUOTED(HAVE_GLIBCONFIG_H, 1)
           elif test -d ${GLIBCONFIG_ROOT} &&
              test -d ${GLIBCONFIG_ROOT}/include &&
              test -r ${GLIBCONFIG_ROOT}/include/glibconfig.h; then
               AC_MSG_RESULT([ok, glibconfig.h found in ${GLIBCONFIG_ROOT}/include])
               INCS="${INCS} -I${GLIBCONFIG_ROOT}/include"
               AC_DEFINE_UNQUOTED(HAVE_GLIBCONFIG_H, 1)
           else
               AC_MSG_RESULT(error)
               echo
               echo "*******************************************************************"
               echo "*"
               echo "* ERROR:  1. We were unable to find the header glibconfig.h in the"
               echo "*            standard location or the alternate locations you"
               echo "*            specified by --with-glibconfig-root."
               echo "*"
               echo "*>>> ./configure continues, xml dump will not be available."
               echo "*"
               echo "*???     1. Rerun ./configure with a corrected --with-glibconfig-root"
               echo "*???  or 2. Install glibconfig and rerun ./configure"
               echo "*"
               echo "*******************************************************************"
               echo
               ac_disable_xmldump="yes"
           fi
       fi
    fi

    if test ".${ac_disable_xmldump}"       != ".yes" &&
       test ".${mass_xmldump_test_result}" != ".yes"; then
        AC_MSG_CHECKING([for libgdome])

       if test ".${ac_cv_header_gdome_h}"                    = ".yes" &&
          test ".${ac_cv_lib_gdome_gdome_di_saveDocToFile}"  = ".yes"; then
           if test ".${GDOME_ROOT}" != "."; then
               AC_MSG_RESULT(ok)
               echo
               echo "*******************************************************************"
               echo "*"
               echo "* NOTE:  You specified (or implied) --with-gdome-root.  However,"
               echo "*        a version was found in a standard location."
               echo "*"
               echo "*       Since this version will be used anyway,"
               echo "*>>>    we've ignored your specified location."
               echo "*"
               echo "*******************************************************************"
               echo
               GDOME_ROOT=
           else
               AC_MSG_RESULT([ok (standard location)])
           fi
       elif test ".${GDOME_ROOT}" = "."; then
           AC_MSG_RESULT([not found in standard location, no --with-gdome-root, testing further...])
           AC_MSG_CHECKING([for libgdome header])
           if test -d /usr &&
              test -d /usr/include &&
              test -r /usr/include/gdome.h; then
               AC_MSG_RESULT([ok, gdome.h found in /usr/include])
               INCS="${INCS} -I/usr/include"
               AC_DEFINE_UNQUOTED(HAVE_GDOME_H, 1)
           elif test -d /usr &&
              test -d /usr/local &&
              test -d /usr/local/include &&
              test -r /usr/local/include/gdome.h; then
               AC_MSG_RESULT([ok, gdome.h found in /usr/local/include])
               INCS="${INCS} -I/usr/local/include"
               AC_DEFINE_UNQUOTED(HAVE_GDOME_H, 1)
           else
               AC_MSG_RESULT(error)
               echo
               echo "*******************************************************************"
               echo "*"
               echo "* ERROR:  1. We were unable to find the header gdome.h in the"
               echo "*            standard location."
               echo "*"
               echo "*     and 2. You did not specify an alternate location"
               echo "*            via --with-gdome-root."
               echo "*"
               echo "*     and 3. We also tested the following:"
               echo "*"
               echo "*                /usr/include"
               echo "*                /usr/local/include"
               echo "*"
               echo "*>>> ./configure continues, charts will not be available."
               echo "*"
               echo "*???     1. Rerun ./configure with a corrected --with-gdome-root"
               echo "*???  or 2. Install libgdome and rerun ./configure"
               echo "*"
               echo "*******************************************************************"
               echo
               ac_disable_xmldump="yes"
           fi
           if test ".${ac_disable_xmldump}" = ".yes"; then
               nop="yes"
           else
               AC_MSG_CHECKING([for libgdome library])
                if test -d /usr &&
                   test -d /usr/lib &&
                   (test -r /usr/lib/libgdome.so ||
                    test -r /usr/lib/libgdome.a); then
                    dnl>  /usr/lib should be automatically tested for as part of ld.so.conf...
                    LIBS="${LIBS} -L/usr/lib -lgdome"
                    AC_MSG_RESULT([ok, found in /usr/lib])
                    AC_DEFINE_UNQUOTED(HAVE_LIBGDOME, 1)
                elif test -d /usr &&
                     test -d /usr/local &&
                     test -d /usr/local/lib &&
                     (test -r /usr/local/lib/libgdome.so ||
                      test -r /usr/local/lib/libgdome.a); then
                    LIBS="${LIBS} -L/usr/local/lib -lgdome"
                    AC_MSG_RESULT([ok, found in /usr/local/lib])
                    AC_DEFINE_UNQUOTED(HAVE_LIBGDOME, 1)
                else
                    AC_MSG_RESULT(error)
                    echo
                    echo "*******************************************************************"
                    echo "*"
                    echo "* ERROR:  1. We were unable to compile a test program for"
                    echo "*            gdome_di_saveDocToFile() against -libgdome."
                    echo "*"
                    echo "*     and 2. You did not specify an alternate location"
                    echo "*            via --with-gdome-root."
                    echo "*"
                    echo "*     and 3. We were unable to find libgdome.so or libgdome.a"
                    echo "*            via a manual search of"
                    echo "*"
                    echo "*                /usr/lib"
                    echo "*                /usr/local/lib"
                    echo "*"
                    echo "*>>> ./configure continues, xml dump will not be available."
                    echo "*"
                    echo "*???     1. Rerun ./configure with a corrected --with-gdome-root"
                    echo "*???  or 2. Install libgdome and rerun ./configure"
                    echo "*"
                    echo "*******************************************************************"
                    echo
                    ac_disable_xmldump="yes"
                fi
            fi
       else
           AC_MSG_RESULT([not found in standard location, testing further...])
           dnl> Can we find gdome.h and libgd where s/he told us?
           AC_MSG_CHECKING([for libgdome header])
           GDOME_ROOT=`(cd ${GDOME_ROOT} && pwd)`
           if test -d ${GDOME_ROOT} &&
              test -r ${GDOME_ROOT}/gdome.h; then
               AC_MSG_RESULT([ok, gdome.h found in ${GDOME_ROOT}])
               INCS="${INCS} -I${GDOME_ROOT}"
               AC_DEFINE_UNQUOTED(HAVE_GDOME_H, 1)
           elif test -d ${GDOME_ROOT} &&
              test -d ${GDOME_ROOT}/include &&
              test -r ${GDOME_ROOT}/include/gdome.h; then
               AC_MSG_RESULT([ok, gdome.h found in ${GDOME_ROOT}/include])
               INCS="${INCS} -I${GDOME_ROOT}/include"
               AC_DEFINE_UNQUOTED(HAVE_GDOME_H, 1)
           elif test -d ${GDOME_ROOT} &&
              test -d ${GDOME_ROOT}/include &&
              test -d ${GDOME_ROOT}/include/libgdome &&
              test -r ${GDOME_ROOT}/include/libgdome/gdome.h; then
               AC_MSG_RESULT([ok, gdome.h found in ${GDOME_ROOT}/libgdome/include])
               INCS="${INCS} -I${GDOME_ROOT}/include/libgdome"
               AC_DEFINE_UNQUOTED(HAVE_GDOME_H, 1)
           else
               AC_MSG_RESULT(error)
               echo
               echo "*******************************************************************"
               echo "*"
               echo "* ERROR:  1. We were unable to find the header gdome.h in the"
               echo "*            standard location or the alternate location you"
               echo "*            specified by --with-gdome-root."
               echo "*"
               echo "*>>> ./configure continues, xml dump will not be available."
               echo "*"
               echo "*???     1. Rerun ./configure with a corrected --with-gdome-root"
               echo "*???  or 2. Install libgdome and rerun ./configure"
               echo "*"
               echo "*******************************************************************"
               echo
               ac_disable_xmldump="yes"
           fi
           if test ".${ac_enable_xmldump}" = ".yes"; then
               AC_MSG_CHECKING([for libgdome library])
               oLIBS=${LIBS}
               NTOP_APPEND_LIBS([${GDOME_ROOT}])
               AC_CHECK_LIB([gdome], [gdome_di_createDocumentType], [], [
                   LIBS=${oLIBS}
                   NTOP_APPEND_LIBS([${GDOME_ROOT}/lib])
                   AC_CHECK_LIB([gdome], [gdome_di_createDocument], [], [
                       AC_MSG_RESULT(error)
                       LIBS=${oLIBS}
                       echo
                       echo "*******************************************************************"
                       echo "*"
                       echo "* ERROR:  1. We were unable to compile a test program for"
                       echo "*            gdome_di_createDocumentType() against -lgdome in the"
                       echo "*            standard location nor in the alternate location you"
                       echo "*            specified by --with-gdome-root."
                       echo "*"
                       echo "*>>> ./configure continues, xml dump will not be available."
                       echo "*"
                       echo "*???     1. Rerun ./configure with a corrected --with-gdome-root"
                       echo "*???  or 2. Install libgdome and rerun ./configure"
                       echo "*"
                       echo "*******************************************************************"
                       echo
                       ac_disable_xmldump="yes"
                   ])
               ])
           fi
       fi
    fi
    if test ".${ac_enable_xmldump}" = ".yes"; then
        AC_DEFINE_UNQUOTED(MAKE_WITH_XMLDUMP, 1, [XML Dump is available])
    fi
fi


if test ".${ac_enable_intop}" = ".yes"; then
    AC_MSG_CHECKING(intop libraries)
    AC_MSG_RESULT([])
    if test ".${ac_disable_curses}" = ".yes"; then
        AC_CHECK_LIB(ncurses, initscr, 
            AC_MSG_CHECKING(for ncurses)
            AC_MSG_RESULT(ok)
            LIBCURSES="-lncurses", 
            AC_MSG_CHECKING(for ncurses)
            AC_MSG_RESULT([disabled - missing ncurses.h.])
            ac_enable_intop=no
        )
    else
        AC_CHECK_LIB(ncurses, initscr, 
                     AC_MSG_CHECKING(for ncurses)
                     AC_MSG_RESULT(ok)
                     LIBCURSES="-lncurses", 
                     AC_MSG_CHECKING(for ncurses)
                     AC_MSG_RESULT(missing)
                     AC_CHECK_LIB(curses, initscr, 
                                   AC_MSG_CHECKING(for curses)
                                   AC_MSG_RESULT(ok)
                                   LIBCURSES="-lcurses",
                                   AC_MSG_CHECKING(for curses)
                                   AC_MSG_RESULT([disabled - missing (n)curses.h.])
                                   ac_enable_intop=no)
        )
    fi

    if test ".${ac_enable_intop}" = ".yes"; then

        AC_MSG_CHECKING([for intop])
        AC_MSG_RESULT(ok)
        INTOP=intop

        if test ".${ac_disable_readline}" != ".yes"; then
            READLIBS="${LIBCURSES}"
            case "${LIBCURSES}" in
                *termcap*|*curses*)
                    ;;
                *)
                    AC_CHECK_LIB(termcap, tgetent, [
                        LIBTERMCAP="-ltermcap"
                        READLIBS="${READLIBS} ${LIBTERMCAP}"
                        AC_MSG_RESULT([         ...using ${READLIBS}])
                    ])
                    ;;
             esac

             AC_CHECK_LIB(readline, readline, [
                 LIBREADLINE="-lreadline ${LIBTERMCAP}"
                 AC_DEFINE_UNQUOTED(HAVE_READLINE, 1, [GNU readline library (-lreadline).])
                        AC_MSG_RESULT([         ...using ${LIBREADLINE}])
             ], ,${READLIBS})
        fi
    fi
fi

if test ".${RRD_ROOT}" != "." &&
   test ! -d ${RRD_ROOT}; then
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR:    1. You specified a non-existent directory for the"
    echo "*              --with-rrd-root option."
    echo "*"
    echo "*>>> Continuing without the --with-rrd-root option"
    echo "*"
    echo "*    ./configure will complete successfully but rrd may be disabled"
    echo "*"
    echo "*???     1. Correct the --with-rrd-root value and rerun ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    RRD_ROOT=
fi 

AC_MSG_CHECKING([for rrd])
ac_disable_rrd="no"

if test ".${ac_cv_header_rrd_h}"        = ".yes" &&
   test ".${ac_cv_lib_rrd_rrd_create}"   = ".yes"; then
    AC_DEFINE_UNQUOTED([HAVE_RRD], 1, [Enable RRD])
    if test ".${RRD_ROOT}" != "."; then
        AC_MSG_RESULT(ok)
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* NOTE:  You specified (or implied) --with-rrd-root.  However,"
        echo "*        a version was found in a standard location."
        echo "*"
        echo "*       Since this version will be used anyway,"
        echo "*>>>    we've ignored your specified location."
        echo "*"
        echo "*******************************************************************"
        echo
        RRD_ROOT=
    else
        AC_MSG_RESULT([ok (standard location)])
    fi
elif test ".${RRD_ROOT}" = "."; then
    AC_MSG_RESULT([not found in standard location, no --with-rrd-root, testing further...])
    AC_MSG_CHECKING([for rrd header])
    if test -d /usr &&
       test -d /usr/include &&
       test -r /usr/include/rrd.h; then
        AC_MSG_RESULT([ok, found in /usr/include])
        INCS="${INCS} -I/usr/include"
        AC_DEFINE_UNQUOTED(HAVE_RRD_H, 1, [Show we found rrd.h and set INCS])
    elif test -d /usr &&
       test -d /usr/local &&
       test -d /usr/local/include &&
       test -r /usr/local/include/rrd.h; then
        AC_MSG_RESULT([ok, found in /usr/local/include])
        INCS="${INCS} -I/usr/local/include"
        AC_DEFINE_UNQUOTED(HAVE_RRD_H, 1, [Show we found rrd.h and set INCS])
    else
        AC_MSG_RESULT(error)
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* ERROR:  1. We were unable to find the header rrd.h in the"
        echo "*            standard location."
        echo "*"
        echo "*     and 2. You did not specify an alternate location"
        echo "*            via --with-rrd-root"
        echo "*"
        echo "*     and 3. We also tested the following:"
        echo "*"
        echo "*                /usr/include"
        echo "*                /usr/local/include"
        echo "*"
        echo "*>>> ./configure continues, rrd will not be available."
        echo "*"
        echo "*???     1. Rerun ./configure with a corrected --with-rrd-root"
        echo "*???  or 2. Install rrd and rerun ./configure"
        echo "*"
        echo "*******************************************************************"
        echo
        ac_disable_rrd="yes"
    fi
    if test ".${ac_disable_rrd}" = ".yes"; then
        nop="yes"
    else
        AC_MSG_CHECKING([for rrd library])
        if test -d /usr &&
           test -d /usr/lib &&
           (test -r /usr/lib/librrd.so ||
            test -r /usr/lib/librrd.a); then
            AC_MSG_RESULT([ok, found in /usr/lib])
            RRDLIB="${RRDLIB} -L/usr/lib -lrrd"
            dnl>  /usr/lib should be automatically tested for as part of ld.so.conf...
            AC_DEFINE_UNQUOTED([HAVE_RRD], 1, [Enable RRD])
        elif test -d /usr &&
           test -d /usr/local &&
           test -d /usr/local/lib &&
           (test -r /usr/local/lib/librrd.so ||
            test -r /usr/local/lib/librrd.a); then
            AC_MSG_RESULT([ok, found in /usr/local/lib])
            RRDLIB="${RRDLIB} -L/usr/local/lib -lrrd"
            AC_DEFINE_UNQUOTED([HAVE_RRD], 1, [Enable RRD])
        else
            AC_MSG_RESULT(error)
            echo
            echo "*******************************************************************"
            echo "*"
            echo "* ERROR:  1. We were unable to compile a test program for"
            echo "*            rrd_create() against -lrrd."
            echo "*"
            echo "*     and 2. You did not specify an alternate location"
            echo "*            via --with-rrd-root"
            echo "*"
            echo "*     and 3. We were unable to find librrd.so or librrd.a"
            echo "*            via a manual search of"
            echo "*"
            echo "*                /usr/lib"
            echo "*                /usr/local/lib"
            echo "*"
            echo "*>>> ./configure continues, rrd will not be available."
            echo "*"
            echo "*???     1. Rerun ./configure with a corrected --with-rrd-root"
            echo "*???  or 2. Install rrd and rerun ./configure"
            echo "*"
            echo "*******************************************************************"
            echo
            ac_disable_rrd="yes"
        fi
    fi
else
    AC_MSG_RESULT([not found in standard location, testing further...])
    dnl> Can we find rrd.h and librrd where s/he told us?
 
    AC_MSG_CHECKING([for rrd header])
 
    RRD_ROOT=`(cd ${RRD_ROOT} && pwd)`
    if test -d ${RRD_ROOT} &&
       test -r ${RRD_ROOT}/rrd.h; then
        AC_MSG_RESULT([ok, rrd.h found in ${RRD_ROOT}])
        INCS="${INCS} -I${RRD_ROOT}"
        AC_DEFINE_UNQUOTED(HAVE_RRD_H, 1, [Show we found rrd.h and set INCS])
    elif test -d ${RRD_ROOT} &&
       test -d ${RRD_ROOT}/include &&
       test -r ${RRD_ROOT}/include/rrd.h; then
        AC_MSG_RESULT([ok, rrd.h found in ${RRD_ROOT}/include])
        INCS="${INCS} -I${RRD_ROOT}/include"
        AC_DEFINE_UNQUOTED(HAVE_RRD_H, 1, [Show we found rrd.h and set INCS])
    else
        AC_MSG_RESULT(error)
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* ERROR:  1. We were unable to find the header rrd.h in the"
        echo "*            standard location or the alternate location you"
        echo "*            specified by --with-rrd-root"
        echo "*"
        echo "*>>> ./configure continues, rrd will not be available."
        echo "*"
        echo "*???     1. Rerun ./configure with a corrected --with-rrd-root"
        echo "*???  or 2. Install rrd and rerun ./configure"
        echo "*"
        echo "*******************************************************************"
        echo
        ac_disable_rrd="yes"
    fi
 
    if test ".${ac_disable_rrd}" != ".yes"; then
        dnl> We use LIBS for the _CHECK_LIB, then back it out below, setting RRDLIB for
        dnl> the plugin, if we find it.
        oLIBS="${LIBS}"
        NTOP_APPEND_LIBS([${RRD_ROOT}/lib])
        AC_CHECK_LIB([rrd], [rrd_update], [
            RRDLIB="${RRDLIB} -L${RRD_ROOT}/lib -lrrd"
            AC_DEFINE_UNQUOTED([HAVE_RRD], 1, [Enable RRD])
        ], [
            echo
            echo "*******************************************************************"
            echo "*"
            echo "* ERROR:  1. We were unable to compile a test program for"
            echo "*            rrd_create() against -lrrd in the standard"
            echo "*            location nor in the alternate location you"
            echo "*            specified by --with-rrd-root"
            echo "*"
            echo "*>>> ./configure continues, rrd will not be available."
            echo "*"
            echo "*???     1. Rerun ./configure with a corrected --with-rrd-root"
            echo "*???  or 2. Install rrd and rerun ./configure"
            echo "*"
            echo "*******************************************************************"
            echo
            ac_disable_rrd="yes"
        ])
        LIBS="${oLIBS}"
    fi
fi

echo
echo "-------------------------------------------------------------------"
echo "-------------------------------------------------------------------"
echo "-------------------------------------------------------------------"

echo
echo "Miscelaneous settings..."
echo

echo "  Directories:"
echo "    Default prefix is     ${ac_default_prefix}"

CFG_DATAFILE_DIR=$datadir/ntop
CFG_DATAFILE_DIR=`(
    test "x$prefix" = xNONE && prefix=${ac_default_prefix}
    eval echo "$CFG_DATAFILE_DIR"
)`
AC_DEFINE_UNQUOTED(CFG_DATAFILE_DIR,"$CFG_DATAFILE_DIR", [Data file directory])
echo "    Data files are in     $CFG_DATAFILE_DIR"

CFG_CONFIGFILE_DIR=$sysconfdir/ntop
CFG_CONFIGFILE_DIR=`(
    test "x$prefix" = xNONE && prefix=${ac_default_prefix}
    eval echo "$CFG_CONFIGFILE_DIR"
)`
AC_DEFINE_UNQUOTED(CFG_CONFIGFILE_DIR,"$CFG_CONFIGFILE_DIR", [Configuration file directory])
echo "    Config files are in   $CFG_CONFIGFILE_DIR"

CFG_RUN_DIR=$localstatedir/ntop
CFG_RUN_DIR=`(
    test "x$prefix" = xNONE && prefix=${ac_default_prefix}
    eval echo "$CFG_RUN_DIR"
)`
AC_DEFINE_UNQUOTED(CFG_RUN_DIR,"$CFG_RUN_DIR", [Run files directory])
echo "    Run directory is      $CFG_RUN_DIR"

CFG_PLUGIN_DIR=$libdir/ntop/plugins
CFG_PLUGIN_DIR=`(
  test "x$prefix" = xNONE && prefix=${ac_default_prefix}
  test "x$exec_prefix" = xNONE && exec_prefix=${prefix}
  eval echo "$CFG_PLUGIN_DIR"
)`
AC_DEFINE_UNQUOTED(CFG_PLUGIN_DIR,"$CFG_PLUGIN_DIR", [Plugin installation directory])
echo "    Plugin files are in   $CFG_PLUGIN_DIR"

CFG_DBFILE_DIR=$localstatedir/ntop
CFG_DBFILE_DIR=`(
  test "x$prefix" = xNONE && prefix=${ac_default_prefix}
  eval echo "$CFG_DBFILE_DIR"
)`
AC_DEFINE_UNQUOTED(CFG_DBFILE_DIR,"$CFG_DBFILE_DIR", [Database file directory])
echo "    Database files are in $CFG_DBFILE_DIR"
echo

dnl>
dnl> GNU gcc backtrace?
dnl>
    AC_MSG_CHECKING([for gcc backtrace])
    if test ".${ac_cv_lib_c_backtrace}" = ".yes"; then
        AC_MSG_RESULT([found - automatic SIGSEGV backtrace enabled via -K])
        AC_DEFINE_UNQUOTED(HAVE_BACKTRACE, 1, [backtrace() is available])
    else
        AC_MSG_RESULT([not found])
    fi

dnl>
dnl> getopt_long?
dnl>
    AC_MSG_CHECKING([for gcc getopt_long])
    if test ".${ac_cv_lib_c_getopt_long}" = ".yes"; then
        AC_MSG_RESULT([found - long command line options are enabled])
        AC_DEFINE_UNQUOTED(HAVE_GETOPT_LONG, 1, [getopt_long() is available])
    else
        AC_MSG_RESULT([not found - long command line options are disabled])
    fi

dnl>
dnl> Test for facilitynames
dnl>
    if test ".${ac_cv_header_sys_syslog_h}" = ".yes" ||
       test ".${ac_cv_header_syslog_h}"     = ".yes" ; then
        AC_MSG_CHECKING([for facilitynames - define SYSLOG_NAMES option])
        AC_TRY_COMPILE([
            #include "confdefs.h"
            #include <stdarg.h>
            #include <stdio.h>
            #define SYSLOG_NAMES
            #if defined(HAVE_SYS_SYSLOG_H)
            #include <sys/syslog.h>
            #elif defined(HAVE_SYSLOG_H)
            #include <syslog.h>
            #endif],
            [void * x = (void*) &(facilitynames[0]);],
            AC_MSG_RESULT(available)
            AC_DEFINE_UNQUOTED(HAVE_FACILITYNAMES, 
                               1, 
                               [glibc syslog.h or sys/syslog.h with facilitynames[] option]),
            AC_MSG_RESULT(unavailable))
    fi

dnl>
dnl> Test ether_header has ea
dnl>
    AC_MSG_CHECKING([if ether_header uses ether_addr structs])
    AC_TRY_COMPILE([
#       include <sys/types.h>
#       if __STDC__
        /* osf3 has REALLY good prototyes */
        struct mbuf;
        struct rtentry;
#       endif
#       include <sys/socket.h>
#       include <net/if.h>
#       include <netinet/in.h>
#       include <netinet/if_ether.h>],
        [u_int i =
             sizeof(((struct ether_header *)0)->ether_dhost.ether_addr_octet)],
        [AC_MSG_RESULT(yes)
         AC_DEFINE_UNQUOTED(CFG_ETHER_HEADER_HAS_EA, 
                            1, 
                            [ether_header uses ether_addr structs])],
        [AC_MSG_RESULT(no)])

dnl>
dnl> check for ip6 address used by sFlow...
dnl>
    if test "${ac_disable_plugins}" != ".yes"; then
        AC_MSG_CHECKING([if in6_addr is defined for sFlowPlugin])
        AC_TRY_COMPILE([
#       include <sys/types.h>
#       include <netinet/in.h>
#       include <netinet/in_systm.h>
#       include <sys/socket.h>
#       include <netinet/ip.h>
            ],
            [struct in6_addr tmp;],
            [AC_MSG_RESULT(yes)
             AC_DEFINE_UNQUOTED(HAVE_IN6_ADDR, 
                                1, 
                                [For sFlowPlugin.c to define in6_addr for environments without it.])],
            [AC_MSG_RESULT(no)])
    fi

dnl>
dnl> Temporary
dnl>
    AC_DEFINE_UNQUOTED(RETSIGTYPE, void, [temporary definition])

dnl>
dnl> Finish up...
dnl>
if test ".${CCLD}" = "."; then
    CCLD=${CC}
fi

echo "-------------------------------------------------------------------"
echo "==================================================================="
echo "-------------------------------------------------------------------"
echo
echo "Creating files..."
echo
AC_SUBST(AS)
AC_SUBST(CCLD)
AC_SUBST(CFG_CONFIGFILE_DIR)
AC_SUBST(CFG_DATAFILE_DIR)
AC_SUBST(CFG_DBFILE_DIR)
AC_SUBST(DEFS)
AC_SUBST(DLLTOOL)
AC_SUBST(DYN_FLAGS)
AC_SUBST(EXEEXT)
AC_SUBST(INCS)
AC_SUBST(INTOP)
AC_SUBST(LIBCURSES)
AC_SUBST(LIBREADLINE)
AC_SUBST(LIBTERMCAP)
AC_SUBST(LIBTOOL_DEPS)
AC_SUBST(NTOP_VERSION_EXTRA)
AC_SUBST(OBJDUMP)
AC_SUBST(OBJEXT)
AC_SUBST(CFG_PLUGIN_DIR)
AC_SUBST(PLUGINS)
AC_SUBST(RRDLIB)
AC_SUBST(CFG_RUN_DIR)
AC_SUBST(SCRIPTVER)
AC_SUBST(SO_VERSION_PATCH)

AC_CONFIG_FILES([Makefile])

if test ".${ac_enable_intop}" = ".yes"; then
    AC_CONFIG_FILES([intop/Makefile])
fi

if test ".${ac_disable_plugins}" != ".yes"; then
    AC_CONFIG_FILES([plugins/Makefile])
fi

AC_OUTPUT

echo
echo "-------------------------------------------------------------------"
echo
echo "   Creating version.c..."
echo
/bin/rm -f version.c
echo $PACKAGE_VERSION $NTOP_VERSION_EXTRA  | sed -e 's/.*/char * version   = "&";/' > version.c
./config.guess | sed -e 's/.*/char * osName    = "&";/' >> version.c
echo "char * author    = \"Luca Deri <deri@ntop.org>\";" >> version.c
date +"%D %r" | sed -e 's/.*/char * buildDate = "&";/' >> version.c
echo $CONFIGURE_PARAMETERS | sed -e 's/.*/char * configure_parameters   = "&";/' >> version.c
echo ${host} | sed -e 's/.*/char * host_system_type   = "&";/' >> version.c
echo ${target} | sed -e 's/.*/char * target_system_type   = "&";/' >> version.c
echo ${CC} ${CFLAGS} ${DEFS} | sed -e 's/.*/char * compiler_cflags   = "&";/' >> version.c
echo ${INCS} | sed -e 's/.*/char * include_path    = "&";/' >> version.c
echo ${LDFLAGS} ${LIBS} | sed -e 's/.*/char * system_libs    = "&";/' >> version.c
echo ${prefix} | sed -e 's/.*/char * install_path   = "&";/' >> version.c
echo "/*i18n*/" >>version.c
echo ${LOCALEDIR} | sed -e 's/.*/char * locale_dir   = "&";/' >> version.c

echo
echo "-------------------------------------------------------------------"

dnl> MacOSX needs patched versions of some configure-related files

case "${host}" in
    *darwin* )
	echo "Welcome to OSX"
        cp packages/MacOSX/lt* .
	rm -f libtool
	ln -s  /usr/bin/glibtool libtool
        ;;
esac

echo "==================================================================="
echo "-------------------------------------------------------------------"
echo
echo "(optional) packages are in:"
echo
if test ".${PCAP_ROOT}" = "."; then
    echo "LBL pcap in       : standard system headers and libraries"
else
    echo "LBL pcap in       : ${PCAP_ROOT}"
fi
if test ".${GDBM_ROOT}" = "."; then
    echo "GNU gdbm in       : standard system headers and libraries"
else
    echo "GNU gdbm in       : ${GDBM_ROOT}"
fi
if test ".${ac_disable_openssl}" != ".yes"; then
    if test ".${OSSL_ROOT}" = "."; then
        echo "openSSL in        : standard system headers and libraries"
    else
        echo "openSSL in        : ${OSSL_ROOT}"
    fi
fi
if test ".${ac_disable_gdchart}" != ".yes"; then
    if test ".${GDCHART_ROOT}" = "."; then
        echo "GDChart in        : standard system headers and libraries"
    else
        echo "GDChart in        : ${GDCHART_ROOT}"
    fi
    if test ".${GD_ROOT}" = "."; then
        echo "  GD in           : standard system headers and libraries"
    else
        echo "  GD in           : ${GD_ROOT}"
    fi
    if test ".${LIBPNG_ROOT}" = "."; then
        echo "  libpng in       : standard system headers and libraries"
    else
        echo "  libpng in       : ${LIBPNG_ROOT}"
    fi
fi
if test ".${ZLIB_ROOT}" = "."; then
    echo "zlib in           : standard system headers and libraries"
else
    echo "zlib in           : ${ZLIB_ROOT}"
fi
echo
echo "This is your $PACKAGE $VERSION configuration:"
echo
echo "Host System Type  : ${host}"
if test ".${build_alias}" != .; then
    echo "                        Note: --build=${build_alias} specified"
fi
echo "Compiler (cflags) : ${CC} ${CFLAGS}"
echo "Defines           :     ${DEFS}"
echo "Loader (ldflags)  : ${LDFLAGS}"
echo "Include path      : ${INCS}"
echo "System Libs       : ${LIBS}"
echo "MultiThread mode  : ${multithread_mode}"
echo "Install path      : ${prefix}"
echo 
echo "*******************************************************************"
echo "*"
echo "* NOTE: ./configure is now complete!"
echo "*"
echo "*       All of the obviously FATAL errors would cause you to"
echo "*       abort before this point, so while you SHOULD scroll"
echo "*       back and check for error/warning/note messages,"
echo "*       you probably will not..."
echo "*"
echo "++"
echo "++    If you like ntop, please do not forget to support its"
echo "++    development. See SUPPORT_NTOP.txt for more information."
echo "++"
echo "++              Thanks for supporting ntop!"
echo "++"
echo "*"
echo "* NEXT STEP(S):"

case "${target}:${CC}" in
    *-*-freebsd5*:*gcc* )
        echo "*"
        echo "*FreeBSD5: You may encounter a problem building ntop for this OS,"
        echo "*FreeBSD5: where the following messages are repeated many times:"
        echo "*FreeBSD5: "
        echo "*FreeBSD5:    expr: illegal option -- l"
        echo "*FreeBSD5:    usage: expr [-e] expression"
        echo "*FreeBSD5: "
        echo "*FreeBSD5: To avoid this, according to the note on man expr," 
        echo "*FreeBSD5: \"Compatibility with previous implementations\","
        echo "*FreeBSD5: set the flag EXPR_COMPAT before typing make."
        echo "*FreeBSD5: "
        echo "*FreeBSD5: (Under bash, \$ export EXPR_COMPAT=Y will suffice.)"
      ;;
esac

echo "*"
echo "*    Building ntop requires GNU Make, so to build ntop, type"
echo "*    'make' (or on *BSD and Solaris systems, 'gmake')"
echo "*"
echo "*******************************************************************"
echo

exit 0
