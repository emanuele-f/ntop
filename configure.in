dnl> TODOs

dnl>   should use STDC_HEADERS instead of __STDC__
dnl>   Cleanup Autoconf2 (obsolete Autoconf1 macros still in use)
dnl>   Solaris 8 -- libgcc_s -- need test

dnl> -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
dnl>
dnl> Copyright (c) 1998 - 2004 Luca Deri <deri@ntop.org>
dnl>                           Rocco Carbone <rocco@ntop.org>
dnl>                       and Burton M. Strauss III <burton@ntopsupport.com>
dnl>
dnl> Written Oct2002 by Burton M. Strauss III <burton@ntopsupport.com>
dnl>     (Loosely based on the earlier ntop version)
dnl>
dnl> -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
dnl>
dnl> This program is free software; you can redistribute it and/or modify
dnl> it under the terms of the GNU General Public License as published by
dnl> the Free Software Foundation; either version 2 of the License, or
dnl> (at your option) any later version.
dnl>
dnl> This program is distributed in the hope that it will be useful,
dnl> but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl> MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl> GNU General Public License for more details.
dnl>
dnl> You should have received a copy of the GNU General Public License
dnl> along with this program; if not, write to the Free Software
dnl> Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
dnl>

dnl>
dnl> -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
dnl> this file is processed via 'autoconf' to produce the 'configure' script
dnl> -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
dnl>

dnl>
dnl> Initialization lines.
dnl>   Note that the AC_INIT must, simply MUST be the first line.  
dnl>   Anything before it is ignored in autoconf 2.5x (and beyond?)
dnl>
dnl>   Edit the version # in the AC_INIT line to roll the version.
dnl>   Edit NTOP_VERSION_EXTRA to put something extra (e.g. SourceForge rpm version"
dnl>       into the stamp.
dnl>
AC_INIT([ntop],[3.0.053])

dnl> The prereq is really 2.53, i.e. automake 1.6, but Darwin uses 2.52...
AC_PREREQ([2.52])

SCRIPTVER="v3.0.050-002-2004-03-21"

dnl>
dnl> generate the config header
dnl>
umask 002
AM_CONFIG_HEADER(config.h)

HAS_ERROR=
HAS_WARNING=

NTOP_VERSION_EXTRA=""

echo
echo "Welcome to $PACKAGE_NAME, Version $PACKAGE_VERSION $NTOP_VERSION_EXTRA"
echo "  copyright (c) 1998-2004 Luca Deri <deri@ntop.org>"
echo
echo          "Configuration script version $SCRIPTVER"
echo
echo "************************************************************************"
echo "*                                                                      *"
echo "* NOTICE:  I know you're used to ignoring output from ./configure      *"
echo "*                                                                      *"
echo "*          ntop has a lot of complexity and interdependences.          *"
echo "*                                                                      *"
echo "*          Please, please AT LEAST read the stuff in these boxes!      *"
echo "*                                                                      *"
echo "*>>> The ACTION taken by ./configure is shown prefixed with '>>>'      *"
echo "*                                                                      *"
echo "*    If that ACTION is unacceptable,                                   *"
echo "*??? Steps to take to fix the problem are shown, prefixed with '???'   *"
echo "*                                                                      *"
echo "************************************************************************"
echo

if test ".${NTOPAUTOREBUILD}" = "."; then
    echo "NOTE: To developers:"
    echo
    echo "       If you have the Gnu auto* tools (automake, autoconf and libtool)"
    echo "       installed, you may wish to enable the automatic regeneration of"
    echo "       the configure scripts.  Do this before running ./configure:"
    echo
    echo "$ export NTOPAUTOREBUILD=yes"
    echo
fi
if test ".${NTOPCONFIGDEBUG}" = "."; then
    echo "NOTE:"
    echo
    echo "       To enable additional, debugging messages during the ./configure"
    echo "       execution, do this before running ./configure:"
    echo
    echo "$ export NTOPCONFIGDEBUG=yes"
    echo
fi

CONFIGURE_PARAMETERS=$*
echo
echo "Configuring ${PACKAGE_NAME} according to your request(s):"
echo "   ./configure ${CONFIGURE_PARAMETERS}"
echo

dnl> This has to be here due to some odd dependency...
AC_CANONICAL_TARGET

dnl> Basic sanity check ... does ntop.c exist?
AC_CONFIG_SRCDIR([ntop.c])

dnl> force configure to use current directory
AC_CONFIG_AUX_DIR(.)

AM_INIT_AUTOMAKE()

NTOPCONFIGDEBUG_SETTINGS([init automake])

dnl> make NTOPDIR the default for the installation
AC_PREFIX_DEFAULT(${NTOPDIR:-/usr/local})

# Set constants and defaults
MYRRD=`pwd`/myrrd
SO_VERSION_PATCH=
MAKE_SHARED_LIBRARY_PARM="-bundle -flat_namespace -undefined suppress"

AS=
CCLD=
DEFS="-DHAVE_CONFIG_H"
DLLTOOL=
DYN_FLAGS=
EXEEXT=
INCS=
LIBS=
OBJDUMP=
OBJEXT=o

NTOPCONFIGDEBUG_SETTINGS([ntop defaults])

# Checks for programs.

AC_PROG_AWK
if test "x${AWK}" = "x"; then
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* WARNING:    The test for AWK indicates you do not have any"
    echo "*             version of Awk installed."
    echo "*"
    echo "*             ntop requires gawk or at least mawk."
    echo "*"
    echo "*>>> Aborting"
    echo "*"
    echo "*???     1. Install gawk"
    echo "*"
    echo "*******************************************************************"
    echo
    exit 0
elif test "x${AWK}" = "xawk" ||
   test "x${AWK}" = "xnawk"; then
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* WARNING:    The test for AWK indicates you have the original awk"
    echo "*             or nawk installed."
    echo "*"
    echo "*             ntop requires gawk or at least mawk."
    echo "*"
    echo "*>>> Continuing, but some options (e.g. --enable-showoses) "
    echo "*                may not work."
    echo "*"
    echo "*???     1. Install gawk"
    echo "*"
    echo "*******************************************************************"
    echo
    HAS_WARNING="yes"
fi

AC_PROG_CPP
AC_PROG_CC
dnl> AC_PROG_CXX no c++ code (yet?)
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB

NTOPCONFIGDEBUG_SETTINGS([After ac stuff])

dnl> These blocks of code check to see if the various gnu auto* tools are installed.

dnl> If a tool is NOT installed, the constant used to automatically invoke them
dnl> in Makefile is changed to just echo a blank line.

dnl> This bypasses the tendency of the make process to recreate these scripts
dnl> which REQUIRES the autotools, if versions or timestamps, etc. are different
dnl> in any way.

dnl> It is not elegant, but it seems to work - ntop no longer requires normal users
dnl> to have the auto* tools installed.  If you are doing development work on the
dnl> configure or Makefile stuff, WATCH OUT!

dnl> libtool is different, we MUST have it installed... but, if the user
dnl> doesn't have it installed, this will create libtool in the ntop directory
dnl> from ltmain.sh and ltconfig (there's already a libtool file in the
dnl> distribution directory).  So, while libtool is absolutely required,
dnl> there's not much point in testing too hard for it.

dnl> Note that to use our libtool, we have to add pwd to the path...
dnl> TODO last vs first in path????
export PATH=${PATH}:`pwd`
if test ".${NTOPCONFIGDEBUG}" = ".yes"; then
    echo "DEBUG: PATH is now ${PATH}"
fi

AC_MSG_CHECKING([for libtool])
AC_MSG_RESULT([])

dnl> Fix to: library used but `LIBTOOL' not defined in `configure.in'
AC_PROG_LIBTOOL

dnl> Apple, just to be difficult, calls the gnu version glibtool...
case "${target}:${CC}" in
    *-*-darwin*:* )
        AC_CHECK_TOOL(LIBTOOL, glibtool)
        ;;
    * )
        AC_CHECK_TOOL(LIBTOOL, libtool)
        ;;
esac

dnl> Test before we use it, below
AC_ARG_ENABLE(iknowbetter,
              [  --enable-iknowbetter        Override WILLFAIL],
              ac_willfailoverride="yes",
              ac_willfailoverride="no")

echo -n "  Checking libtool version..."
case "${target}:${CC}" in
    *-*-darwin*:* )
    libtoolversion=`/usr/bin/glibtool --version | grep libtool | ${ac_cv_prog_AWK} '{ print $4 }'`
    ;;
    * )
    libtoolversion=`libtool --version | grep libtool | ${ac_cv_prog_AWK} '{ print $4 }'`
    ;;
esac

echo "${libtoolversion}"
case "${libtoolversion}" in
    *1\.[[0-2]]*)
        echo "*******************************************************************"
        echo "*"
        echo "*ERROR: ntop requires libtool version 1.4 or newer..."
        echo "*"
        echo "*  You are executing ${libtoolversion}"
        echo "*"
        echo "*>>>   Unable to proceed with your request, aborting ./configure!"
        echo "*"
        NTOP_SUGGESTION([libtool], [1.4.3], [143])
        echo "*******************************************************************"
        exit 1
        ;;
    *1\.3\.[[45]]\-freebsd\-ports*)
        echo "* FreeBSD ports 1.3.4 seems to work, so we will let it slide..."
        echo "*"
        echo "* Fasten your seat belt and good luck!  If you are injured, the"
        echo "* development team will disavow any knowledge of your intentions."
        echo "*"
        echo "*******************************************************************"
        ;;
    *1\.3*)
        echo "*******************************************************************"
        echo "*"
        echo "*ERROR: ntop requires libtool version 1.4 or newer..."
        echo "*"
        echo "*  You are executing ${libtoolversion}"
        echo "*"
        if test "x${ac_willfailoverride}" != "xyes"; then
            echo "*>>>   Unable to proceed with your request, aborting ./configure!"
            echo "*"
            echo "*  There have been SOME reports of success, so you could TRY"
            echo "*  --enable-iknowbetter.  I don't recommend it, however."
            echo "*"
            NTOP_SUGGESTION([libtool], [1.4.3], [143])
            echo "*******************************************************************"
            exit 1
        else
            echo "* --enable-iknowbetter is set, so we will attempt to continue."
            echo "*"
            echo "* Fasten your seat belt and good luck!  If you are injured, the"
            echo "* development team will disavow any knowledge of your intentions."
            echo "*"
            echo "*******************************************************************"
        fi
        ;;
esac

dnl> Note, originally set by _INIT_AUTOMAKE - which just points @ missing.
dnl> Let's try for a better value, if available...
AUTOHEADERsave="${AUTOHEADER}"
AUTOHEADER=
AC_CHECK_TOOL(AUTOHEADER, autoheader)

if test "x${ac_cv_prog_ac_ct_AUTOHEADER}" = "x"; then
 AUTOHEADER="${AUTOHEADERsave}"
 mv Makefile.in Makefile.in.tmp
 cat Makefile.in.tmp | sed -e "s|@AUTOHEADER@|${SHELL} `pwd`/missing --run echo|" > Makefile.in
 rm -f Makefile.in.tmp
 mv plugins/Makefile.in plugins/Makefile.in.tmp
 cat plugins/Makefile.in.tmp | sed -e "s|@AUTOHEADER@|${SHELL} `pwd`/missing --run echo|" > plugins/Makefile.in
 rm -f plugins/Makefile.in.tmp
dnl> mv plugins/pep/Makefile.in plugins/pep/Makefile.in.tmp
dnl> cat plugins/pep/Makefile.in.tmp | sed -e "s|@AUTOHEADER@|${SHELL} `pwd`/missing --run echo|" > plugins/pep/Makefile.in
dnl> rm -f plugins/pep/Makefile.in.tmp
fi
AUTOHEADERsave=

ACLOCALsave="${ACLOCAL}"
ACLOCAL=
AC_CHECK_TOOL(ACLOCAL, aclocal)

if test "x${ac_cv_prog_ac_ct_ACLOCAL}" = "x"; then
 ACLOCAL="${ACLOCALsave}"
 mv Makefile.in Makefile.in.tmp
 cat Makefile.in.tmp | sed -e "s|@ACLOCAL@|${SHELL} `pwd`/missing --run echo|" > Makefile.in
 rm -f Makefile.in.tmp
 mv plugins/Makefile.in plugins/Makefile.in.tmp
 cat plugins/Makefile.in.tmp | sed -e "s|@ACLOCAL@|${SHELL} `pwd`/missing --run echo|" > plugins/Makefile.in
 rm -f plugins/Makefile.in.tmp
dnl> mv plugins/pep/Makefile.in plugins/pep/Makefile.in.tmp
dnl> cat plugins/pep/Makefile.in.tmp | sed -e "s|@ACLOCAL@|${SHELL} `pwd`/missing --run echo|" > plugins/pep/Makefile.in
dnl> rm -f plugins/pep/Makefile.in.tmp
 ACLOCAL="${SHELL} `pwd`/missing --run echo"
fi
ACLOCALsave=

AUTOMAKEsave="${AUTOMAKE}"
AUTOMAKE=
dnl> Tell the script (Mandrake?, Gentoo, et al) that we want 1.6...
WANT_AUTOMAKE=1.6
AC_CHECK_TOOL(AUTOMAKE, automake)

if test "x${ac_cv_prog_ac_ct_AUTOMAKE}" = "x"; then
    AUTOMAKE="${AUTOMAKEsave}"
    mv Makefile.in Makefile.in.tmp
    cat Makefile.in.tmp | sed -e "s|@AUTOMAKE@|${SHELL} `pwd`/missing --run echo|" > Makefile.in
    rm -f Makefile.in.tmp
    mv plugins/Makefile.in plugins/Makefile.in.tmp
    cat plugins/Makefile.in.tmp | sed -e "s|@AUTOMAKE@|${SHELL} `pwd`/missing --run echo|" > plugins/Makefile.in
    rm -f plugins/Makefile.in.tmp
dnl>    mv plugins/pep/Makefile.in plugins/pep/Makefile.in.tmp
dnl>    cat plugins/pep/Makefile.in.tmp | sed -e "s|@AUTOHEADER@|${SHELL} `pwd`/missing --run echo|" > plugins/pep/Makefile.in
dnl>    rm -f plugins/pep/Makefile.in.tmp
fi
AUTOMAKEsave=

mv plugins/Makefile.in plugins/Makefile.in.tmp
cat plugins/Makefile.in.tmp | sed -e 's|\$(AUTOMAKE)|\$(ACLOCAL); \$(AUTOMAKE)|' > plugins/Makefile.in
rm -f plugins/Makefile.in.tmp

AUTOCONFsave="${AUTOCONF}"
AUTOCONF=
AC_CHECK_TOOL(AUTOCONF, autoconf)

if test "x${ac_cv_prog_ac_ct_AUTOCONF}" = "x"; then
    AUTOCONF="${AUTOCONFsave}"
    mv Makefile.in Makefile.in.tmp
    cat Makefile.in.tmp | sed -e "s|@AUTOCONF@|${SHELL} `pwd`/missing --run echo|" > Makefile.in
    rm -f Makefile.in.tmp
    mv plugins/Makefile.in plugins/Makefile.in.tmp
    cat plugins/Makefile.in.tmp | sed -e "s|@AUTOCONF@|${SHELL} `pwd`/missing --run echo|" > plugins/Makefile.in
    rm -f plugins/Makefile.in.tmp
dnl>    mv plugins/pep/Makefile.in plugins/pep/Makefile.in.tmp
dnl>    cat plugins/pep/Makefile.in.tmp | sed -e "s|@AUTOHEADER@|${SHELL} `pwd`/missing --run echo|" > plugins/pep/Makefile.in
dnl>    rm -f plugins/pep/Makefile.in.tmp
fi
AUTOCONFsave=

if test ".${NTOPAUTOREBUILD}" = ".yes"; then

  echo
  echo "*******************************************************************"
  echo "*"
  echo "* Testing - AT YOUR REQUEST - to see if we should rebuild the"
  echo "* generated files."
  echo "*"

  dnl> If we don't have automake or autoconf, fake the result as being 'equal'...
  if test "x${ac_cv_prog_ac_ct_AUTOMAKE}" = "x" -o "x${ac_cv_prog_ac_ct_AUTOCONF}" = "x"; then

    echo "*******************************************************************"
    echo "*"
    echo "* You MUST have the gnu Auto* tools installed on this host."
    echo "*"
    echo "* automake and/or autoconf are NOT installed.  Skipping these tests."
    echo "*"
    echo "*******************************************************************"
    echo

  else

    echo "*"
    echo "*******************************************************************"
    echo

    dnl> Check versions of automake: it must be v1.6 or higher!
    echo -n "  Checking automake version..."

    automakeversion=`automake --version | grep ^automake | ${ac_cv_prog_AWK} '{ print $4 }'`
    echo "${automakeversion}"

    case "${automakeversion}" in
      *1\.[[0-5]]*)
        echo "******************************************************************"
        echo "*"
        echo "*ERROR: ntop requires automake version 1.6 or newer..."
        echo "*"
        echo "*  You are executing ${automakeversion}"
        echo "*"
        echo "*>>>   Unable to proceed with your request, aborting ./configure!"
        echo "*"
        NTOP_SUGGESTION([automake], [1.6.3], [163])
        echo "*******************************************************************"
        exit 1
        ;;
    esac

    dnl> Check versions of autoconf: it must be v2.50 or higher!
    echo -n "  Checking autoconf version..."

    autoconfversion=`autoconf --version | grep ^autoconf | ${ac_cv_prog_AWK} '{ print $4 }'`
    echo "${autoconfversion}"

    case "${autoconfversion}" in
      *2\.[[0-4]]*)
        echo "*******************************************************************"
        echo ""
        echo "*ERROR: ntop requires autoconf version 2.50 or newer..."
        echo "*"
        echo "*  You are executing ${autoconfversion}"
        echo "*"
        echo "*>>>   Unable to proceed with your request, aborting ./configure!"
        echo "*"
        NTOP_SUGGESTION([autoconf], [2,57], [257])
        echo "*******************************************************************"
        exit 1
      ;;
    esac

    dnl> Now check for a match with the scripts...
    dnl>
    dnl>      We know that all of the 1.6.x [1..3] and 1.7.x ersions of automake work ok
    dnl>      and the 2.5x [1..7] of autoconf work ok too.
    dnl>      So we could compress them to save a few recreations, but that's
    dnl>      then got to be maintained.  So exact match or recreate...
    dnl>
    if test -f /tmp/autotoolversions; then
      rm -f /tmp/autotoolversions
    fi
    dnl> Make sure we have a file to compare against...
    touch autotoolversions

    automake --version | \
    head -n 1 | \
    ${ac_cv_prog_AWK} '{ gsub(/\)/, "", $3); print "     " $3 " " $4 }'  >/tmp/autotoolversions

    autoconf --version | \
    head -n 1 | \
    ${ac_cv_prog_AWK} '{ gsub(/\)/, "", $3); print "     " $3 " " $4 }' >>/tmp/autotoolversions

    case "${target}:${CC}" in
      *-*-darwin*:* )
        /usr/bin/glibtool --version | \
        head -n 1  | \
        ${ac_cv_prog_AWK} '{ gsub(/\)/, "", $3); print "     " $3 " " $4 }' >>/tmp/autotoolversions
      ;;
      * )
        libtool --version | \
        head -n 1  | \
        ${ac_cv_prog_AWK} '{ gsub(/\)/, "", $3); print "     " $3 " " $4 }' >>/tmp/autotoolversions
      ;;
    esac

    diff autotoolversions /tmp/autotoolversions >/dev/null 2>/dev/null
    rc=$?

    if test ".${rc}" = ".1"; then
      echo
      echo "*******************************************************************"
      echo "*"
      echo "* WARNING: Auto* tools installed on this host differ from the ones"
      echo "*          that the ntop distribution uses:"
      echo "*"
      echo "* This host:"
      cat /tmp/autotoolversions
      echo "*"
      echo "* ntop distribution:"
      cat autotoolversions
      echo "*"
      echo "*>>> Version conflicts may cause configure/compile/link problems."
      echo "*"
      echo "*>>> We are going to:"
      echo "*>>>     1. delete the existing generated files"
      echo "*>>>     2. use the auto* tools to recreate them"
      echo "*                (if you do not have automake and autoconf installed,"
      echo "*                 this will fail)"
      echo "*                (if you do not have libtool installed, it will"
      echo "*                 not give an error message, but will fail later)"
      echo "*>>>     3. tell you to rerun ./configure"
      echo "*"
      echo "*    Please, tell the ntop-dev mailing list if there are problems..."
      echo "*"
      echo "*******************************************************************"
      echo
      echo "1. delete the existing generated files:"
      for i in acinclude.m4 \
               aclocal.m4 \
               config.h.in \
               Makefile.in \
               configure \
               Makefile; do
          if test -f $i; then
          echo "     .... $i"
          rm -f $i
          fi
      done
      echo "    done!"
      echo
      echo "2. use the auto* tools to recreate them:"
      echo "    .... cat acinclude.m4.ntop libtool.m4.in > acinclude.m4"
      cat acinclude.m4.ntop libtool.m4.in > acinclude.m4
      rc=$?
      if test ".${rc}" != ".0"; then
          echo
          echo "*******************************************************************"
          echo "*"
          echo "* ERROR: Unable to run cat acinclude.m4.ntop libtool.m4.in > acinclude.m4"
          echo "*"
          echo "*    We are going to give up."
          echo "*"
          echo "*>>> Please correct the problem and rerun"
          echo "*"
          echo "*******************************************************************"
          echo
          if test -f /tmp/autotoolversions; then
              rm -f /tmp/autotoolversions
          fi
          exit 1
      fi
      for i in aclocal \
               autoheader \
               "automake --gnu --copy --add-missing" \
               autoconf; do
          echo "    .... $i"
          $i
          rc=$?
          if test ".${rc}" != ".0"; then
          echo
          echo "*******************************************************************"
          echo "*"
          echo "* ERROR: Unable to run $i"
          echo "*"
          echo "*    We are going to give up."
          echo "*"
          echo "*>>> Please correct the problem with the auto* tools and rerun"
          echo "*"
          echo "*******************************************************************"
          echo
          if test -f /tmp/autotoolversions; then
              rm -f /tmp/autotoolversions
          fi
          exit 1
          fi
      done

      cp -f /tmp/autotoolversions autotoolversions

      if test -f /tmp/autotoolversions; then
          rm -f tmp/autotoolversions
      fi

      echo
      echo "*******************************************************************"
      echo "*                                                                 *"
      echo "*   Now, rerun ./configure                                        *"
      echo "*                                                                 *"
      echo "*******************************************************************"
      echo
      exit 1

    else

      if test -f /tmp/autotoolversions; then
          rm -f /tmp/autotoolversions
      fi

      echo "auto* tools are OK, continuing with ./configure"

    fi
  fi
fi

dnl> autoheader stuff...just ignore
AH_TEMPLATE([HAVE_INT16_T],   [Define for int16 typedef])
AH_TEMPLATE([HAVE_INT32_T],   [Define for int32 typedef])
AH_TEMPLATE([HAVE_INT64_T],   [Define for int64 typedef])
AH_TEMPLATE([HAVE_INT8_T],    [Define for int8 typedef])
AH_TEMPLATE([HAVE_UINT64_T],  [Define for unsigned int 64 typedef])
AH_TEMPLATE([HAVE_U_INT16_T], [Define for unsigned int 16 typedef])
AH_TEMPLATE([HAVE_U_INT32_T], [Define for unsigned int 32 typedef])
AH_TEMPLATE([HAVE_U_INT64_T], [Define for unsigned int 64 typedef])
AH_TEMPLATE([HAVE_U_INT8_T],  [Define for unsigned int 8 typedef])
AH_TEMPLATE([HAVE_LIBWRAP],   [Define for tcp wrappers (-lwrap)])
dnl> end autoheader stuff

AC_ARG_ENABLE(void,
              [  +--ntop-specific:------------------------------------------------------------+])
AC_ARG_WITH(void,
              [  +--external-packages:--------------------------------------------------------+])

AC_ARG_ENABLE(mt,
              [  --disable-mt                disable multithread support [[default=enabled]]],
              ac_disable_multithread="yes",
              ac_disable_multithread="no")

AC_ARG_WITH(ssl,
              [  --without-ssl               disable HTPPS support [[default=enabled]]],
              ac_disable_openssl="yes",
              ac_disable_openssl="no")

AC_ARG_WITH(zlib,
              [  --without-zlib              disable zlib [[default=enabled]]],
              ac_disable_zlib="yes",
              ac_disable_zlib="no")

AC_ARG_ENABLE(sslv3,
              [  --enable-sslv3              enable ssl v3 support [[default=disabled]]],
              ac_enable_sslv3="yes",
              ac_enable_sslv3="no")

AC_ARG_ENABLE(sslwatchdog,
              [  --enable-sslwatchdog        enable Watchdog for ssl hangups [[default=disabled]]],
              ac_enable_sslwatchdog="yes",
              ac_enable_sslwatchdog="no")

AC_ARG_WITH(tcpwrap,
              [  --with-tcpwrap              enable use of TCP Wrapper [[default=disabled]]],
              ac_enable_tcpwrap="yes",
              ac_enable_tcpwrap="no")

AC_ARG_ENABLE(plugins,
              [  --disable-plugins           disable compilation of plugins [[default=enabled]]],
              ac_disable_plugins="yes",
              ac_disable_plugins="no")

AC_ARG_ENABLE(  static-plugins,
              [  --enable-static-plugins     Enable static linked plugins [sntop, default=dynamic]]],
              ac_enable_static_plugins="yes",
	      ac_enable_static_plugins="no")

AC_ARG_ENABLE(ignoresigpipe,
              [  --enable-ignoresigpipe      Ignore SIGPIPE errors [[default=do not ignore]]],
              ac_enable_ignoresigpipe="yes",
              ac_enable_ignoresigpipe="no")

AC_ARG_ENABLE(snmp,
              [  --disable-snmp              Disable SNMP support [[default=enabled]]],
              ac_disable_snmp="yes",
              ac_disable_snmp="no")

AC_ARG_ENABLE(i18n,
              [  --enable-i18n               Enable (limited) internationalization [[default=disabled]]],
              ac_enable_i18n="yes",
              ac_enable_i18n="no")

AC_ARG_ENABLE(ipv6,
              [  --disable-ipv6              use IPv6 [[default=enabled]]],
	      ac_disable_ipv6="yes",
	      ac_disable_ipv6="no")        

dnl>
dnl> Define the "WITH"s for package root directories ... deal with these later...
dnl>
AC_ARG_WITH(void,
              [  +-External-source-locations:-------------------------------------------------+])

AC_ARG_WITH(  pcap-root,
              [  --with-pcap-root=DIR        LBNL pcap located in DIR],
              PCAP_DIRECTORY="$withval",
              PCAP_DIRECTORY=)
AC_ARG_WITH(  pcap-lib,
              [  --with-pcap-lib=DIR          or libpcap located in DIR],
              PCAP_LIB="$withval",
              PCAP_LIB=)
AC_ARG_WITH(  pcap-include,
              [  --with-pcap-include=DIR      or pcap.h located in DIR],
              PCAP_INCLUDE="$withval",
              PCAP_INCLUDE=)

AC_ARG_WITH(  gdbm-root,
              [  --with-gdbm-root=DIR        gdbm located in DIR],
              GDBM_DIRECTORY="$withval",
              GDBM_DIRECTORY=)
AC_ARG_WITH(  gdbm-lib,
              [  --with-gdbm-lib=DIR          or libgdbm located in DIR],
              GDBM_LIB="$withval",
              GDBM_LIB=)
AC_ARG_WITH(  gdbm-include,
              [  --with-gdbm-include=DIR      or gdbm.h located in DIR],
              GDBM_INCLUDE="$withval",
              GDBM_INCLUDE=)

AC_ARG_WITH(  zlib-root,
              [  --with-zlib-root=DIR        zlib located in DIR],
              ZLIB_DIRECTORY="$withval",
              ZLIB_DIRECTORY=)
AC_ARG_WITH(  zlib-lib,
              [  --with-zlib-lib=DIR          or libz located in DIR],
              ZLIB_LIB="$withval",
              ZLIB_LIB=)
AC_ARG_WITH(  zlib-include,
              [  --with-zlib-include=DIR      or zlib.h located in DIR],
              ZLIB_INCLUDE="$withval",
              ZLIB_INCLUDE=)

AC_ARG_WITH(  gd-root,
              [  --with-gd-root=DIR          gd located in DIR],
              GD_DIRECTORY="$withval",
              GD_DIRECTORY=)
AC_ARG_WITH(  gd-lib,
              [  --with-gd-lib=DIR            or libgd located in DIR],
              GD_LIB="$withval",
              GD_LIB=)
AC_ARG_WITH(  gd-include,
              [  --with-gd-include=DIR        or gd.h located in DIR],
              GD_INCLUDE="$withval",
              GD_INCLUDE=)

AC_ARG_WITH(  libpng-root,
              [  --with-libpng-root=DIR      libpng located in DIR],
              LIBPNG_DIRECTORY="$withval",
              LIBPNG_DIRECTORY=)
AC_ARG_WITH(  libpng-lib,
              [  --with-libpng-lib=DIR        or libpng located in DIR],
              LIBPNG_LIB="$withval",
              LIBPNG_LIB=)
AC_ARG_WITH(  libpng-include,
              [  --with-libpng-include=DIR    or png.h located in DIR],
              LIBPNG_INCLUDE="$withval",
              LIBPNG_INCLUDE=)

AC_ARG_WITH(  ossl-root,
              [  --with-ossl-root=DIR        openSSL located in DIR],
              OSSL_DIRECTORY="$withval",
              OSSL_DIRECTORY=)
AC_ARG_WITH(  ossl-lib,
              [  --with-ossl-lib=DIR          or libssl located in DIR],
              OSSL_LIB="$withval",
              OSSL_LIB=)
AC_ARG_WITH(  ossl-include,
              [  --with-ossl-include=DIR      or ssl.h located in DIR],
              OSSL_INCLUDE="$withval",
              OSSL_INCLUDE=)

AC_ARG_WITH(  localedir,
              [  --with-localedir=DIR        LOCALE files located in DIR (i18n)],
              LOCALEDIR="$withval",
              LOCALEDIR=)

AC_ARG_ENABLE(showoses,
              [  --enable-showoses           display OS Support information and exit.],
              [echo
               echo  "Showing OS support information... one second"
               echo
               if test ".${ac_cv_prog_AWK}" = "."; then
                   echo "  Sorry, unable to honor your request - no awk appears to be available"
                   echo
                   exit 1
               fi
               if test ! -r configure.in; then
                   echo "  Sorry, unable to find the configure.in script in this directory."
                   exit 1
               fi
               if test ! -r utils/showoses.awk; then
                   echo "  Sorry, unable to find the showoses.awk script in the utils/ directory."
                   exit 1
               fi
               ${ac_cv_prog_AWK} -f utils/showoses.awk configure.in
               echo
               exit 0
])

AC_ARG_ENABLE(void,
              [  +----------------------------------------------------------------------------+])
AC_ARG_WITH(void,
              [  +----------------------------------------------------------------------------+])


AC_MSG_CHECKING([for aclocal.m4])
AC_CHECK_FILE(aclocal.m4, , [
    echo ""
    echo "Invoking aclocal to create aclocal.m4..."
    $ACLOCAL
    echo ""
])
AC_CHECK_FILE(depcomp, , [
    echo ""
    echo "depcomp missing... will install it in this ntop directory."
    echo "  Invoking automake to copy depcomp..."
    $AUTOMAKE --gnu --copy --add-missing
    echo ""
])

dnl> Handle the root -> lib/include settings
NTOP_SET_LIBINC(PCAP)
NTOP_SET_LIBINC(GDBM)
if test ".${ac_disable_zlib}" != ".yes"; then
    NTOP_SET_LIBINC(ZLIB)
fi
NTOP_SET_LIBINC(GD)
NTOP_SET_LIBINC(LIBPNG)
if test ".${ac_disable_openssl}" != ".yes"; then
    NTOP_SET_LIBINC(OSSL)
fi



dnl> From here on out, we only use the _INCLUDE and _LIB except for locale and glibconfig

NTOPCONFIGDEBUG_SETTINGS([After set libinc])

dnl>
dnl> Yes, we want to minimize the amount of work before we tell
dnl> the user we can't compile for this host, but this has to
dnl> to preceed the OS stuff so $CC is set.
dnl>

echo
echo "Checking C compiler program and features..."
echo 
AM_PROG_CC_STDC
if test ".${ac_cv_prog_cc_stdc}" = ".no"; then
    echo 
    echo "*******************************************************************"
    echo "*"
    echo "* WARNING: Attempting to configure for non ANSI standard C."
    echo "*"
    echo "*>>> This is unsupported."
    echo "*>>> It will probably fail."
    echo "*"
    echo "*    You are welcome to try - but please, keep the ntop-dev"
    echo "*    mailing list updated with your successes or failures..."
    echo "*"
    echo "*******************************************************************"
    echo
    HAS_WARNING="yes"
fi

NTOPCONFIGDEBUG_SETTINGS([After cc stdc test])

echo
echo "Checking for support status of ${target}, ${CC}..."
echo 
dnl>
dnl> How does this work?
dnl>
dnl> First off, we split up the target:cc stuff and tag each version we know
dnl> about with a couple of parameters.
dnl>
dnl>    DEFINEOS becomes the -DOS_xxxxx value
dnl>    STATUS   tells us which of the text blocks to print
dnl>    REMEDIATE1/2 and NOTE1/2 are extra blocks of text we can print
dnl>
dnl>    VERIFIED[1-9]="ntop:yyyy-mm-dd:name <email>:osversion";
dnl>    VNOTES  ="";
dnl>

dnl> Any common settings required to support a specific OS, distribution or release
dnl> go here also.

dnl> Add include file locations to CPPFLAGS (for the preprocessor)
dnl> and add libraries (location) -L and (names) -l to LDFLAGS.

dnl> Skipping cases is, I guess, ok, but always remember that you might have
dnl> been grabbed by an earlier target.

DISTRO=""
RELEASE=""

case "${target}:${CC}" in
    *-*-mingw32*:gcc* )
        VNOTES  ="Used to (2.1.3) work, but needs somebody to fix lots of problems"
        DEFINEOS="MINGW";     STATUS="WILLFAIL";
      ;;

    *-*-cygwin*:* )
        VERIFIED1="2.1.51:2002-10-21:Burton Strauss <burton@ntopsupport.com:any"
        VNOTES  ="Assumed to fail - ntop has never supported cygwin"
        REMEDIATE1="Use MinGW and the special makefiles instead."
        DEFINEOS="CYGWIN";    STATUS="WILLFAIL"
      ;;

    *-*-linux*:*gcc* )
        VERIFIED1="2.2.98:2003-12-30:Burton Strauss <burton@ntopsupport.com>:Fedora Core 1"
        VERIFIED2="3.0pre1:2004-02-24:Burton Strauss <burton@ntopsupport.com>:RedHat 9"
        VERIFIED3="2.2.98:2003-12-30:Burton Strauss <burton@ntopsupport.com>:SuSE 9.0"
        VERIFIED4="2.2.98:2003-12-30:Burton Strauss <burton@ntopsupport.com>:Gentoo 1.4"
        VERIFIED5="2.2.98:2003-12-30:Burton Strauss <burton@ntopsupport.com>:Mandrake 9.2"
        VERIFIED6="2.2.98:2003-12-30:Burton Strauss <burton@ntopsupport.com>:Debian 3.0"
        VERIFIED7="2.2.98:2003-12-30:Burton Strauss <burton@ntopsupport.com>:Slackware 9.1.0"

dnl> To be listed, must be in top 10 of www.distrowatch.org's 6 months charts
        UNVERIFIED1="2.2.99/3.0pre1:2004-02-24:version.xml:Debian 2.4, 2.6"
        UNVERIFIED2="2.2.99/3.0pre1:2004-02-24:version.xml:Fedora 1.90"
        UNVERIFIED3="2.2.99/3.0pre1:2004-02-24:version.xml:Mandrake 7.2, 8.2, 9.0, 9.1, 10.0"
        UNVERIFIED4="2.2.99/3.0pre1:2004-02-24:version.xml:RedHat 2.1AS, 3(EL), 3.5beta(EL), 6.x, 7.x, 8.0"
        UNVERIFIED5="2.2.99/3.0pre1:2004-02-24:version.xml:Slackware 7.0.0, 7.1.0, 8.0.0, 8.1, 9.0.0"
        UNVERIFIED6="2.2.99/3.0pre1:2004-02-24:version.xml:SuSE 6.3, 6.4, 7.1, 7.3, 8.0, 8.2, 9.0"

        DEFINEOS="LINUX";     STATUS="SUPPORTED"
        DISTRO=`utils/linuxrelease --distro`
        RELEASE=`utils/linuxrelease --release`

        NOTE1="Specific release is ${DISTRO} Linux ${RELEASE}"
      ;;

    *-*-solaris2.9*:* )
        NOTE1="Requires various gnu tools from SunFreeware.com"
        NOTE2="--enable-i18n is disabled"
        UNVERIFIED1="3.0pre1:2004-02-24:Solaris 9 (sparc)"
        UNVERIFIED2="3.0pre1:2004-02-24:Solaris 9 (i86)"
        DEFINEOS="SOLARIS";   STATUS="SUPPORTED"
        RELEASE="9"
      ;;

    *-*-solaris2.8*:* )
        VERIFIED1="2.2.4:2003-07-29:Burton Strauss <burton@ntopsupport.com:Solaris 8 i86"
        VERIFIED2="2.2:2003-04-23:Mike Tremaine <mgt@stellarcore.net>:Solaris 8 sparc"
        NOTE1="Requires various gnu tools from SunFreeware.com"
        NOTE2="--enable-i18n is disabled"
        UNVERIFIED1="3.0pre1:2004-02-24:Solaris 8 (sparc)"
        DEFINEOS="SOLARIS";   STATUS="SUPPORTED"
        RELEASE="8"
      ;;

    *-*-solaris2.5*:* )
        NOTE1="Trying Solaris 2.5 configuration stuff from ntop 2.1."
        DEFINEOS="SOLARIS";   STATUS="UNTESTED"
        AC_DEFINE_UNQUOTED(CFG_NEED_INET_ATON,
                           1,
                           [Solaris 2.5: private implementation of inet_aton])
        AC_DEFINE_UNQUOTED(CFG_NEED_GETDOMAINNAME,
                           1,
                           [OS lacks getdomainname function.])
      ;;

    *-*-solaris*:* )
        DEFINEOS="SOLARIS";   STATUS="UNTESTED"
      ;;

    *-*-darwin*:* )
	VERIFIED1="2.2.98:2003-12-30:Luca Deri:MAC OS X 10.3 (Panther)"
        NOTE1="'Darwin 5.5' is the kernel of the os known as MAC OS X 10.1"
        NOTE2="'Darwin 6.1' is the kernel of the os known as MAC OS X 10.2 (Jaguar)"
        NOTE3="'Darwin 7.2' is the kernel of the os known as MAC OS X 10.3 (Panther)"
        UNVERIFIED1="3.0pre1:2004-02-24:Darwin 6.8"
        UNVERIFIED2="3.0pre1:2004-02-24:Darwin 7.2.0"
        DEFINEOS="DARWIN";    STATUS="SUPPORTED"
      ;;

    *-*-freebsd[[45]]*:*gcc* )
        VERIFIED1="3.0pre1:2004-02-21:Stanley Hopcroft <anwsmh@IPAustralia.Gov.AU>:4.7-RELEASE"
        VERIFIED2="3.0pre1:2004-02-24:Burton Strauss <burton@ntopsupport.com>:FreeBSD-4.9-RELEASE"
        VERIFIED3="3.0pre1:2004-02-21:Stanley Hopcroft <anwsmh@IPAustralia.Gov.AU>:4.9-RELEASE-p1"
        VERIFIED4="3.0pre1:2004-02-24:Burton Strauss <burton@ntopsupport.com>:FreeBSD-5.1-RELEASE"
        UNVERIFIED1="3.0pre1:2004-02-24:version.xml:4.5-RELEASE"
        UNVERIFIED2="3.0pre1:2004-02-24:version.xml:4.7-STABLE"
        UNVERIFIED3="3.0pre1:2004-02-24:version.xml:4.8-RELEASE, 4.8-RELEASE-p3"
        UNVERIFIED4="3.0pre1:2004-02-24:version.xml:4.9-STABLE"
        UNVERIFIED5="3.0pre1:2004-02-24:version.xml:5.0-RELEASE"
        UNVERIFIED6="3.0pre1:2004-02-24:version.xml:5.2.1-RC, 5.2-RELEASE"
        DEFINEOS="FREEBSD";   STATUS="SUPPORTED"
      ;;

    *-*-freebsd*:* )
        DEFINEOS="FREEBSD";   STATUS="UNTESTED"
      ;;

    *-*-openbsd3.4:*gcc* )
        VERIFIED1="3.0pre1:2004-02-21:Julien Touche <julien.touche@lycos.com>:OpenBSD3.4-STABLE"
        VERIFIED2="3.0pre1:2004-02-21:Julien Touche <julien.touche@lycos.com>:OpenBSD3.4-CURRENT"
        DEFINEOS="OPENBSD";   STATUS="SUPPORTED"
      ;;

    *-*-openbsd*:* )
        DEFINEOS="OPENBSD";   STATUS="WILLFAIL"
      ;;

    *-*-netbsd*1.5*:gcc* )
        VERIFIED1="2.1.90:2003-03-29:Burton Strauss <burton@ntopsupport.com:1.6"
        VERIFIED2="2.1.51:2002-10-23:Burton Strauss <burton@ntopsupport.com:1.5.3 w/ updated auto* tools"
        NOTE1="Single Threaded only."
        DEFINEOS="NETBSD"
        if test ".${ac_disable_multithread}" = ".yes"; then
            STATUS="SUPPORTED"
            NOTE2="NetBSD 1.6 requires the UPDATED libpcap in the packages"
            NOTE3="  If you see a missing pcap_open_dead, you forgot to update!"
        else
            STATUS="WILLFAIL"
            NOTE2="With ANY of the threads packages, you are on your own!"
        fi
      ;;

    *-*-netbsd*:* )
        DEFINEOS="NETBSD";    STATUS="UNTESTED"
      ;;

    *-*-hpux11*:gcc* )
        DEFINEOS="HPUX";      STATUS="WILLFAIL"
        dnl> plugin load function unique to HPUX
        AC_CHECK_LIB([dld], [shl_load])

        dnl> thread library
        dnl> test for their "special" function and library with the non-standard names
        AC_CHECK_LIB(pthread, __pthread_create_system)
        AC_CHECK_LIB(posix4, sem_init, , [AC_CHECK_LIB(rt, sem_init)])
      ;;

    *-*-hpux10*:gcc* )
        NOTE1="Single Threaded only."
        DEFINEOS="HPUX"
        if test ".${ac_disable_multithread}" = ".yes"; then
            STATUS="UNTESTED"
        else
            STATUS="WILLFAIL"
        fi
        dnl> plugin load function unique to HPUX
        AC_CHECK_LIB([dld], [shl_load])

        dnl> thread library
        dnl> test for their "special" function and library with the non-standard names
        AC_CHECK_LIB(pthread, __pthread_create_system)
        AC_CHECK_LIB(rt, sem_init)
      ;;

    *-*-aix*:* )
        DEFINEOS="AIX";       STATUS="UNTESTED"

        NOTE1="Unsupported/untested, but trying configuration stuff from ntop 1.3."

        case "${target}:${CC}" in
            *-*-aix[[45]]*:gcc* )
                AC_DEFINE_UNQUOTED(CFG_NEED_GETDOMAINNAME,
                                   1,
                                   [OS lacks getdomainname function.])

                dnl> plugin load function unique to AIX
                AC_CHECK_LIB([c], [open])
              ;;
        esac
      ;;

    * )
        DEFINEOS="UNKNOWN";   STATUS="UNKNOWN"
      ;;
esac

dnl> Leave this: it causes showoses to print it's footer
dnl> showoses TERMS

CPPFLAGS="${CPPFLAGS} -D${DEFINEOS}"

if test -d ./configureextra; then

    dnl> If there is a os/distro/release specific file (additional settings),
    dnl> run it. Go from least specific to most specific, running ANY that match.
    dnl> E.g. 'solaris 8' will match solaris 1st then solaris8.

    echo ""
    echo "Testing for special configuration options for ${DEFINEOS} ${DISTRO} ${RELEASE}"
   
    if test -f ./configureextra/${DEFINEOS}; then
        echo ""
        echo "    Executing configureextra/${DEFINEOS}"
        . ./configureextra/${DEFINEOS}
        echo ""
    fi
    if test ".${DISTRO}" != "."; then
        if test -f ./configureextra/${DEFINEOS}${DISTRO}; then
            echo ""
            echo "    Executing configureextra/${DEFINEOS}${DISTRO}"
            . ./configureextra/${DEFINEOS}${DISTRO}
            echo ""
        fi
        if test ".${RELEASE}" != "." &&
           test -f ./configureextra/${DEFINEOS}${DISTRO}${RELEASE}; then
            echo ""
            echo "    Executing configureextra/${DEFINEOS}${DISTRO}${RELEASE}"
            . ./configureextra/${DEFINEOS}${DISTRO}${RELEASE}
            echo ""
        fi
    else
        if test ".${RELEASE}" != "." &&
           test -f ./configureextra/${DEFINEOS}${RELEASE}; then
            echo ""
            echo "    Executing configureextra/${DEFINEOS}${RELEASE}"
            . ./configureextra/${DEFINEOS}${RELEASE}
            echo ""
        fi
    fi
fi

echo
echo "*******************************************************************"
echo "*"

case "${STATUS}" in

    SUPPORTED)
        echo "* NOTE: Building ntop for a supported platform"
        echo "*       This means we expect ntop to work without major issues"
        echo "*"
        echo "*            '${target}'"
        if test ".${NOTE1}" != "."; then
            echo "*"
            echo "*    ${NOTE1}"
        fi
        if test ".${NOTE2}" != "."; then
            echo "*    ${NOTE2}"
        fi
        if test ".${NOTE3}" != "."; then
            echo "*    ${NOTE3}"
        fi
        ;;

    UNTESTED)
        echo "* NOTE: Building ntop for an untested platform"
        echo "*"
        echo "*            '${target}'"
        echo "*"
        echo "*      Untested means that:"
        echo "*"
        echo "*           1. A previous version of this OS is supported."
        echo "*        or 2. This version of this OS was supported by a"
        echo "*              previous version of ntop."
        echo "*"
        echo "*     ./configure applies the same configuration options,"
        echo "*     special parameters, etc. as for the prior release."
        echo "*"
        echo "*             For OS .0 releases that is probably a bad bet..."
        echo "*"
        echo "*  It could just be that you are compiling an older version"
        echo "*  of ntop on a new OS release - check the http://www.ntop.org"
        echo "*  site for an update."
        if test ".${NOTE1}" != "."; then
            echo "*"
            echo "*    ${NOTE1}"
        fi
        if test ".${NOTE2}" != "."; then
            echo "*    ${NOTE2}"
        fi
        ;;

    WILLFAIL)
        echo "* ERROR: Attempting to build ntop for an unsupported platform"
        echo "*"
        echo "*            '${target}'"
        echo "*"
        echo "*>>> This is unsupported."
        echo "*>>> It will almost certainly fail"
        echo "*           (that is why it is listed as 'unsupported' - doh!)"
        if test ".${REMEDIATE1}" != "."; then
            echo "*"
            echo "*??? ${REMEDIATE1}"
        fi
        if test ".${REMEDIATE2}" != "."; then
            echo "*??? ${REMEDIATE2}"
        fi
        if test ".${ac_willfailoverride}" = ".yes"; then
            echo "*"
            echo "*   But... you think you know better (or are testing things)"
            echo "*          so let us rock and roll..."
        fi
        HAS_ERROR="yes"
        ;;

    *)
        echo "* ERROR: Attempting to build ntop for an unknown platform"
        echo "*"
        echo "*            '${target}'"
        echo "*"
        echo "*>>> This is unsupported."
        echo "*>>> It will probably fail."
        echo "*"
        echo "*    Of course, you are certainly welcome to try ntop on this platform..."
        HAS_ERROR="yes"
        ;;
esac

echo "*"
echo "*    Please keep the ntop-dev mailing list updated with any"
echo "*    successes you have or problems you encounter..."
echo "*"

dnl> Leave this: it causes showoses to stop
dnl> showoses END

if test ".${VERIFIED1}" != "."; then
    echo "*   Support for this platform was most recently verified for"
    echo "*"
    echo $VERIFIED1 | ${ac_cv_prog_AWK} -f utils/verified.awk
    if test ".${VERIFIED2}" != "."; then
        echo $VERIFIED2 | ${ac_cv_prog_AWK} -f utils/verified.awk
    fi
    if test ".${VERIFIED3}" != "."; then
        echo $VERIFIED3 | ${ac_cv_prog_AWK} -f utils/verified.awk
    fi
    if test ".${VERIFIED4}" != "."; then
        echo $VERIFIED4 | ${ac_cv_prog_AWK} -f utils/verified.awk
    fi
    if test ".${VERIFIED5}" != "."; then
        echo $VERIFIED5 | ${ac_cv_prog_AWK} -f utils/verified.awk
    fi
    if test ".${VERIFIED6}" != "."; then
        echo $VERIFIED6 | ${ac_cv_prog_AWK} -f utils/verified.awk
    fi
    if test ".${VERIFIED7}" != "."; then
        echo $VERIFIED7 | ${ac_cv_prog_AWK} -f utils/verified.awk
    fi
    if test ".${VERIFIED8}" != "."; then
        echo $VERIFIED8 | ${ac_cv_prog_AWK} -f utils/verified.awk
    fi
    if test ".${VERIFIED9}" != "."; then
        echo $VERIFIED9 | ${ac_cv_prog_AWK} -f utils/verified.awk
    fi
    if test ".${VNOTES}" != "."; then
        echo "*    ${VNOTES}"
    fi
else
    echo "*   Support is unverified..."
fi
echo "*"
if test ".${UNVERIFIED1}" != "."; then
    echo "*   From version check log reports, ntop's users are also "
    echo "*   running under:"
    echo "*"
    echo $UNVERIFIED1 | ${ac_cv_prog_AWK} -f utils/verified.awk -u
    if test ".${UNVERIFIED2}" != "."; then
        echo $UNVERIFIED2 | ${ac_cv_prog_AWK} -f utils/verified.awk -u
    fi
    if test ".${UNVERIFIED3}" != "."; then
        echo $UNVERIFIED3 | ${ac_cv_prog_AWK} -f utils/verified.awk -u
    fi
    if test ".${UNVERIFIED4}" != "."; then
        echo $UNVERIFIED4 | ${ac_cv_prog_AWK} -f utils/verified.awk -u
    fi
    if test ".${UNVERIFIED5}" != "."; then
        echo $UNVERIFIED5 | ${ac_cv_prog_AWK} -f utils/verified.awk -u
    fi
    if test ".${UNVERIFIED6}" != "."; then
        echo $UNVERIFIED6 | ${ac_cv_prog_AWK} -f utils/verified.awk -u
    fi
    if test ".${UNVERIFIED7}" != "."; then
        echo $UNVERIFIED7 | ${ac_cv_prog_AWK} -f utils/verified.awk -u
    fi
    if test ".${UNVERIFIED8}" != "."; then
        echo $UNVERIFIED8 | ${ac_cv_prog_AWK} -f utils/verified.awk -u
    fi
    if test ".${UNVERIFIED9}" != "."; then
        echo $UNVERIFIED9 | ${ac_cv_prog_AWK} -f utils/verified.awk -u
    fi
    echo "*"
fi
echo "*******************************************************************"
echo

case "${STATUS}" in
    WILLFAIL)
          if test ".${ac_willfailoverride}" != ".yes"; then
              exit 1
          fi
      ;;
esac

dnl>
dnl>  Here so we stop processing ASAP after printing above
dnl>
AC_ARG_ENABLE(test,
              [  --enable-test                Test platform and stop],
              exit 0)

dnl>
dnl> Last chance default (if there is an os-specific value, set it above)
dnl>
if test ".${LOCALEDIR}" = "."; then
    LOCALEDIR="/usr/lib/locale"
fi

dnl> Add /usr/local/
CFLAGS="${CFLAGS} -I/usr/local/include"
CPPFLAGS="${CPPFLAGS} -I/usr/local/include"
LDFLAGS="${LDFLAGS} -L/usr/local/lib"



echo
echo "Test the compiler and setup CFLAGS..."
echo
case "$CFLAGS" in
    *-g* )
        ;;
    * )
        CFLAGS="$CFLAGS -g"
        AC_MSG_CHECKING([if compiler accepts -g (debugging information)])
        oCFLAGS=$CFLAGS
        CFLAGS="-g $CFLAGS"
        AC_TRY_COMPILE( ,
                       return 0 ,
                       AC_MSG_RESULT(yes),
                       CFLAGS="${oCFLAGS}"
                       AC_MSG_RESULT(no)
                      )
        ;;
esac

AC_MSG_CHECKING([if compiler accepts -W (warning flags)])
oCFLAGS=$CFLAGS
CFLAGS="$CFLAGS -Wshadow -Wpointer-arith -Wmissing-prototypes -Wmissing-declarations -Wnested-externs"
AC_TRY_COMPILE( ,
               return 0 ,
               AC_MSG_RESULT(yes),
               CFLAGS="${oCFLAGS}"
               AC_MSG_RESULT(no)
              )

dnl> add pic flag in any case this makes sure all our code is relocatable
case "${target}:${CC}" in
    *-*-darwin*:* )
        CFLAGS="$CFLAGS "`grep pic_flag= /usr/bin/glibtool | head -n1 | sed -e 's/.*pic_flag=//' -e 's/"//g'`
        ;;
    * )
        CFLAGS="$CFLAGS "`grep pic_flag= libtool | head -n1 | sed -e 's/.*pic_flag=//' -e 's/"//g'`
        ;;
esac




dnl> Specific compiler feature tests
AC_C_CONST
AC_C_VOLATILE
AC_C_INLINE
AC_C_CHAR_UNSIGNED
AC_C_LONG_DOUBLE  

AC_C_BIGENDIAN([AC_DEFINE_UNQUOTED(CFG_BIG_ENDIAN, 1, [ntop built for big endian machine])],
               [AC_DEFINE_UNQUOTED(CFG_LITTLE_ENDIAN, 1,  [ntop built for little endian machine])],
               [AC_DEFINE_UNQUOTED(CFG_UNKNOWN_ENDIAN, 1, [ntop built for unknown machine])])

dnl> Presets for the make flags go here...
CFLAGS="${CFLAGS}"
CPPFLAGS="${CPPFLAGS}"
LDFLAGS="${LDFLAGS}"

NTOPCONFIGDEBUG_SETTINGS([After presets])

echo
echo "Critical library/include tests..."
echo
dnl>
dnl>  Without these, don't even BOTHER testing the parameters...
dnl>
dnl>  We also process the ROOT/DIRECTORY entries first so we have reasonable
dnl>  CPPFLAGS, LDFLAGS and LIBS values for the AC_CHECK_LIBS and AC_CHECK_HEADERS macros.
dnl>

AC_MSG_CHECKING([for pcap])
AC_MSG_RESULT([])

if (test ".${PCAP_LIB}" != "."      &&   
    test ! -d ${PCAP_LIB})              ||
   (test ".${PCAP_INCLUDE}" != "."  &&
    test ! -d ${PCAP_INCLUDE}); then
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR:    You specified or implied a non-existent directory for"
    echo "*           libpcap:"
    echo "*               --with-pcap-lib=${PCAP_LIB}"
    echo "*               --with-pcap-include=${PCAP_INCLUDE}"
    echo "*"
    echo "*>>> Continuing without libpcap is impossible."
    echo "*"
    echo "*???     1. Correct the --with-pcap-xxxxx option and rerun"
    echo "*???        ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    exit 1
else
    NTOP_APPENDS([${PCAP_INCLUDE}], [${PCAP_LIB}], [pcap])
fi

AC_CHECK_HEADERS([pcap.h])
dnl> libpcap < 0.8
AC_CHECK_HEADERS([net/bpf.h])
dnl> libpcap >= 0.8
AC_CHECK_HEADERS([pcap-bpf.h])

AC_CHECK_LIB([pcap], [pcap_open_live])
AC_CHECK_LIB([pcap], [pcap_open_dead], AC_DEFINE_UNQUOTED(HAVE_PCAP_OPEN_DEAD, 1, [libpcap has pcap_open_dead]))
AC_CHECK_LIB([pcap], [pcap_lib_version], AC_DEFINE_UNQUOTED(HAVE_PCAP_LIB_VERSION, 1, [libpcap has pcap_lib_version]))
AC_CHECK_LIB([pcap], [pcap_setnonblock], AC_DEFINE_UNQUOTED(HAVE_PCAP_SETNONBLOCK, 1, [libpcap has pcap_setnonblock]))

if test ".${ac_cv_header_pcap_h}" != ".yes" ||
   (test ".${ac_cv_header_net_bpf_h}" != ".yes" &&
    test ".${ac_cv_header_pcap_bpf_h}" != ".yes" ) ||
   test ".${ac_cv_lib_pcap_pcap_open_live}" != ".yes"; then
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR: pcap header, bpf or library routines are missing"
    echo "*           (yes means it was found, no means it was not found)"
    echo "*"
    echo "*              pcap.h...${ac_cv_header_pcap_h}"
    echo "*              net/bpf.h...${ac_cv_header_net_bpf_h}"
    echo "*              pcap-bpf.h...${ac_cv_header_pcap_bpf_h}"
    echo "*              pcap_open_live() in -lpcap...${ac_cv_lib_pcap_pcap_open_live}"
    echo "*"
    echo "*  (One of the bpf files is required, but either will do)"
    echo "*"
    echo "*>>> No way to proceed."
    echo "*"
    echo "*???     1. Install libpcap"
    echo "*???    and Rerun ./configure"
    echo "*???  or 2. Use the --with-pcap-root= option"
    echo "*"
    echo "*******************************************************************"
    echo
    AC_MSG_ERROR(Unable to continue... aborting ./configure)
fi



AC_MSG_CHECKING([for gdbm])
AC_MSG_RESULT([])

if (test ".${GDBM_LIB}" != "."      &&
    test ! -d ${GDBM_LIB})              ||
   (test ".${GDBM_INCLUDE}" != "."  &&
    test ! -d ${GDBM_INCLUDE}); then
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR:    You specified or implied a non-existent directory for"
    echo "*           libgdbm:"
    echo "*               --with-gdbm-lib=${GDBM_LIB}"
    echo "*               --with-gdbm-include=${GDBM_INCLUDE}"
    echo "*"
    echo "*>>> Continuing without libgdbm is impossible."
    echo "*"
    echo "*???     1. Correct the --with-gdbm-xxxxx option and rerun"
    echo "*???        ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    exit 1
else
    NTOP_APPENDS([${GDBM_INCLUDE}], [${GDBM_LIB}], [gdbm])
fi
    
AC_CHECK_HEADERS([gdbm.h])
AC_CHECK_LIB([gdbm], [gdbm_open])

if test ".${ac_cv_header_gdbm_h}" != ".yes" ||
   test ".${ac_cv_lib_gdbm_gdbm_open}" != ".yes"; then
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR: gdbm header or library routines are missing"
    echo "*           (yes means it was found, no means it was not found)"
    echo "*"
    echo "*              gdbm.h...${ac_cv_header_gdbm_h}"
    echo "*              gdbm_open() in -lgdbm...${ac_cv_lib_gdbm_gdbm_open}"
    echo "*"
    echo "*>>> No way to proceed."
    echo "*"
    echo "*???     1. Install libgdbm"
    echo "*???    and Rerun ./configure"
    echo "*???  or 2. Use the --with-gdbm-xxxxx= options"
    echo "*"
    echo "*******************************************************************"
    echo
    AC_MSG_ERROR(Unable to continue... aborting ./configure)
fi

dnl> gd
AC_MSG_CHECKING([for gd])
AC_MSG_RESULT([])

if (test ".${GD_LIB}" != "."      &&
    test ! -d ${GD_LIB})              ||
   (test ".${GD_INCLUDE}" != "."  &&
    test ! -d ${GD_INCLUDE}); then
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR:    You specified or implied a non-existent directory for"
    echo "*           gd:"
    echo "*               --with-gd-lib=${GD_LIB}"
    echo "*               --with-gd-include=${GD_INCLUDE}"
    echo "*"
    echo "*>>> Continuing without gd is impossible."
    echo "*"
    echo "*???     1. Correct the --with-gd-xxxxx option and rerun"
    echo "*???        ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    exit 1
else
    NTOP_APPENDS([${GD_INCLUDE}], [${GD_LIB}], [gd])
fi

AC_CHECK_HEADERS(gd.h)
AC_CHECK_LIB([gd], [gdImageDestroy])

if test ".${ac_cv_header_gd_h}" != ".yes" ||
   test ".${ac_cv_lib_gd_gdImageDestroy}" != ".yes"; then
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR: gd header or library routines are missing"
    echo "*           (yes means it was found, no means it was not found)"
    echo "*"
    echo "*              gd.h...${ac_cv_header_gd_h}"
    echo "*              gdImageDestroy() in -lgd...${ac_cv_lib_gd_gdImageDestroy}"
    echo "*"
    echo "*>>> No way to proceed."
    echo "*"
    echo "*???        Install gd (and/or gd-devel), check www.boutell.com/gd"
    echo "*???    and Rerun ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    exit 1
fi

dnl> libpng
AC_MSG_CHECKING([for libpng])
AC_MSG_RESULT([])

if (test ".${LIBPNG_LIB}" != "."      &&
    test ! -d ${LIBPNG_LIB})              ||
   (test ".${LIBPNG_INCLUDE}" != "."  &&
    test ! -d ${LIBPNG_INCLUDE}); then
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR:    You specified or implied a non-existent directory for"
    echo "*           libpng:"
    echo "*               --with-libpng-lib=${LIBPNG_LIB}"
    echo "*               --with-libpng-include=${LIBPNG_INCLUDE}"
    echo "*"
    echo "*>>> Continuing without libpng is impossible."
    echo "*"
    echo "*???     1. Correct the --with-libpng-xxxxx option and rerun"
    echo "*???        ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    exit 1
else
    NTOP_APPENDS([${LIBPNG_INCLUDE}], [${LIBPNG_LIB}], [png])
fi

AC_CHECK_HEADERS(png.h)
AC_CHECK_LIB([png], [main])

if test ".${ac_cv_header_png_h}" != ".yes" ||
   test ".${ac_cv_lib_png_main}" != ".yes"; then
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR: libpng header or library routines are missing"
    echo "*           (yes means it was found, no means it was not found)"
    echo "*"
    echo "*              png.h...${ac_cv_header_png_h}"
    echo "*              png_read_info() in -lpng...${ac_cv_lib_png_png_read_info}"
    echo "*"
    echo "*>>> No way to proceed."
    echo "*"
    echo "*???        Install libpng (and/or libpng-devel), check www.libpng.org"
    echo "*???    and Rerun ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    exit 1 
fi
	
NTOPCONFIGDEBUG_SETTINGS([After criticals])

dnl> Define the arguments we accept...
dnl>
dnl>   In this version of the configure file, we use AC_ARG_WITH for whole external
dnl>   programs and AC_ARG_ENABLE for features of ntop itself.  Since they're the
dnl>   same as to processing, we don't separate them here.
dnl>
dnl>   And it keeps them together in the ./configure --help output
dnl>
dnl>   Remember, there shouldn't be any processing in these... that's below when
dnl>   we test for libraries.  It's ok to set values via AC_DEFINE_UNQUOTED().

dnl> So, we...

dnl> Test the enable, disable and with's for unreasonable combinations.

dnl> Process the trivially simple ones and be done with 'em

echo
echo "-------------------------------------------------------------------"
echo
echo "   **Handling your --enable and --disable requests**"
echo

echo
echo "Multithread?"
if test ".${ac_disable_multithread}" = ".yes"; then
    echo "    ...Disabled via ./configure command line option --disable-mt"
    multithread_mode="disabled (Single Threaded) via --disable-mt"
else
    echo "    ...(Default) Requested if available. Disable via ./configure command line option --disable-mt."
fi

echo
echo "SSL?"
if test ".${ac_disable_openssl}" = ".yes"; then
    echo "    ...Disabled via ./configure command line option --without-ssl"
    if test ".${OSSL_LIB}" != "." ||
       test ".${OSSL_INCLUDE}" != "." ||
       test ".${ac_enable_sslv3}" = ".yes" ||   
       test ".${ac_enable_sslwatchdog}" = ".yes"; then
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* WARNING:    You disabled ssl but explicitly or implicitly specified"
        echo "*             the conflicting options:"
        echo "*                --with-ossl-lib=${OSSL_LIB}"
        echo "*                --with-ossl-include=${OSSL_INCLUDE}"
        if test ".${ac_enable_sslv3}" = ".yes"; then
            echo "*                --enable-sslv3"
        fi
        if test ".${ac_enable_sslwatchdog}" = ".yes"; then
            echo "*                --enable-sslwatchdog" 
        fi
        echo "*"
        echo "*>>> Ignoring the option(s)"
        echo "*"
        echo "*???     1. Remove the --without-ssl option"
        echo "*??? or  2. Remove the conflicting --with-xxxxx-xxxxx or "
        echo "*           --enable-xxxxx options"
        echo "*"
        echo "*******************************************************************"
        echo
        OSSL_LIB=
        OSSL_INCLUDE=
        ac_enable_sslv3="no"
        ac_enable_sslwatchdog="no"
        HAS_WARNING="yes"
    fi
else
    echo "    ...(Default) Requested if available. Disable via ./configure command line option --without-ssl."
    echo "  sslv3?"
    if test ".${ac_enable_sslv3}" = ".yes"; then
        echo "    ...Requested if available AT RUN TIME."
        AC_DEFINE_UNQUOTED(MAKE_WITH_SSLV3_SUPPORT, 1, [Support SSLv3 if available])
    else
        echo "    ...(Default) Disabled. Request via ./configure command line option --enable-sslv3"
    fi
    echo "  ssl watchdog?"
    if test ".${ac_enable_sslwatchdog}" = ".yes"; then
        echo "    ...Requested via ./configure command line option --enable-sslwatchdog"
        AC_DEFINE_UNQUOTED(MAKE_WITH_SSLWATCHDOG_COMPILETIME, 1, [Enable SSL Watchdog])
    else
        echo "    ...(Default) Disabled. Request via ./configure command line option  --enable-sslwatchdog"
        echo "                                    or ntop run time option --ssl-watchdog."
    fi
fi

echo
echo "ZLIB?"
if test ".${ac_disable_zlib}" = ".yes"; then
    echo "    ...Disabled via ./configure command line option --without-zlib"
    if test ".${ZLIB_LIB}" != "." ||
       test ".${ZLIB_INCLUDE}" != "."; then
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* WARNING:    You disabled zlib but explicitly or implicitly specified"
        echo "*             the conflicting options:"
        echo "*                --with-zlib-lib=${ZLIB_LIB}"
        echo "*                --with-zlib-include=${ZLIB_INCLUDE}"
        echo "*"
        echo "*>>> Ignoring the option(s)"
        echo "*"
        echo "*???     1. Remove the --without-zlib option"
        echo "*??? or  2. Remove the conflicting --with-xxxxx-xxxxx or "
        echo "*           --enable-xxxxx options"
        echo "*"
        echo "*******************************************************************"
        echo
        ZLIB_LIB=
        ZLIB_INCLUDE=
        HAS_WARNING="yes"
    fi
else
    echo "    ...(Default) Requested if available. Disable via ./configure command line option --without-zlib."
fi

echo
echo "TCP Wrappers?"
if test ".${ac_enable_tcpwrap}" = ".yes"; then
    echo "    ...Requested via ./configure command line option --with-tcpwrap"
else
    echo "    ...(Default) Disabled. Request via ./configure command line option --with-tcpwrap."
fi

echo
echo "Plugins?"
PLUGINS=
if test ".${ac_disable_plugins}" = ".yes"; then
    echo "    ...Disabled via ./configure command line option --disable-plugins"
else
    PLUGINS=plugins
    echo "    ...(Default) Requested. Disable via ./configure command line option --disable-plugins."
fi

echo
echo "Static plugins?"
if test ".${ac_enable_static_plugins}" = ".yes"; then
    echo "    ...Requested.  Use 'make sntop' instead of 'make'"
    if test ".${ac_disable_plugins}" = ".yes"; then
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* WARNING:    You requested static plugins but also disabled them"
        echo "*"
        echo "*>>> Ignoring the --enable-static-plugins option"
        echo "*"
        echo "*???     1. Remove the --disable-plugins option"
        echo "*"
        echo "*******************************************************************"
        echo
        HAS_WARNING="yes"
    else
        AC_DEFINE_UNQUOTED(MAKE_STATIC_PLUGIN, 1, [Statically build plugins into sntop])
    fi
else
    echo "    ...(Default) Disabled. Request via ./configure command line option --enable-static-plugin."
fi

echo
echo "Internationalization (i18n)?"
if test ".$ac_enable_i18n" = ".yes"; then
    echo "    ...Requested via ./configure command line option --enable-i18n."
    case "${target}" in

        *-*-solaris* )
          echo
          echo "*******************************************************************"
          echo "*"
          echo "* WARNING: Unable to make i18n code under Solaris"
          echo "*          due to library differences."
          echo "*"
          echo "*"
          echo "*>>> Continuing without i18n."
          echo "*"
          echo "*******************************************************************"
          echo
          HAS_WARNING="yes"
          ;;

        * )
          AC_DEFINE_UNQUOTED(MAKE_WITH_I18N, 1, [Define for internationalization])
          ;;

    esac
else
    echo "    ...(Default) Disabled. Request via ./configure command line option --enable-i18n"
fi

echo
echo "Processing the rest of the ROOT/DIRECTORY entries"
echo
dnl> So we have even more reasonable CPPFLAGS, LDFLAGS and LIBS values for 
dnl> the AC_CHECK_LIB and AC_CHECK_HEADER macros.

dnl> Openssl
if test ".${ac_disable_openssl}" != ".yes"; then
    if (test ".${OSSL_LIB}" != "."      &&
        test ! -d ${OSSL_LIB})              ||
       (test ".${OSSL_INCLUDE}" != "."  &&
        test ! -d ${OSSL_INCLUDE}); then
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* ERROR:    You specified or implied a non-existent directory for"
        echo "*           the openSSL library:"
        if test ".${OSSL_LIB}" != "."; then
            echo "*               --with-ossl-lib=${OSSL_LIB}"
        fi
        if test ".${OSSL_INCLUDE}" != "."; then
            echo "*               --with-ossl-include=${OSSL_INCLUDE}"
        fi
        echo "*"
        echo "*>>> Continuing without the --with-ossl-xxxxx values"
        echo "*"
        echo "*        ./configure should complete 'successfully'"
        echo "*" 
        echo "*        ntop may find openSSL installed in a standard location."
        echo "*" 
        echo "*        If not found, ntop will disable code dependent upon"
        echo "*        openSSL meaning no https:// support."
        echo "*"
        echo "*    Read the remaining messages carefully!"
        echo "*"
        echo "*???     1. Correct the --with-ossl-xxxxx option and rerun"
        echo "*???        ./configure"
        echo "*??? or  2. Install the openSSL package and rerun ./configure"
        echo "*"
        echo "*******************************************************************"
        echo
        OSSL_LIB=
        OSSL_INCLUDE=
        HAS_WARNING="yes"
    else
        NTOP_APPENDS([${OSSL_INCLUDE}], [${OSSL_LIB}], [gdbm])
    fi
fi

if test ".${ac_disable_zlib}" = ".yes"; then
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* WARNING: Disabled zlib at your request"
    echo "*"
    echo "*******************************************************************"
    echo
    HAS_WARNING="yes"
elif (test ".${ZLIB_LIB}" != "."      &&
    test ! -d ${ZLIB_LIB})              ||
   (test ".${ZLIB_INCLUDE}" != "."  &&
    test ! -d ${ZLIB_INCLUDE}); then
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR:    You specified or implied a non-existent directory for"
    echo "*           zlib:"
    if test ".${ZLIB_LIB}" != "."; then
        echo "*               --with-zlib-lib=${ZLIB_LIB}"
    fi
    if test ".${ZLIB_INCLUDE}" != "."; then
        echo "*               --with-zlib-include=${ZLIB_INCLUDE}"
    fi
    echo "*"
    echo "*>>> Continuing without the --with-zlib-xxxxx values"
    echo "*" 
    echo "*        ./configure should complete 'successfully'"
    echo "*" 
    echo "*        ntop may find zlib installed in a standard location."
    echo "*" 
    echo "*        If not found, ntop will disable code dependent upon zlib"
    echo "*        meaning no compressed web pages or input files."
    echo "*"
    echo "*    Read the remaining messages carefully!"
    echo "*"
    echo "*???     1. Correct the --with-zlib-xxxxx option and rerun"
    echo "*???        ./configure"
    echo "*??? or  2. Install the zlib package and rerun ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    ZLIB_LIB=
    ZLIB_INCLUDE=
    HAS_WARNING="yes"
else
    NTOP_APPENDS([${ZLIB_INCLUDE}], [${ZLIB_LIB}], [z])
fi

if test ".${LOCALEDIR}" != "." &&
   test ! -d ${LOCALEDIR}; then
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* WARNING:  You specified a non-existent directory for locale files"
    echo "*                  --with-localedir=${LOCALEDIR}"
    echo "*"
    echo "*>>> Since we just pass this through to the run-time, we're only"
    echo "*>>> going to warn you here, but ntop might or might not function"
    echo "*>>> as expected."
    echo "*"
    echo "*???     1. Correct the --with-localedir option and rerun"
    echo "*???        ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    HAS_WARNING="yes"
fi

NTOPCONFIGDEBUG_SETTINGS([After libraries])

echo
echo "Testing headers and functions..."
echo

AC_HEADER_STDC
AC_HEADER_DIRENT
AC_HEADER_SYS_WAIT
AC_HEADER_TIME 

# Standard c stuff - must have
AC_CHECK_HEADERS([float.h stddef.h stdlib.h string.h])
AC_CHECK_HEADERS([errno.h fcntl.h limits.h math.h signal.h stdarg.h unistd.h])
AC_CHECK_HEADERS([stdio.h strings.h])
AC_CHECK_HEADERS([sys/ioctl.h sys/socket.h sys/time.h sys/types.h])

# Optional - have workaround...
AC_CHECK_HEADERS([setjmp.h])
AC_CHECK_HEADERS([shadow.h])
AC_CHECK_HEADERS([sys/utsname.h])

# Network
AC_CHECK_HEADERS([netdb.h])
AC_CHECK_HEADERS([netinet/in.h])
AC_CHECK_HEADERS([arpa/inet.h arpa/nameser.h])
AC_CHECK_HEADERS([net/ethernet.h])

dnl> The failed recheck stuff below is courtesy of Chris Turbeville [turbo@verio.net]
dnl> Chris developed this for Solaris 9, confirming work I had done earlier for FreeBSD
dnl> And thank to Julien TOUCHE [julien.touche@lycos.com] for the OpenBSD dependencies
AC_CHECK_HEADERS([net/if.h], [], [], [
#ifdef HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif])

AC_CHECK_HEADER([net/if_dl.h],[
AC_DEFINE_UNQUOTED(HAVE_IFLIST_SYSCTL,   1, [use sysctl support for fetch interface informations])
])

AC_CHECK_HEADERS([netinet/if_ether.h], [], [], [
#ifdef HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif
#ifdef HAVE_NET_IF_H
#include <net/if.h>
#endif])
AC_CHECK_HEADERS([netinet/in_systm.h])
AC_CHECK_HEADERS([netinet/ip.h], [], [], [
#ifdef HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#ifdef HAVE_NETINET_IN_SYSTM_H
#include <netinet/in_systm.h>
#endif
#ifdef HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif])
AC_CHECK_HEADERS([netinet/ip_icmp.h], [], [], [
#ifdef HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif
#ifdef HAVE_NETINET_IN_SYSTM_H
#include <netinet/in_systm.h>
#endif
#ifdef HAVE_NETINET_IP_H
#include <netinet/ip.h>
#endif])
AC_CHECK_HEADERS([netinet/tcp.h])
AC_CHECK_HEADERS([netinet/udp.h], [], [], [
#ifdef HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#ifdef HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif])
AC_CHECK_HEADERS([sys/param.h])
AC_CHECK_HEADERS([net/if_dl.h])
AC_CHECK_HEADERS([sys/sysctl.h], [], [], [
#ifdef HAVE_SYS_PARAM_H
#include <sys/param.h>
#endif])
AC_CHECK_HEADERS([net/route.h], [], [], [
#ifdef HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif])

dnl>  Note - if ethertype is missing, ntop.h has the critical #defines extracted...
AC_CHECK_HEADERS([ethertype.h])
AC_CHECK_HEADERS([net/ppp_defs.h])
AC_CHECK_HEADERS([linux/if_pppox.h], [], [], [
#ifdef HAVE_NET_IF_H
#include <net/if.h>
#endif
#ifdef HAVE_NETINET_IF_ETHER_H
#include <netinet/if_ether.h>
#endif])

dnl> OpenSSL ... if not disabled...
if test ".${ac_disable_openssl}" != ".yes"; then
    AC_CHECK_HEADERS([openssl/rsa.h openssl/crypto.h openssl/x509.h openssl/pem.h openssl/ssl.h openssl/err.h])
    AC_CHECK_LIB([crypto], [SSLeay_version])
    AC_CHECK_LIB([ssl], [SSL_accept])
fi

dnl> Security related
dnl> Note: on some systems, e.g. FreeBSD, crypt() is defined in unistd.
AC_CHECK_HEADERS([crypt.h pwd.h security/pam_appl.h shadow.h])

dnl> i18n
AC_CHECK_HEADERS([locale.h langinfo.h])

## Other
AC_CHECK_HEADERS([dirent.h])
AC_CHECK_HEADERS([dlfcn.h dl.h])
AC_CHECK_HEADERS([getopt.h])
AC_CHECK_HEADERS([if.h])
AC_CHECK_HEADERS([inttypes.h])
AC_CHECK_HEADERS([memory.h])
AC_CHECK_HEADERS([sys/ldr.h])
AC_CHECK_HEADERS([sys/param.h])
AC_CHECK_HEADERS([sys/select.h])
AC_CHECK_HEADERS([sys/sockio.h])
AC_CHECK_HEADERS([sys/stat.h])
AC_CHECK_HEADERS([sys/un.h])
AC_CHECK_HEADERS([sys/wait.h])
if test ".${ac_disable_zlib}" != ".yes"; then
    AC_CHECK_HEADERS([zlib.h])
fi

AC_CHECK_HEADERS([malloc.h])
AC_CHECK_HEADERS([sys/resource.h])

dnl> Multithreading...
dnl>    pthread.h is required,
dnl>    sched.h or sys/sched.h are optional, but improves performance
dnl>    semaphore.h is also optional
AC_CHECK_HEADERS([semaphore.h])
AC_CHECK_HEADERS([sched.h sys/sched.h])
AC_CHECK_HEADERS([pthread.h])

dnl> Optional, used for -L parameter
AC_CHECK_HEADERS([sys/syslog.h syslog.h])

dnl> Used for tcpwrappers
AC_CHECK_HEADERS([tcpd.h])

dnl> IPv6
case "$ac_disable_ipv6" in
        yes|''|autodetect)
                ;;
        no)
		AC_DEFINE_UNQUOTED(INET6,  1, [Enable/disable ipv6 support])
		AC_CHECK_HEADERS([ip6.h icmp6.h])
		AC_CHECK_HEADERS([netinet/ip6.h netinet/icmp6.h], [], [], [
		#if HAVE_SYS_TYPES_H
		#include <sys/types.h>
		#endif
		#if HAVE_NETINET_IN_H
		#include <netinet/in.h>
		#endif])
		AC_CHECK_FUNCS([sysctl])
                ;;
esac

AC_CHECK_FUNCS(finite, ,
  [AC_CHECK_FUNCS(isfinite, ,
    [AC_MSG_CHECKING(for isfinite with <math.h>)
    AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <math.h>]], [[float f = 0.0; isfinite(f)]])],[AC_MSG_RESULT(yes)
      AC_DEFINE(HAVE_ISFINITE,1,we have the isinfinite function)],[AC_MSG_RESULT(no)])])])
AC_CHECK_FUNCS(isinf, ,
  [AC_MSG_CHECKING(for isinf with <math.h>)
    AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <math.h>]], [[float f = 0.0; isinf(f)]])],[AC_MSG_RESULT(yes)
      AC_DEFINE(HAVE_ISINF,1,we have the isinf function)],[AC_MSG_RESULT(no)])])

dnl> XML dump (plugin)
AC_CHECK_HEADERS(glib.h glibconfig.h)
AC_CHECK_HEADERS(xmlversion.h)
AC_CHECK_HEADERS(gdome.h)

AC_TYPE_PID_T
dnl> Autoconf2: AC_CHECK_TYPE(pid_t, int)
AC_TYPE_SIZE_T
dnl> Autoconf2: AC_CHECK_TYPE(size_t, unsigned)
AC_HEADER_TIME
AC_STRUCT_TM
AC_STRUCT_TIMEZONE 

AC_CHECK_TYPEDEF(u_int64_t, sys/types.h)
AC_CHECK_TYPEDEF(uint64_t, sys/types.h)
AC_CHECK_TYPEDEF(u_int32_t, sys/types.h)
AC_CHECK_TYPEDEF(u_int16_t, sys/types.h)
AC_CHECK_TYPEDEF(u_int8_t, sys/types.h)
AC_CHECK_TYPEDEF(int64_t, sys/types.h)
AC_CHECK_TYPEDEF(int32_t, sys/types.h)
AC_CHECK_TYPEDEF(int16_t, sys/types.h)
AC_CHECK_TYPEDEF(int8_t, sys/types.h)

dnl> If this fails, it could be a bad -l which is going to kill
dnl> ALL the tests... so do the trivial compile test...
case "${CC}" in
  *gcc* )
    AC_MSG_CHECKING([trivial compile])
    AC_LANG_CONFTEST(
    [AC_LANG_PROGRAM([[#include <unistd.h>]],
                     [[int i=0;]])])
    rm -f conftest.$ac_objext conftest$ac_exeext
    (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
    (eval $ac_link) 2> trivialcompilemessage
    ac_status=$?
    if test ".${ac_status}" = ".0"; then
        AC_MSG_RESULT(ok)
    else
        AC_MSG_WARN(error)
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* ERROR: A trivial c compile has failed.  Something is seriously wrong."
        echo "*"
        echo "*        Check your --with-xxxxx-xxxxx parameters - if a library (-l)"
        echo "*        is not found in the locations given (-L) it causes these global"
        echo "*        compile problems. The library list, includes and flags used are:"
        echo "*"
        echo "*        LIBS=${LIBS}"
        echo "*        INCS=${INCS}"
        echo "*        CPPFLAGS=${CPPFLAGS}"
        echo "*        LDFLAGS=${LDFLAGS}"
        echo "*"
        echo "*        The compile error message is:"
        echo "*"
        cat trivialcompilemessage
        echo "*"
        echo "*>>> No way to proceed."
        echo "*"
        echo "*???     1. Correct the --with-xxxxx-xxxxx parameters"
        echo "*???    and Rerun ./configure"
        echo "*"
        echo "*******************************************************************"
        echo
        AC_MSG_ERROR(Unable to continue... aborting ./configure)
    fi
    ;;
esac


AC_CHECK_LIB([c], [backtrace])
AC_CHECK_LIB([c], [crypt], , [AC_CHECK_LIB([crypt], [crypt])])
AC_CHECK_LIB([c], [crypt_get_format_get_format], , [AC_CHECK_LIB([crypt], [crypt_get_format])])
AC_CHECK_LIB([c], [getopt_long])

dnl> Plugin load routine...
dnl>    Most systems... special cases in the platform specific...
AC_CHECK_LIB([c], [dlopen], , [AC_CHECK_LIB([dl], [dlopen])])

if test ".${ac_disable_zlib}" != ".yes"; then
    AC_CHECK_LIB([z], [zlibVersion])
fi

dnl> Check for both sin and ceil - some implementations split them
AC_CHECK_LIB([c], [sin], , [AC_CHECK_LIB([m], [sin])])
AC_CHECK_LIB([c], [ceil], , [AC_CHECK_LIB([m], [ceil])])

dnl> Networking libraries
AC_CHECK_LIB([nsl],    [main])
AC_CHECK_LIB([xnet],   [main])
AC_CHECK_LIB([socket], [main])
AC_CHECK_LIB([resolv], [main])

dnl> Multithreading libraries
AC_CHECK_LIB(pthread, pthread_create, , [
    AC_CHECK_LIB(pthreads, pthread_create, , [
        AC_CHECK_LIB(c_r, pthread_create)
    ])
])
AC_CHECK_LIB(posix4, sem_init)

dnl> regex.c
AC_CHECK_LIB([c], 
             [re_search],
             AC_DEFINE_UNQUOTED(HAVE_REGEX, 
                                1, 
                                [regex lib is defined inside -lc for regex.c]))

dnl> TCP Wrappers
dnl>  This is a problem - the test sets HAVE_LIBWRAP, which is the flag in ntop
dnl>  But we haven't processed --with-tcpwrap yet. So we dummy this out until
dnl>  such time as we can fix the internal flag in ntop...
dnl>AC_CHECK_LIB([wrap], [hosts_access])

dnl> XML dump (plugin)
AC_CHECK_LIB([glib], [g_date_julian])
AC_CHECK_LIB([xml2], [xmlCheckVersion])
AC_CHECK_LIB([gdome], [gdome_di_saveDocToFile])

dnl> Functions and types
AC_FUNC_ALLOCA

AC_FUNC_FORK
AC_PROG_GCC_TRADITIONAL
dnl> do not use AC_FUNC_MALLOC ... because we have our own replacement...
AC_FUNC_MEMCMP
AC_FUNC_SETVBUF_REVERSED
AC_TYPE_SIGNAL
AC_FUNC_STAT
AC_FUNC_STRFTIME
AC_FUNC_VPRINTF

AC_CHECK_FUNCS([alarm])
AC_CHECK_FUNCS([ctime_r])
AC_CHECK_FUNCS([endpwent])
AC_CHECK_FUNCS([gethostbyaddr gethostbyname gethostname])
dnl> Note, we've already tested for gethostbyaddr_r to find it's library, above.
dnl>      This test is to get HAVE_GETHOSTBYADDR_R set...
AC_CHECK_FUNCS([gethostbyaddr_r])
AC_CHECK_FUNCS([getipnodebyaddr])
AC_CHECK_FUNCS([getpass])
AC_CHECK_FUNCS([gettimeofday])
AC_CHECK_FUNCS([inet_ntoa])
AC_CHECK_FUNCS([localtime_r])
AC_CHECK_FUNCS([memchr memset])
AC_CHECK_FUNCS([putenv])
AC_CHECK_FUNCS([re_comp regcomp])
AC_CHECK_FUNCS([sched_yield])
AC_CHECK_FUNCS([select socket])
AC_CHECK_FUNCS([snprintf])
AC_CHECK_FUNCS([sqrt])
AC_CHECK_FUNCS([strcasecmp strncasecmp])
AC_CHECK_FUNCS([strchr strrchr])
AC_CHECK_FUNCS([strcspn])
AC_CHECK_FUNCS([strdup])
AC_CHECK_FUNCS([strerror])
AC_CHECK_FUNCS([strpbrk])
AC_CHECK_FUNCS([strspn])
AC_CHECK_FUNCS([strstr])
AC_CHECK_FUNCS([strtoul])
AC_CHECK_FUNCS([uname])

dnl> Test for strtok_r (we have our own defn if it's not available)C_CHECK_FUNCS([strtok_r])
AC_CHECK_FUNCS([strtok_r])
dnl> Following used by regex.c only
AC_CHECK_FUNCS([bzero])

case "${CC}" in
  *gcc* )
    dnl> Check if malloc.h has mallinfo...
    AC_MSG_CHECKING([for mallinfo in malloc.h])
    AC_LANG_CONFTEST(
    [AC_LANG_PROGRAM([[#include <malloc.h>]],
                     [[struct mallinfo memStats = mallinfo();]])])
    gcc conftest.c -o /dev/null > /dev/null 2> /dev/null
    rc=$?
    if test ".${rc}" = ".0"; then
        AC_MSG_RESULT(yes)
        AC_DEFINE_UNQUOTED(HAVE_MALLINFO_MALLOC_H,
                               1,
                               [malloc.h has mallinfo])
    else
        AC_MSG_RESULT(no)
    fi
esac

NTOPCONFIGDEBUG_SETTINGS([After all tests])

echo
echo "Now, let's check for problems with what we've found..."
echo
echo "   Testing Required libraries and headers**"
echo
AC_MSG_CHECKING([for required C headers])
if test ".${ac_cv_header_errno_h}"      = ".no" ||
   test ".${ac_cv_header_fcntl_h}"      = ".no" ||
   test ".${ac_cv_header_float_h}"      = ".no" ||
   test ".${ac_cv_header_limits_h}"     = ".no" ||
   test ".${ac_cv_header_stddef_h}"     = ".no" ||
   test ".${ac_cv_header_stdlib_h}"     = ".no" ||
   test ".${ac_cv_header_stdio_h}"      = ".no" ||
   test ".${ac_cv_header_string_h}"     = ".no" ||
   test ".${ac_cv_header_strings_h}"    = ".no" ||
   test ".${ac_cv_header_unistd_h}"     = ".no" ||
   test ".${ac_cv_header_sys_ioctl_h}"  = ".no" ||
   test ".${ac_cv_header_sys_socket_h}" = ".no" ||
   test ".${ac_cv_header_sys_time_h}"   = ".no" ||
   test ".${ac_cv_header_sys_types_h}"  = ".no"; then
    AC_MSG_WARN(error)
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR: Basic c library routines are missing."
    echo "*           (yes means it was found, no means it was not found)"
    echo "*"
    echo "*              errno.h..."${ac_cv_header_errno_h}
    echo "*              fcntl.h...${ac_cv_header_fcntl_h}"
    echo "*              float.h...${ac_cv_header_float_h}"
    echo "*              limits.h...${ac_cv_header_limits_h}"
    echo "*              stddef.h...${ac_cv_header_stddef_h}"
    echo "*              stdlib.h...${ac_cv_header_stdlib_h}"
    echo "*              stdio.h...${ac_cv_header_stdio_h}"
    echo "*              string.h...${ac_cv_header_string_h}"
    echo "*              strings.h...${ac_cv_header_strings_h}"
    echo "*              unistd.h...${ac_cv_header_unistd_h}"
    echo "*              sys/ioctl.h...${ac_cv_header_sys_ioctl_h}"
    echo "*              sys/socket.h...${ac_cv_header_sys_socket_h}"
    echo "*              sys/time.h...${ac_cv_header_sys_time_h}"
    echo "*              sys/types.h...${ac_cv_header_sys_types_h}"
    echo "*"
    echo "*>>> No way to proceed."
    echo "*"
    echo "*???     1. Install the necessary c compiler libraries/headers"
    echo "*???    and Rerun ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    AC_MSG_ERROR(Unable to continue... aborting ./configure)
else
    AC_MSG_RESULT(ok)
fi
  
AC_MSG_CHECKING([for crypt])
if (test ".${ac_cv_lib_c_crypt}" != ".yes" &&
    test ".${ac_cv_lib_crypt_crypt}" != ".yes"); then
    AC_MSG_WARN(error)
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR: 1. Basic c library routines are missing."
    echo "*           (yes means it was found, no means it was not found)"
    echo "*"
    echo "*              crypt.h...${ac_cv_header_crypt_h} (optional)"
    echo "*              crypt() in -lc...${ac_cv_lib_c_crypt} -lcrypt...${ac_cv_lib_crypt_crypt}"
    echo "*"
    echo "*>>> No way to proceed."
    echo "*"
    echo "*???     1. Install the necessary c compiler libraries/headers"
    echo "*???    and Rerun ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    AC_MSG_ERROR(Unable to continue... aborting ./configure)
else
    AC_MSG_RESULT(ok)
fi
if (test ".${ac_cv_lib_c_crypt_get_format}" = ".yes") ||
   (test ".${ac_cv_lib_crypt_crypt_get_format}" = ".yes"); then
    AC_DEFINE_UNQUOTED(HAVE_CRYPTGETFORMAT, 1, [Have crypt_get_format() function])
fi

AC_MSG_CHECKING([for dynamic load module])
if test ".${DEFINEOS}" = ".DARWIN"; then
   AC_MSG_RESULT(skipping - ntop emulates function in ntop_darwin.c)
elif test ".${ac_cv_lib_dl_dlopen}"    != ".yes" &&
     test ".${ac_cv_lib_c_dlopen}"     != ".yes" &&
     test ".${ac_cv_lib_c_load}"       != ".yes" &&
     test ".${ac_cv_lib_dld_shl_load}" != ".yes"; then
    AC_MSG_WARN(error)
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* ERROR: Critical c library routine is missing."
    echo "*           (yes means it was found, no means it was not found)"
    echo "*"
    case "$target" in
      *-hpux* )
        echo "*              shl_load() in -ldld...${ac_cv_lib_dld_shl_load}   (HPUX specific)"  
        ;;
      *-aix* )
        echo "*              load() in -lc...${ac_cv_lib_c_load}         (IBM AIX specific)"  
        ;;
      * )
        echo "*              dlopen() in -ldl...${ac_cv_lib_dl_dlopen} or -lc...${ac_cv_lib_c_dlopen}"
        ;;
    esac
    echo "*"
    echo "*>>> No way to proceed."
    echo "*"
    echo "*???     1. Install the necessary c compiler libraries/headers"
    echo "*???    and Rerun ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    AC_MSG_ERROR(Unable to continue... aborting ./configure)
else
    AC_MSG_RESULT(ok)
fi

echo
echo "-------------------------------------------------------------------"
echo
echo "   **Testing Optional libraries and headers**"
echo

dnl> Multithreaded:
if test ".${ac_disable_multithread}" != ".yes"; then
    AC_MSG_CHECKING([for Multithreading])

    case "$target" in
      dnl> HPUX 11, deal with their "special" (retarded) library with the non-standard name
      *-hpux11* )
        if test ".${ac_cv_header_pthread_h}"                    != ".yes" ||
           test ".${ac_cv_lib_pthread___pthread_create_system}" != ".yes" ||
           (test ".${ac_cv_lib_posix4_sem_init}"                != ".yes" &&
            test ".${ac_cv_lib_rt_sem_init}"                    != ".yes") then
            AC_MSG_WARN(error)
            dnl> Missing a library?  Can't multithread...
            ac_disable_multithread="yes"
            echo
            echo "*******************************************************************"
            echo "*                                                           HPUX11*"
            echo "*"
            echo "* WARNING:  We are unable to find a header/library required"
            echo "*           to support multi-threading."
            echo "*"
            echo "*>>>    ntop will be built single threaded."
            echo "*       This is only minimally supported."
            echo "*"
            echo "*    Missing:"
            echo "*           (yes means it was found, no means it was not found)"
            echo "*"
            echo "*              pthread.h...${ac_cv_header_pthread_h}"
            echo "*              __pthread_create_system() in -lpthread...${ac_cv_lib_pthread___pthread_create_system}"
            echo "*              sem_init() in -lposix4...${ac_cv_lib_posix4_sem_init} or -lrt...${ac_cv_lib_rt_sem_init}"
            echo "*"
            echo "*???     1. Install the necessary headers and libraries."
            echo "*???    and rerun ./configure"
            echo "*"
            echo "*******************************************************************"
            echo
            HAS_WARNING="yes"
        fi
        ;;
      * )
        if test ".${ac_cv_header_pthread_h}"             != ".yes" ||
           (test ".${ac_cv_lib_pthread_pthread_create}"  != ".yes" &&
            test ".${ac_cv_lib_pthreads_pthread_create}" != ".yes" &&
            test ".${ac_cv_lib_c_r_pthread_create}"      != ".yes"); then
            AC_MSG_WARN(error)
            ac_disable_multithread="yes"
            echo
            echo "*******************************************************************"
            echo "*"
            echo "* WARNING:  We are unable to find a header/library required"
            echo "*           to support multi-threading."
            echo "*"
            echo "*>>>    ntop will be built single threaded."
            echo "*       This is only minimally supported."
            echo "*"
            echo "*    Missing:"
            echo "*           (yes means it was found, no means it was not found)"
            echo "*"
            echo "*              pthread.h...${ac_cv_header_pthread_h}"
            echo "*              pthread_create() in -lpthread...${ac_cv_lib_pthread_pthread_create} -lpthreads...${ac_cv_lib_pthreads_pthread_create} -lc_r...${ac_cv_lib_c_r_pthread_create}"
            echo "*"
            echo "*???     1. Install the necessary headers and libraries."
            echo "*???    and rerun ./configure"
            echo "*"
            echo "*******************************************************************"
            echo
            HAS_WARNING="yes"
        fi
        ;;
    esac

    if test ".${ac_disable_multithread}" != ".yes"; then
        AC_MSG_RESULT(ok)
        AC_DEFINE_UNQUOTED(CFG_MULTITHREADED,        1, [Enable/disable multithread support])
        multithread_mode="enabled"
    else
        multithread_mode="disabled (Single Threaded)"
    fi
fi

dnl> openSSL:
if test ".${ac_disable_openssl}" != ".yes"; then
    AC_MSG_CHECKING([for openSSL])
    if test ".${ac_cv_header_openssl_crypto_h}" = ".yes" &&
       test ".${ac_cv_header_openssl_err_h}" = ".yes"    &&
       test ".${ac_cv_header_openssl_pem_h}" = ".yes"    &&
       test ".${ac_cv_header_openssl_rsa_h}" = ".yes"    &&
       test ".${ac_cv_header_openssl_ssl_h}" = ".yes"    &&
       test ".${ac_cv_header_openssl_x509_h}" = ".yes"   &&
       test ".${ac_cv_lib_ssl_SSL_accept}" = ".yes"; then
        AC_MSG_RESULT(ok)
        AC_DEFINE_UNQUOTED(HAVE_OPENSSL, 1, [OPENSSL is available])
    else
        AC_MSG_WARN(error)
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* WARNING:  One or more items required for openSSL are missing:"
        echo "*           (yes means it was found, no means it was not found)"
        echo "*"
        echo "*                  openssl/crypto.h...${ac_cv_header_openssl_crypto_h}"
        echo "*                  openssl/err.h...${ac_cv_header_openssl_err_h}"
        echo "*                  openssl/pem.h...${ac_cv_header_openssl_pem_h}"
        echo "*                  openssl/rsa.h...${ac_cv_header_openssl_rsa_h}"
        echo "*                  openssl/ssl.h...${ac_cv_header_openssl_ssl_h}"
        echo "*                  openssl/x509.h...${ac_cv_header_openssl_x509_h}"
        echo "*                  libssl.so or libssl.a...${ac_cv_lib_ssl_SSL_accept}"
        echo "*"
        echo "*>>>    ntop will be built without openSSL"
        echo "*"
        echo "*???     1. Install the necessary headers and libraries."
        echo "*???    and rerun ./configure"
        echo "*"
        echo "*******************************************************************"
        echo
        HAS_WARNING="yes"
    fi
fi

dnl> zlib:
dnl> Test the various things we need for zlib...
AC_MSG_CHECKING([for zlib])
if test ".${ac_disable_zlib}" = ".yes"; then
    AC_MSG_WARN(Skipping at your request)
elif test ".${ac_cv_header_zlib_h}" = ".yes"         &&
   test ".${ac_cv_lib_z_zlibVersion}" = ".yes"; then
    AC_MSG_RESULT(ok)
    AC_DEFINE_UNQUOTED(MAKE_WITH_ZLIB, 1, [ZLIB is available])
else
    AC_MSG_WARN(error)
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* WARNING:  One or more items required for zlib are missing:"
    echo "*           (yes means it was found, no means it was not found)"
    echo "*"
    echo "*                  zlib.h...${ac_cv_header_zlib_h}"
    echo "*                  libz.so or libz.a...${ac_cv_lib_z_zlibVersion}"
    echo "*"
    echo "*>>>    ntop will be built without zlib"
    echo "*"
    echo "*???     1. Install the necessary headers and libraries."
    echo "*???    and rerun ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    HAS_WARNING="yes"
fi

dnl>
dnl> SNMP Support
dnl>
if test ".${ac_disable_snmp}" != ".yes"; then
 AC_CHECK_HEADERS(net-snmp/net-snmp-config.h)
 AC_MSG_CHECKING([SNMP])
 if test "x$ac_cv_header_net_snmp_net_snmp_config_h" = "xyes"; then
   AC_DEFINE_UNQUOTED(HAVE_SNMP, 1, [SNMP is supported])
   SNMP_LIBS=`net-snmp-config --agent-libs`
   AC_MSG_RESULT(yes)
   AC_DEFINE_UNQUOTED(MAKE_WITH_SNMP, 1, [SNMP is available])
 else
   AC_MSG_RESULT(no)
 fi
fi

dnl>
dnl> SCTP - RFC 3286
dnl>
AC_MSG_CHECKING([sctp])
AC_TRY_LINK([
        #include "confdefs.h"
        #include <netinet/sctp.h>
        #include <sys/socket.h>],
        [socket(AF_INET, SOCK_SEQPACKET, IPPROTO_SCTP);],
        AC_DEFINE_UNQUOTED(HAVE_SCTP, 1, [SCTP is supported])
AC_MSG_RESULT(yes)
ac_has_sctp=yes,
AC_MSG_RESULT(no)
ac_has_sctp=no)

dnl> tcp wrappers:
if test ".${ac_enable_tcpwrap}" = ".yes"; then
    AC_MSG_CHECKING([for tcp wrappers])

    if test ".${ac_cv_header_tcpd_h}" = ".yes"; then
        dnl> Oh how I wish I could just say:
        dnl> AC_CHECK_LIB([wrap], [hosts_access],
        dnl>              ac_cv_tcpwrappers="yes",
        dnl>              ac_cv_tcpwrappers="no")
        dnl>  But, tcp wrappers has those silly global variables ...
        if test ".${NTOPCONFIGDEBUG}" = ".yes"; then
            echo "DEBUG:   tcp wrappers: Calling try_link"
        fi
        oLIBS="${LIBS}"
        LIBS="${LIBS} -lwrap"
        AC_TRY_LINK([
 #ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
 #endif
 #include <tcpd.h>
 int allow_severity = 0;
 int deny_severity  = 0;

 struct request_info *req;
],[hosts_access (req)],
                     if test ".${NTOPCONFIGDEBUG}" = ".yes"; then
                         echo "DEBUG:   tcp wrappers try_link: YES"
                     fi
                     AC_DEFINE(HAVE_LIBWRAP)
                     ac_cv_lib_wrap_hosts_access="yes"
                     ac_cv_tcpwrappers="yes",
                     if test ".${NTOPCONFIGDEBUG}" = ".yes"; then
                         echo "DEBUG:   tcp wrappers try_link: NO"
                     fi
                     LIBS="${oLIBS}"
                     ac_cv_lib_wrap_hosts_access="no"
                     ac_cv_tcpwrappers="no")

    else
        if test ".${NTOPCONFIGDEBUG}" = ".yes"; then
            echo "DEBUG:   tcp wrappers: no tcpd.h"
        fi
        ac_cv_tcpwrappers="no"
    fi

    if test ".${ac_cv_tcpwrappers}" = ".yes"; then
        AC_MSG_RESULT(ok)
    else
        AC_MSG_WARN(error)
        echo
        echo "*******************************************************************"
        echo "*"
        echo "* WARNING:  One or more items required for tcpwrappers are missing:"
        echo "*           (yes means it was found, no means it was not found)"
        echo "*"
        echo "*                  tcpd.h...${ac_cv_header_tcpd_h}"
	echo "*                  hosts_access() in -lwrap...${ac_cv_lib_wrap_hosts_access}"
        echo "*"
        echo "*>>> Continuing without tcp wrappers"
        echo "*"
        echo "*???     1. Install the tcp wrappers library/header and rerun"
        echo "*           ./configure"
        echo "*"
        echo "*******************************************************************"
        echo
        HAS_WARNING="yes"
    fi
fi

dnl> xmldump:
AC_MSG_CHECKING([for xmldump])
if test ".${ac_cv_header_glib_h}" = ".yes"            &&
   test ".${ac_cv_header_glibconfig_h}" = ".yes"      &&
   test ".${ac_cv_header_xmlversion_h}" = ".yes"      &&
   test ".${ac_cv_header_gdome_h}" = ".yes"           &&
   test ".${ac_cv_lib_glib_g_date_julian}" = ".yes"   &&
   test ".${ac_cv_lib_xml2_xmlCheckVersion}" = ".yes" &&
   test ".${ac_cv_lib_gdome_gdome_di_saveDocToFile}" = ".yes"; then
    AC_MSG_RESULT(ok)
else
    AC_MSG_WARN(error)
    echo
    echo "*******************************************************************"
    echo "*"
    echo "* WARNING:  One or more items required for the xmldump plugin are "
    echo "*           missing:"
    echo "*"
    echo "*                  xmlversion.h...${ac_cv_header_xmlversion_h}"
    echo "*                  libxml2.so or libxml2.a...${ac_cv_lib_xml2_xmlCheckVersion}"
    echo "*                  gdome.h...${ac_cv_header_gdome_h}"
    echo "*                  libgdome.so or libgdome.a...${ac_cv_lib_gdome_gdome_di_saveDocToFile}"
    echo "*                  glib.h...${ac_cv_header_glib_h}"
    echo "*                  libglib.so or libglib.a...${ac_cv_lib_glib_g_date_julian}"
    echo "*                  glibconfig.h...${ac_cv_header_glibconfig_h}"
    echo "*"
    echo "*           (yes means it was found, no means it was not found)"
    echo "*"
    echo "*       ntop will run just fine without this plugin."
    echo "*"
    echo "*>>>    If you want to use the xmldump plugin,"
    echo "*"
    echo "*???     1. Install the necessary headers and libraries."
    echo "*???    and rerun ./configure"
    echo "*"
    echo "*******************************************************************"
    echo
    HAS_WARNING="yes"
fi


dnl> Test for pthread_atfork()
if test ".${ac_cv_header_pthread_h}" = ".yes"; then
    AC_MSG_CHECKING([pthread_atfork])
    AC_TRY_LINK([
        #include "confdefs.h"
        #include <pthread.h>],
        [pthread_atfork(NULL, NULL, NULL);],
        AC_DEFINE_UNQUOTED(HAVE_PTHREAD_ATFORK, 
                                1, 
                                [pthread_atfork() exists])
        AC_MSG_RESULT(yes)
        ac_has_pthread_atfork=yes,
        AC_MSG_RESULT(no)
        ac_has_pthread_atfork=no)
else
    ac_has_pthread_atfork=no
fi

echo
echo "Miscelaneous settings..."
echo

dnl>
dnl> GNU gcc backtrace?
dnl>
AC_MSG_CHECKING([for gcc backtrace])
if test ".${ac_cv_lib_c_backtrace}" = ".yes"; then
    AC_MSG_RESULT([found - automatic SIGSEGV backtrace enabled via -K])
    AC_DEFINE_UNQUOTED(HAVE_BACKTRACE, 1, [backtrace() is available])
else
    AC_MSG_RESULT([not found])
fi

dnl>
dnl> getopt_long?
dnl>
AC_MSG_CHECKING([for gcc getopt_long])
if test ".${ac_cv_lib_c_getopt_long}" = ".yes"; then
    AC_MSG_RESULT([found - long command line options are enabled])
else
    AC_MSG_RESULT([not found - long command line options are enabled using ntop code])
    echo
    echo "*******************************************************************"
    echo "*"      
    echo "* NOTE: getopt_long does not appear to be provided on this system."
    echo "*"
    echo "*>>>    No worries - activating our built-in (libiberty) version."
    echo "*>>>    ntop should work properly."
    echo "*"      
    echo "*******************************************************************"
    echo
fi

dnl>
dnl> Test for facilitynames
dnl>
if test ".${ac_cv_header_sys_syslog_h}" = ".yes" ||
   test ".${ac_cv_header_syslog_h}"     = ".yes" ; then
    AC_MSG_CHECKING([for facilitynames - define SYSLOG_NAMES option])
    AC_TRY_COMPILE([
        #include "confdefs.h"
        #include <stdarg.h>
        #include <stdio.h>
        #define SYSLOG_NAMES
        #if defined(HAVE_SYS_SYSLOG_H)
        #include <sys/syslog.h>
        #elif defined(HAVE_SYSLOG_H)
        #include <syslog.h>
        #endif],
        [void * x = (void*) &(facilitynames[0]);],
        AC_MSG_RESULT(available)
        AC_DEFINE_UNQUOTED(HAVE_FACILITYNAMES, 
                           1, 
                           [glibc syslog.h or sys/syslog.h with facilitynames[] option]),
        AC_MSG_RESULT(unavailable))
fi

dnl>
dnl> Test ether_header has ea
dnl>
AC_MSG_CHECKING([if ether_header uses ether_addr structs])
AC_TRY_COMPILE([
#       include <sys/types.h>
#       if __STDC__
        /* osf3 has REALLY good prototyes */
        struct mbuf;
        struct rtentry;
#       endif
#       include <sys/socket.h>
#       include <net/if.h>
#       include <netinet/in.h>
#       include <netinet/if_ether.h>],
    [u_int i =
         sizeof(((struct ether_header *)0)->ether_dhost.ether_addr_octet)],
    [AC_MSG_RESULT(yes)
     AC_DEFINE_UNQUOTED(CFG_ETHER_HEADER_HAS_EA, 
                        1, 
                        [ether_header uses ether_addr structs])],
    [AC_MSG_RESULT(no)])

dnl>
dnl> check for ip6 address used by sFlow...
dnl>
if test "${ac_disable_plugins}" != ".yes"; then
    AC_MSG_CHECKING([if in6_addr is defined for sFlowPlugin])
    AC_TRY_COMPILE([
#       include <sys/types.h>
#       include <netinet/in.h>
#       include <netinet/in_systm.h>
#       include <sys/socket.h>
#       include <netinet/ip.h>
        ],
        [struct in6_addr tmp;],
        [AC_MSG_RESULT(yes)
         AC_DEFINE_UNQUOTED(HAVE_IN6_ADDR, 
                            1, 
                            [For sFlowPlugin.c to define in6_addr for environments without it.])],
        [AC_MSG_RESULT(no)])
fi

dnl>
dnl> Temporary
dnl>
AC_DEFINE_UNQUOTED(RETSIGTYPE, void, [temporary definition])

dnl>
dnl> Finish up...
dnl>
if test ".${CCLD}" = "."; then
    CCLD=${CC}
fi

dnl> Append RRD finally
NTOP_APPENDS([${MYRRD}], [${MYRRD}], [myrrd])

echo
echo "-------------------------------------------------------------------"
echo
echo "Removing dups and misplaced entries from LIBS and INCS..."
LIBS=`echo ${LIBS} | ${ac_cv_prog_AWK} '{ \
    for(i=NF; i>0; i--) { \
        if ($i in fields) { } else { fields[[$i]]="."; out[[i]]=$i } \
    } \
    for(i=1; i<=NF; i++) { \
        if (i in out) { printf("%s ", out[[i]]) } \
    } \
    print "" \
}'`
INCS=`echo ${INCS} | ${ac_cv_prog_AWK} '{ \
    for(i=NF; i>0; i--) { \
        if ($i in fields) { } else { fields[[$i]]="."; out[[i]]=$i } \
    } \
    for(i=1; i<=NF; i++) { \
        if (i in out) { printf("%s ", out[[i]]) } \
    } \
    print "" \
}'`

NTOPCONFIGDEBUG_SETTINGS([precet])

if test -d ./configureextra; then

    dnl> If there is a os/distro/release specific file (additional settings),
    dnl> run it. Go from least specific to most specific, running ANY that match.
    dnl> E.g. 'solaris 8' will match solaris 1st then solaris8.

    echo ""
    echo "Testing for special final configuration options for ${DEFINEOS} ${DISTRO} ${RELEASE}"
   
    if test -f ./configureextra/final_${DEFINEOS}; then
        echo ""
        echo "    Executing configureextra/final_${DEFINEOS}"
        . ./configureextra/final_${DEFINEOS}
        echo ""
    fi
    if test ".${DISTRO}" != "."; then
        if test -f ./configureextra/final_${DEFINEOS}${DISTRO}; then
            echo ""
            echo "    Executing configureextra/final_${DEFINEOS}${DISTRO}"
            . ./configureextra/final_${DEFINEOS}${DISTRO}
            echo ""
        fi
        if test ".${RELEASE}" != "." &&
           test -f ./configureextra/final_${DEFINEOS}${DISTRO}${RELEASE}; then
            echo ""
            echo "    Executing configureextra/final_${DEFINEOS}${DISTRO}${RELEASE}"
            . ./configureextra/final_${DEFINEOS}${DISTRO}${RELEASE}
            echo ""
        fi
    else
        if test ".${RELEASE}" != "." &&
           test -f ./configureextra/final_${DEFINEOS}${RELEASE}; then
            echo ""
            echo "    Executing configureextra/final_${DEFINEOS}${RELEASE}"
            . ./configureextra/final_${DEFINEOS}${RELEASE}
            echo ""
        fi
    fi
fi

NTOPCONFIGDEBUG_SETTINGS([final])

echo
echo "==================================================================="
echo
echo "This is your $PACKAGE $VERSION configuration:"
echo
echo "Host System Type        : ${host}"
if test ".${build_alias}" != .; then
    echo "                        Note: --build=${build_alias} specified"
fi
echo "Preprocessor (cppflags) : ${CPPFLAGS}"
echo "Compiler (cflags)       : ${CC} ${CFLAGS}"
echo "Defines                 : ${DEFS}"
echo "Loader (ldflags)        : ${LDFLAGS}"
echo "Include path            : ${INCS}"
echo "System Libs             : ${LIBS}"
echo "MultiThread mode        : ${multithread_mode}"
echo "Locale                  : ${LOCALEDIR}"
echo 
echo "External packages:"
echo
NTOP_RPT_LOC([LBL pcap], [${PCAP_LIB}], [${PCAP_INCLUDE}])
NTOP_RPT_LOC([GNU gdbm], [${GDBM_LIB}], [${GDBM_INCLUDE}])
if test ".${ac_disable_zlib}" != ".yes"; then
    NTOP_RPT_LOC([zlib    ], [${ZLIB_LIB}], [${ZLIB_INCLUDE}])
fi
NTOP_RPT_LOC([gd      ], [${GD_LIB}],   [${GD_INCLUDE}])
NTOP_RPT_LOC([png     ], [${PNG_LIB}],  [${PNG_INCLUDE}])
if test ".${ac_disable_openssl}" != ".yes"; then
    NTOP_RPT_LOC([openSSL ], [${OSSL_LIB}], [${OSSL_INCLUDE}])
fi

echo
echo "Install directories:"
echo
echo "    Default prefix: ${ac_default_prefix}"
echo "    Install into:   ${prefix} (default or via --prefix request)"
echo 

CFG_DATAFILE_DIR=$datadir/ntop
CFG_DATAFILE_DIR=`(
    test "x$prefix" = xNONE && prefix=${ac_default_prefix}
    eval echo "$CFG_DATAFILE_DIR"
)`
AC_DEFINE_UNQUOTED(CFG_DATAFILE_DIR,"$CFG_DATAFILE_DIR", [Data file directory])
echo "    Data files are in     $CFG_DATAFILE_DIR"

CFG_CONFIGFILE_DIR=$sysconfdir/ntop
CFG_CONFIGFILE_DIR=`(
    test "x$prefix" = xNONE && prefix=${ac_default_prefix}
    eval echo "$CFG_CONFIGFILE_DIR"
)`
AC_DEFINE_UNQUOTED(CFG_CONFIGFILE_DIR,"$CFG_CONFIGFILE_DIR", [Configuration file directory])
echo "    Config files are in   $CFG_CONFIGFILE_DIR"

CFG_RUN_DIR=$localstatedir/ntop
CFG_RUN_DIR=`(
    test "x$prefix" = xNONE && prefix=${ac_default_prefix}
    eval echo "$CFG_RUN_DIR"
)`
AC_DEFINE_UNQUOTED(CFG_RUN_DIR,"$CFG_RUN_DIR", [Run files directory])
echo "    Run directory is      $CFG_RUN_DIR"

CFG_PLUGIN_DIR=$libdir/ntop/plugins
CFG_PLUGIN_DIR=`(
  test "x$prefix" = xNONE && prefix=${ac_default_prefix}
  test "x$exec_prefix" = xNONE && exec_prefix=${prefix}
  eval echo "$CFG_PLUGIN_DIR"
)`
AC_DEFINE_UNQUOTED(CFG_PLUGIN_DIR,"$CFG_PLUGIN_DIR", [Plugin installation directory])
echo "    Plugin files are in   $CFG_PLUGIN_DIR"

CFG_DBFILE_DIR=$localstatedir/ntop
CFG_DBFILE_DIR=`(
  test "x$prefix" = xNONE && prefix=${ac_default_prefix}
  eval echo "$CFG_DBFILE_DIR"
)`
AC_DEFINE_UNQUOTED(CFG_DBFILE_DIR,"$CFG_DBFILE_DIR", [Database file directory])
echo "    Database files are in $CFG_DBFILE_DIR"

echo
echo "-------------------------------------------------------------------"
echo
echo "Creating files..."
echo
AC_SUBST(AS)
AC_SUBST(CCLD)
AC_SUBST(CFG_CONFIGFILE_DIR)
AC_SUBST(CFG_DATAFILE_DIR)
AC_SUBST(CFG_DBFILE_DIR)
AC_SUBST(DEFS)
AC_SUBST(DLLTOOL)
AC_SUBST(DYN_FLAGS)
AC_SUBST(EXEEXT)
AC_SUBST(INCS)
AC_SUBST(SNMP_LIBS)
AC_SUBST(LIBTOOL_DEPS)
AC_SUBST(MAKE_SHARED_LIBRARY_PARM)
AC_SUBST(NTOP_VERSION_EXTRA)
AC_SUBST(OBJDUMP)
AC_SUBST(OBJEXT)
AC_SUBST(CFG_PLUGIN_DIR)
AC_SUBST(PLUGINS)
AC_SUBST(CFG_RUN_DIR)
AC_SUBST(SCRIPTVER)
AC_SUBST(SO_VERSION_PATCH)

AC_CONFIG_FILES([Makefile])
AC_CONFIG_FILES([myrrd/Makefile])

if test ".${ac_disable_plugins}" != ".yes"; then
    AC_CONFIG_FILES([plugins/Makefile])
dnl>    AC_CONFIG_FILES([plugins/pep/Makefile])
fi

AC_OUTPUT

echo
echo "version.c..."
echo
/bin/rm -f version.c
echo $PACKAGE_VERSION $NTOP_VERSION_EXTRA  | sed -e 's/.*/char * version   = "&";/' > version.c
osName=`./config.guess`
echo "${osName}" | sed -e 's/.*/char * osName    = "&";/' >> version.c
echo "char * author    = \"Luca Deri <deri@ntop.org>\";" >> version.c
dnl> This is an odd format, but it matches cpp's __DATE__ and __TIME__ macros...
date +"%b %e %Y %k:%M:%S" | sed -e 's/.*/char * configureDate = "&";/' >> version.c
echo "#define buildDateIs __DATE__ \" \" __TIME__"  >> version.c
echo "char * buildDate    = buildDateIs;" >> version.c
echo $CONFIGURE_PARAMETERS | sed -e 's/.*/char * configure_parameters   = "&";/' >> version.c
echo ${host} | sed -e 's/.*/char * host_system_type   = "&";/' >> version.c
echo ${target} | sed -e 's/.*/char * target_system_type   = "&";/' >> version.c
echo ${CC} ${CFLAGS} ${DEFS} | sed -e 's/.*/char * compiler_cflags   = "&";/' >> version.c
echo ${INCS} | sed -e 's/.*/char * include_path    = "&";/' >> version.c
echo ${LDFLAGS} ${LIBS} | sed -e 's/.*/char * system_libs    = "&";/' >> version.c
echo ${prefix} | sed -e 's/.*/char * install_path   = "&";/' >> version.c
echo "/*i18n*/" >>version.c
echo ${LOCALEDIR} | sed -e 's/.*/char * locale_dir   = "&";/' >> version.c
echo ${DISTRO} | sed -e 's/.*/char * distro   = "&";/' >> version.c
echo ${RELEASE} | sed -e 's/.*/char * release   = "&";/' >> version.c
echo ${FORCE_RUNTIME_PARM} | sed -e 's/.*/char * force_runtime   = "&";/' >> version.c

case "${host}" in
    *darwin* )
        echo
	echo "Copying patched versions of some configure-related files for Mac OS X"
        cp packages/MacOSX/lt* .
	rm -f libtool
	ln -s  /usr/bin/glibtool libtool
        echo
        ;;
esac

echo
echo "==================================================================="
echo
echo
echo "*******************************************************************"
echo "*"
echo "* NOTE: ./configure is now complete!"
echo "*"
echo "*       All of the obviously FATAL errors would cause you to"
echo "*       abort before this point, so while you SHOULD scroll"
echo "*       back and check for error/warning/note messages,"
echo "*       you probably will not..."
echo "*"
echo "++"
echo "++    If you like ntop, please do not forget to support its"
echo "++    development. See SUPPORT_NTOP.txt for more information."
echo "++"
echo "++              Thanks for supporting ntop!"
echo "++"
echo "*"
echo "* NEXT STEP(S):"

case "${target}:${CC}" in
  *-*-freebsd[[45]]*:*gcc* )
    echo "*"
    echo "*WARNING: You may encounter a problem building ntop for this OS!"
    echo "*"
    case "${target}:${CC}" in
      *-*-freebsd5*:*gcc* )
        echo "*FreeBSD5: Where the following messages are repeated many times:"
        echo "*FreeBSD5: "
        echo "*FreeBSD5:    expr: illegal option -- l"
        echo "*FreeBSD5:    usage: expr [-e] expression"
        echo "*FreeBSD5: "
        echo "*FreeBSD5: To avoid this, according to the note on man expr," 
        echo "*FreeBSD5: \"Compatibility with previous implementations\","
        echo "*FreeBSD5: set the flag EXPR_COMPAT before typing make."
        echo "*FreeBSD5: "
        echo "*FreeBSD5: (Under bash, \$ export EXPR_COMPAT=Y will suffice.)"
        echo "*"
        ;;
    esac
    echo "*FreeBSD4,5: Do not use the -j option (e.g. make -j2) to try to make "
    echo "*FreeBSD4,5: ntop in parallel."
    echo "*FreeBSD4,5: "
    echo "*FreeBSD4,5: Although the plugins/Makefile contains the .NOTPARALLEL tag"
    echo "*FreeBSD4,5: it seems that it's not respected.  If you make in parallel,"
    echo "*FreeBSD4,5: you will see the following errors:"
    echo "*FreeBSD4,5: "
    echo "*FreeBSD4,5:      Making all in plugins"
    echo "*FreeBSD4,5:      Making all in ."
    echo "*FreeBSD4,5:      gcc -bundle -flat_namespace -undefined suppress -o .libs/libicmpPlugin.so icmpPlugin.o"
    echo "*FreeBSD4,5:      gcc: suppress: No such file or directory"
    echo "*FreeBSD4,5: "
    echo "*FreeBSD4,5:      etc."
    echo "*FreeBSD4,5: "
    echo "*"
    ;;
esac

if test ".${HAS_ERROR}" = ".yes"; then
    echo "*"
    echo "*>>>>  An ERROR has occured - please review the output before"
    echo "*>>>>  continuing to make ntop!"
elif test ".${HAS_WARNING}" = ".yes"; then
    echo "*"
    echo "*>>>>  A WARNING message was generated - please review the"
    echo "*>>>>  output before continuing to make ntop!"
fi

echo "*"
echo "*    Building ntop requires GNU Make, so to build ntop, type"
if test ".${ac_enable_static_plugins}" = ".yes"; then
    echo "*    'make sntop' (or on *BSD and Solaris systems, 'gmake sntop')"
else
    echo "*    'make' (or on *BSD and Solaris systems, 'gmake')"
fi
echo "*"
echo "*******************************************************************"
echo

exit 0
