# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

#
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# auto makefile for the ntop plugins.
# (this file is processed with 'automake' to produce Makefile.in)
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#
# Luca Deri     <deri@ntop.org>
# Rocco Carbone <rocco@ntop.org>
#
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
ACLOCAL = @ACLOCAL@
AMDEPBACKSLASH = @AMDEPBACKSLASH@
AMTAR = @AMTAR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCLD = @CCLD@
CFG_CONFIGFILE_DIR = @CFG_CONFIGFILE_DIR@
CFG_DATAFILE_DIR = @CFG_DATAFILE_DIR@
CFG_DBFILE_DIR = @CFG_DBFILE_DIR@
CFG_PLUGIN_DIR = @CFG_PLUGIN_DIR@
CFG_RUN_DIR = @CFG_RUN_DIR@
CPP = @CPP@
CXX = @CXX@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DYN_FLAGS = @DYN_FLAGS@
EXEEXT = @EXEEXT@
INCS = @INCS@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LIBTOOL = @LIBTOOL@
LIBTOOL_DEPS = @LIBTOOL_DEPS@
LN_S = @LN_S@
MAKEINFO = @MAKEINFO@
MAKE_SHARED_LIBRARY_PARM = @MAKE_SHARED_LIBRARY_PARM@
NTOP_VERSION_EXTRA = @NTOP_VERSION_EXTRA@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PLUGINS = @PLUGINS@
RANLIB = @RANLIB@
SCRIPTVER = @SCRIPTVER@
SNMP_LIBS = @SNMP_LIBS@
SO_VERSION_PATCH = @SO_VERSION_PATCH@
STRIP = @STRIP@
VERSION = @VERSION@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
install_sh = @install_sh@
mkdir_p = @mkdir_p@

SUBDIRS = . # pep

PLUGIN_DIST_COMMON = Makefile.am Makefile.in
CLEANFILES = xml_*.inc
EXTRA_DIST = 

SUFFIXES = .so

# 
# Where to install the plugin 
# 
plugindir = $(libdir)/ntop/plugins

INCLUDES = -I.. @INCS@ -I../myrrd

#
# The meat for ntop
#
noinst_PROGRAMS =                    icmpPlugin.so                   lastSeenPlugin.so                   netflowPlugin.so                   pdaPlugin.so                   rrdPlugin.so                   snmpPlugin.so                   sflowPlugin.so                   xmldumpPlugin.so


lib_LTLIBRARIES =                    libicmpPlugin.la                   liblastSeenPlugin.la                   libnetflowPlugin.la                   libpdaPlugin.la                   librrdPlugin.la                   libsnmpPlugin.la                   libsflowPlugin.la                   libxmldumpPlugin.la


libicmpPlugin_la_SOURCES = icmpPlugin.c
libicmpPlugin_la_LDFLAGS = -shared -release @PACKAGE_VERSION@ @DYN_FLAGS@
libicmpPlugin_la_CFLAGS = $(AM_CFLAGS)

liblastSeenPlugin_la_SOURCES = lastSeenPlugin.c
liblastSeenPlugin_la_LDFLAGS = -shared -release @PACKAGE_VERSION@ @DYN_FLAGS@
liblastSeenPlugin_la_CFLAGS = $(AM_CFLAGS)

libnetflowPlugin_la_SOURCES = netflowPlugin.c
libnetflowPlugin_la_LDFLAGS = -shared -release @PACKAGE_VERSION@ @DYN_FLAGS@
libnetflowPlugin_la_CFLAGS = $(AM_CFLAGS)

libpdaPlugin_la_SOURCES = pdaPlugin.c
libpdaPlugin_la_LDFLAGS = -shared -release @PACKAGE_VERSION@ @DYN_FLAGS@
libpdaPlugin_la_CFLAGS = $(AM_CFLAGS)

librrdPlugin_la_SOURCES = rrdPlugin.c
librrdPlugin_la_LDFLAGS = -shared -release @PACKAGE_VERSION@ @DYN_FLAGS@
librrdPlugin_la_LIBADD = -L../myrrd/ -lmyrrd
librrdPlugin_la_CFLAGS = $(AM_CFLAGS)

libsnmpPlugin_la_SOURCES = snmpPlugin.c
libsnmpPlugin_la_LDFLAGS = -shared -release @PACKAGE_VERSION@ @DYN_FLAGS@
libsnmpPlugin_la_LIBADD = @SNMP_LIBS@
libsnmpPlugin_la_CFLAGS = $(AM_CFLAGS)

libsflowPlugin_la_SOURCES = sflowPlugin.c
libsflowPlugin_la_LDFLAGS = -shared -release @PACKAGE_VERSION@ @DYN_FLAGS@
libsflowPlugin_la_CFLAGS = $(AM_CFLAGS)

libxmldumpPlugin_la_SOURCES = xmldumpPlugin.c
libxmldumpPlugin_la_LDFLAGS = -shared -release @PACKAGE_VERSION@ @DYN_FLAGS@
libxmldumpPlugin_la_CFLAGS = $(AM_CFLAGS)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h ../$@)]
CONFIG_CLEAN_FILES = 
LTLIBRARIES =  $(lib_LTLIBRARIES)

CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
libicmpPlugin_la_LIBADD = 
libicmpPlugin_la_OBJECTS =  icmpPlugin.lo
liblastSeenPlugin_la_LIBADD = 
liblastSeenPlugin_la_OBJECTS =  lastSeenPlugin.lo
libnetflowPlugin_la_LIBADD = 
libnetflowPlugin_la_OBJECTS =  netflowPlugin.lo
libpdaPlugin_la_LIBADD = 
libpdaPlugin_la_OBJECTS =  pdaPlugin.lo
librrdPlugin_la_DEPENDENCIES = 
librrdPlugin_la_OBJECTS =  rrdPlugin.lo
libsnmpPlugin_la_DEPENDENCIES = 
libsnmpPlugin_la_OBJECTS =  snmpPlugin.lo
libsflowPlugin_la_LIBADD = 
libsflowPlugin_la_OBJECTS =  sflowPlugin.lo
libxmldumpPlugin_la_LIBADD = 
libxmldumpPlugin_la_OBJECTS =  xmldumpPlugin.lo
PROGRAMS =  $(noinst_PROGRAMS)

icmpPlugin_so_SOURCES = icmpPlugin.so.c
icmpPlugin_so_OBJECTS =  icmpPlugin.so.o
icmpPlugin_so_LDADD = $(LDADD)
icmpPlugin_so_DEPENDENCIES = 
icmpPlugin_so_LDFLAGS = 
lastSeenPlugin_so_SOURCES = lastSeenPlugin.so.c
lastSeenPlugin_so_OBJECTS =  lastSeenPlugin.so.o
lastSeenPlugin_so_LDADD = $(LDADD)
lastSeenPlugin_so_DEPENDENCIES = 
lastSeenPlugin_so_LDFLAGS = 
netflowPlugin_so_SOURCES = netflowPlugin.so.c
netflowPlugin_so_OBJECTS =  netflowPlugin.so.o
netflowPlugin_so_LDADD = $(LDADD)
netflowPlugin_so_DEPENDENCIES = 
netflowPlugin_so_LDFLAGS = 
pdaPlugin_so_SOURCES = pdaPlugin.so.c
pdaPlugin_so_OBJECTS =  pdaPlugin.so.o
pdaPlugin_so_LDADD = $(LDADD)
pdaPlugin_so_DEPENDENCIES = 
pdaPlugin_so_LDFLAGS = 
rrdPlugin_so_SOURCES = rrdPlugin.so.c
rrdPlugin_so_OBJECTS =  rrdPlugin.so.o
rrdPlugin_so_LDADD = $(LDADD)
rrdPlugin_so_DEPENDENCIES = 
rrdPlugin_so_LDFLAGS = 
snmpPlugin_so_SOURCES = snmpPlugin.so.c
snmpPlugin_so_OBJECTS =  snmpPlugin.so.o
snmpPlugin_so_LDADD = $(LDADD)
snmpPlugin_so_DEPENDENCIES = 
snmpPlugin_so_LDFLAGS = 
sflowPlugin_so_SOURCES = sflowPlugin.so.c
sflowPlugin_so_OBJECTS =  sflowPlugin.so.o
sflowPlugin_so_LDADD = $(LDADD)
sflowPlugin_so_DEPENDENCIES = 
sflowPlugin_so_LDFLAGS = 
xmldumpPlugin_so_SOURCES = xmldumpPlugin.so.c
xmldumpPlugin_so_OBJECTS =  xmldumpPlugin.so.o
xmldumpPlugin_so_LDADD = $(LDADD)
xmldumpPlugin_so_DEPENDENCIES = 
xmldumpPlugin_so_LDFLAGS = 
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP_ENV = --best
DEP_FILES =  .deps/icmpPlugin.P .deps/icmpPlugin.so.P \
.deps/lastSeenPlugin.P .deps/lastSeenPlugin.so.P .deps/netflowPlugin.P \
.deps/netflowPlugin.so.P .deps/pdaPlugin.P .deps/pdaPlugin.so.P \
.deps/rrdPlugin.P .deps/rrdPlugin.so.P .deps/sflowPlugin.P \
.deps/sflowPlugin.so.P .deps/snmpPlugin.P .deps/snmpPlugin.so.P \
.deps/xmldumpPlugin.P .deps/xmldumpPlugin.so.P
SOURCES = $(libicmpPlugin_la_SOURCES) $(liblastSeenPlugin_la_SOURCES) $(libnetflowPlugin_la_SOURCES) $(libpdaPlugin_la_SOURCES) $(librrdPlugin_la_SOURCES) $(libsnmpPlugin_la_SOURCES) $(libsflowPlugin_la_SOURCES) $(libxmldumpPlugin_la_SOURCES) icmpPlugin.so.c lastSeenPlugin.so.c netflowPlugin.so.c pdaPlugin.so.c rrdPlugin.so.c snmpPlugin.so.c sflowPlugin.so.c xmldumpPlugin.so.c
OBJECTS = $(libicmpPlugin_la_OBJECTS) $(liblastSeenPlugin_la_OBJECTS) $(libnetflowPlugin_la_OBJECTS) $(libpdaPlugin_la_OBJECTS) $(librrdPlugin_la_OBJECTS) $(libsnmpPlugin_la_OBJECTS) $(libsflowPlugin_la_OBJECTS) $(libxmldumpPlugin_la_OBJECTS) icmpPlugin.so.o lastSeenPlugin.so.o netflowPlugin.so.o pdaPlugin.so.o rrdPlugin.so.o snmpPlugin.so.o sflowPlugin.so.o xmldumpPlugin.so.o

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .s .so
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu plugins/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-libLTLIBRARIES:

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)

distclean-libLTLIBRARIES:

maintainer-clean-libLTLIBRARIES:

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libicmpPlugin.la: $(libicmpPlugin_la_OBJECTS) $(libicmpPlugin_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(libicmpPlugin_la_LDFLAGS) $(libicmpPlugin_la_OBJECTS) $(libicmpPlugin_la_LIBADD) $(LIBS)

liblastSeenPlugin.la: $(liblastSeenPlugin_la_OBJECTS) $(liblastSeenPlugin_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(liblastSeenPlugin_la_LDFLAGS) $(liblastSeenPlugin_la_OBJECTS) $(liblastSeenPlugin_la_LIBADD) $(LIBS)

libnetflowPlugin.la: $(libnetflowPlugin_la_OBJECTS) $(libnetflowPlugin_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(libnetflowPlugin_la_LDFLAGS) $(libnetflowPlugin_la_OBJECTS) $(libnetflowPlugin_la_LIBADD) $(LIBS)

libpdaPlugin.la: $(libpdaPlugin_la_OBJECTS) $(libpdaPlugin_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(libpdaPlugin_la_LDFLAGS) $(libpdaPlugin_la_OBJECTS) $(libpdaPlugin_la_LIBADD) $(LIBS)

librrdPlugin.la: $(librrdPlugin_la_OBJECTS) $(librrdPlugin_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(librrdPlugin_la_LDFLAGS) $(librrdPlugin_la_OBJECTS) $(librrdPlugin_la_LIBADD) $(LIBS)

libsnmpPlugin.la: $(libsnmpPlugin_la_OBJECTS) $(libsnmpPlugin_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(libsnmpPlugin_la_LDFLAGS) $(libsnmpPlugin_la_OBJECTS) $(libsnmpPlugin_la_LIBADD) $(LIBS)

libsflowPlugin.la: $(libsflowPlugin_la_OBJECTS) $(libsflowPlugin_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(libsflowPlugin_la_LDFLAGS) $(libsflowPlugin_la_OBJECTS) $(libsflowPlugin_la_LIBADD) $(LIBS)

libxmldumpPlugin.la: $(libxmldumpPlugin_la_OBJECTS) $(libxmldumpPlugin_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(libxmldumpPlugin_la_LDFLAGS) $(libxmldumpPlugin_la_OBJECTS) $(libxmldumpPlugin_la_LIBADD) $(LIBS)

mostlyclean-noinstPROGRAMS:

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)

distclean-noinstPROGRAMS:

maintainer-clean-noinstPROGRAMS:

icmpPlugin.so: $(icmpPlugin_so_OBJECTS) $(icmpPlugin_so_DEPENDENCIES)
	@rm -f icmpPlugin.so
	$(LINK) $(icmpPlugin_so_LDFLAGS) $(icmpPlugin_so_OBJECTS) $(icmpPlugin_so_LDADD) $(LIBS)

lastSeenPlugin.so: $(lastSeenPlugin_so_OBJECTS) $(lastSeenPlugin_so_DEPENDENCIES)
	@rm -f lastSeenPlugin.so
	$(LINK) $(lastSeenPlugin_so_LDFLAGS) $(lastSeenPlugin_so_OBJECTS) $(lastSeenPlugin_so_LDADD) $(LIBS)

netflowPlugin.so: $(netflowPlugin_so_OBJECTS) $(netflowPlugin_so_DEPENDENCIES)
	@rm -f netflowPlugin.so
	$(LINK) $(netflowPlugin_so_LDFLAGS) $(netflowPlugin_so_OBJECTS) $(netflowPlugin_so_LDADD) $(LIBS)

pdaPlugin.so: $(pdaPlugin_so_OBJECTS) $(pdaPlugin_so_DEPENDENCIES)
	@rm -f pdaPlugin.so
	$(LINK) $(pdaPlugin_so_LDFLAGS) $(pdaPlugin_so_OBJECTS) $(pdaPlugin_so_LDADD) $(LIBS)

rrdPlugin.so: $(rrdPlugin_so_OBJECTS) $(rrdPlugin_so_DEPENDENCIES)
	@rm -f rrdPlugin.so
	$(LINK) $(rrdPlugin_so_LDFLAGS) $(rrdPlugin_so_OBJECTS) $(rrdPlugin_so_LDADD) $(LIBS)

snmpPlugin.so: $(snmpPlugin_so_OBJECTS) $(snmpPlugin_so_DEPENDENCIES)
	@rm -f snmpPlugin.so
	$(LINK) $(snmpPlugin_so_LDFLAGS) $(snmpPlugin_so_OBJECTS) $(snmpPlugin_so_LDADD) $(LIBS)

sflowPlugin.so: $(sflowPlugin_so_OBJECTS) $(sflowPlugin_so_DEPENDENCIES)
	@rm -f sflowPlugin.so
	$(LINK) $(sflowPlugin_so_LDFLAGS) $(sflowPlugin_so_OBJECTS) $(sflowPlugin_so_LDADD) $(LIBS)

xmldumpPlugin.so: $(xmldumpPlugin_so_OBJECTS) $(xmldumpPlugin_so_DEPENDENCIES)
	@rm -f xmldumpPlugin.so
	$(LINK) $(xmldumpPlugin_so_LDFLAGS) $(xmldumpPlugin_so_OBJECTS) $(xmldumpPlugin_so_LDADD) $(LIBS)

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.

@SET_MAKE@

all-recursive install-data-recursive install-exec-recursive \
installdirs-recursive install-recursive uninstall-recursive  \
check-recursive installcheck-recursive info-recursive dvi-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	rev=''; list='$(SUBDIRS)'; for subdir in $$list; do \
	  rev="$$subdir $$rev"; \
	  test "$$subdir" != "." || dot_seen=yes; \
	done; \
	test "$$dot_seen" = "no" && rev=". $$rev"; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
   if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
   fi; \
	done; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags -o $$here/TAGS $(ETAGS_ARGS) $$tags  $$unique $(LISP))

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = plugins

distdir: $(DISTFILES)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(top_distdir) && pwd`; \
	distdir=`cd $(distdir) && pwd`; \
	cd $(top_srcdir) \
	  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --gnu plugins/Makefile
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	for subdir in $(SUBDIRS); do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    chmod 777 $(distdir)/$$subdir; \
	    (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir=../$(top_distdir) distdir=../$(distdir)/$$subdir distdir) \
	      || exit 1; \
	  fi; \
	done

DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)

-include $(DEP_FILES)

mostlyclean-depend:

clean-depend:

distclean-depend:
	-rm -rf .deps

maintainer-clean-depend:

%.o: %.c
	@echo '$(COMPILE) -c $<'; \
	$(COMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.c
	@echo '$(LTCOMPILE) -c $<'; \
	$(LTCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp
info-am:
info: info-recursive
dvi-am:
dvi: dvi-recursive
check-am: all-am
check: check-recursive
installcheck-am:
installcheck: installcheck-recursive
install-exec-am: install-libLTLIBRARIES
install-exec: install-exec-recursive

install-data-am: install-data-local
install-data: install-data-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-recursive
uninstall-am: uninstall-libLTLIBRARIES
uninstall: uninstall-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
all-redirect: all-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs)  $(DESTDIR)$(libdir)


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-libLTLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-noinstPROGRAMS \
		mostlyclean-tags mostlyclean-depend mostlyclean-generic

mostlyclean: mostlyclean-recursive

clean-am:  clean-libLTLIBRARIES clean-compile clean-libtool \
		clean-noinstPROGRAMS clean-tags clean-depend \
		clean-generic mostlyclean-am

clean: clean-recursive

distclean-am:  distclean-libLTLIBRARIES distclean-compile \
		distclean-libtool distclean-noinstPROGRAMS \
		distclean-tags distclean-depend distclean-generic \
		clean-am
	-rm -f libtool

distclean: distclean-recursive

maintainer-clean-am:  maintainer-clean-libLTLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-noinstPROGRAMS maintainer-clean-tags \
		maintainer-clean-depend maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-recursive

.PHONY: mostlyclean-libLTLIBRARIES distclean-libLTLIBRARIES \
clean-libLTLIBRARIES maintainer-clean-libLTLIBRARIES \
uninstall-libLTLIBRARIES install-libLTLIBRARIES mostlyclean-compile \
distclean-compile clean-compile maintainer-clean-compile \
mostlyclean-libtool distclean-libtool clean-libtool \
maintainer-clean-libtool mostlyclean-noinstPROGRAMS \
distclean-noinstPROGRAMS clean-noinstPROGRAMS \
maintainer-clean-noinstPROGRAMS install-data-recursive \
uninstall-data-recursive install-exec-recursive \
uninstall-exec-recursive installdirs-recursive uninstalldirs-recursive \
all-recursive check-recursive installcheck-recursive info-recursive \
dvi-recursive mostlyclean-recursive distclean-recursive clean-recursive \
maintainer-clean-recursive tags tags-recursive mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir \
mostlyclean-depend distclean-depend clean-depend \
maintainer-clean-depend info-am info dvi-am dvi check check-am \
installcheck-am installcheck install-exec-am install-exec \
install-data-local install-data-am install-data install-am install \
uninstall-am uninstall all-redirect all-am all installdirs-am \
installdirs mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


#
# Dependencies to allow ntop loading plugins on-place
# by default ntop looks for plugins in the plugins/ subdirectory
#

%Plugin.so$(EXEEXT): .libs/lib%Plugin.so
	$(LN_S) $< $@

# Need to make sure autotools doesn't insert rules for us
icmpPlugin.so$(EXEEXT):     .libs/libicmpPlugin.so
lastSeenPlugin.so$(EXEEXT): .libs/liblastSeenPlugin.so
netflowPlugin.so$(EXEEXT):  .libs/libnetflowPlugin.so
pdaPlugin.so$(EXEEXT):      .libs/libpdaPlugin.so
rrdPlugin.so$(EXEEXT):      .libs/librrdPlugin.so
snmpPlugin.so$(EXEEXT):     .libs/libsnmpPlugin.so
sflowPlugin.so$(EXEEXT):    .libs/libsflowPlugin.so
xmldumpPlugin.so$(EXEEXT):  .libs/libxmldumpPlugin.so

#
# Create symlinks for the plugins
#

install-data-local:
	for file in $(lib_LTLIBRARIES); do \
		rm -f $(DESTDIR)$(libdir)/$$file; \
	done
	$(top_srcdir)/mkinstalldirs $(DESTDIR)$(plugindir)
	for file in $(noinst_PROGRAMS) ; do \
		$(LN_S) $(libdir)/lib$$file $(DESTDIR)$(plugindir)/$$file ; \
	done

#
# Special stuff for xml auto-generation of code from the "doc":
#
xmldumpPlugin.$(OBJEXT): xml_g_intf.inc

xmldumpPlugin.c: xml_*.inc globals-structtypes.xml

xml_*.inc: globals-structtypes.xml
	@echo "Processing globals-structtypes.xml to make xml_*.inc..."
	@@AWK@ -f ../utils/xmldump.awk globals-structtypes.xml

.NOTPARALLEL:

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
