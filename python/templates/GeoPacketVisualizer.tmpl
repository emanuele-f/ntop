<script type="text/javascript" src="http://www.google.com/jsapi"></script>
<script type="text/javascript">
	google.load('visualization', '1', {packages: ['geomap', 'table']});

function drawVisualization() {
	var firstRun=true;
	function createCountryTable(){
		var countryT = new google.visualization.DataTable();
		
		countryT.addColumn('number', 'LATITUDE', 'Latitude');
		countryT.addColumn('number', 'LONGITUDE', 'Longitude');
		countryT.addColumn('number', 'Num Hosts', 'Value');
		countryT.addColumn('string', 'City', 'Hover');
		return countryT;
	}
	
	var data = new google.visualization.DataTable();	/*main table that retain information on each */
	var array= [];						/*associative array for countrycode->ObjTableCityForCountry */

	var emptyTable = createCountryTable();			/*empty table used for enabling the selection
						 		*(and the zooming) of countries with no traffic recorded 
						 		*/
	emptyTable.addRow( [0.000000, 0.000000, 0, 'None'] );
	
	data.addColumn('string', 'Code');
	data.addColumn('number', 'Num Hosts');
	data.addColumn('string', 'Country');
	
% for key in countries:
<%
	country = countries[key]
	dizCities = country.getDictionaryCities()
	cod = country.getCode()
%>\

	data.addRow( ['${cod}', ${country.getTotal()}, '${country.getName()}' ] );

<%
	j=0
	found=False
	x=0
%>\
	var ${cod}Table = createCountryTable();
	${cod}Table.addRows([
	  % for key2 in dizCities:
<%		city=dizCities[key2] %>\
% if (j+1) != len(dizCities) :
		[${city.getLatitude()}, ${city.getLongitude()}, ${city.getTotalHosts()}, '${city.getName()}'],\
% else :
		[${city.getLatitude()}, ${city.getLongitude()}, ${city.getTotalHosts()}, '${city.getName()}']\
% endif
% if city.getName() == 'Unknown' and (not found):
<%
	found=True
	x=j
%>\
% endif
<%
	  j += 1
%>
	% endfor
	]);	
% if found:

    	${cod}Table.setTableProperty('unk', ${x});
% endif

	array.${cod}=${cod}Table;					//assigns countrycode to countrytable "${country.getName().upper()}"
	
% endfor

	var geomap = new google.visualization.GeoMap(document.getElementById('GeoMappa'));

	var options={
	width: '900px', 
	height: '691px', 
	showLegend: true, 
	region: 'world', 
	dataMode: 'regions'
	};
	
	var table = new google.visualization.Table(document.getElementById('table'));

	var viewTable= new google.visualization.DataView(data);
	
	
	var table2 = new google.visualization.Table(document.getElementById('table2'));
	
	/*Called when clicking on the world map. Switch to the region and show table cities */
	function clickHandler(msg) {
		options.region = msg.region;
		options.showZoomOut=true;
		options.colors = [0x9999FF, 0x0000FF, 0x000066];
		options.dataMode = 'markers';
		
		if(array[msg.region]){
			var view= new google.visualization.DataView(array[msg.region]);
			view.setColumns([3, 2]);
			var countryV=new google.visualization.DataView(array[msg.region]);
			var toHide=(array[msg.region]).getTableProperty('unk');
			if(toHide!==null){
				if(countryV.getNumberOfRows()===1){
					countryV=emptyTable;			//FIX if just one row and unknown
				}else{
					countryV.hideRows([toHide]);
				}
			}
		table2.draw(view,null);
		geomap.draw(countryV, options);	
		}else{
		  geomap.draw(emptyTable, options);
		  var temp=document.getElementById('table2');
		  temp.removeChild(temp.firstChild);
		}
	}
	/*Called when clicking on a table. recover the data from the row and call clickhandler*/
	function tableClick() {
		var temp=table.getSelection();
		var arrayAss=[];
		arrayAss.region=data.getFormattedValue(temp[0].row, 0);
		clickHandler(arrayAss);
	}
	
	/*puts back all the options for visualizing the world map again*/
	function zoomOut(){
		options.region= 'world';
		options.showZoomOut=false;
		options.colors = [0xE0FFD4, 0xA5EF63, 0x50AA00, 0x267114];
		options.dataMode='regions';
		table.setSelection();
		geomap.setSelection();
		geomap.draw(data,options);
		var temp=document.getElementById('table2');
		temp.removeChild(temp.firstChild);
	}
	google.visualization.events.addListener(geomap, 'regionClick', clickHandler);
	google.visualization.events.addListener(geomap, 'zoomOut', zoomOut);
	google.visualization.events.addListener(table, 'select', tableClick );
	
	viewTable.setColumns([2,1,0]);
	table.draw(viewTable, { sortColumn: 1, sortAscending: false} );

	geomap.draw(data, options);
}

	google.setOnLoadCallback(drawVisualization);
</script>


<center>	
<p class="nobottomgap">Click on a region of the map or on a row of the table to see the information collected on that region</p>
<p>&nbsp;</p>
<table cellspacing="5">
	<tr>
	<td colspan="2"><div id="GeoMappa" style="width: 920px; height: 720px;"></div>
</td>
	</tr>
<tr>

	<td height="50" colspan="2">&nbsp;</td>
	</tr>
<tr>
	<td valign="top"><div id="table" style="width: 300px;"></div>
	</td>

	<td valign="top">
	<table width="100%" border="0" cellpadding="0" cellspacing="0">
	<tr>
	<td></td>
	</tr>
	</table>

<div id="table2" style="width: 220px;"> </div></td>
</tr>
</table>
<p>&nbsp;</p>
<table width="60%" border="1" cellpadding="2" cellspacing="0" >
	<tr><th colspan='3' scope="col" bgcolor="#F3F3F3">Geolocation Summary</th>
</tr>
<tr onMouseOver="this.bgColor = '#EDF3FE'" onMouseOut ="this.bgColor = '#FFFFFF'">
	<th width="80%" scope="row" bgcolor="#FFFFFF" align="left">Hosts considered for analysis</td>
	<td width="20%" align="right" scope="row">${totalHosts}</td>
</tr>
% if unknownCountries > 0:
<tr onMouseOver="this.bgColor = '#EDF3FE'" onMouseOut ="this.bgColor = '#FFFFFF'">
	<th width="80%" scope="row" bgcolor="#FFFFFF" align="left">Hosts located in unknown countries</td>
	<td width="20%" align="right" scope="row">${unknownCountries}</td>
</tr>
%endif

% if unknownCities > 0:
<tr onMouseOver="this.bgColor = '#EDF3FE'" onMouseOut ="this.bgColor = '#FFFFFF'">
	<th width="80%" scope="row" bgcolor="#FFFFFF" align="left">Hosts located in unknown cities</td>
	<td width="20%" align="right" scope="row">${unknownCities}</td>
</tr>
%endif

</table>
	<p>&nbsp;</p>

</center>
<p class="footrow">GeoPacketVisualizer by <a class="mailto" href="mailto:medici@ntop.org">Gianluca Medici</a>. 

